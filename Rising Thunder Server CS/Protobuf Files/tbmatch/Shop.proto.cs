// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tbmatch/shop.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rising_Thunder_Server_CS.Protobufs.Tbmatch {

  /// <summary>Holder for reflection information generated from tbmatch/shop.proto</summary>
  public static partial class ShopReflection {

    #region Descriptor
    /// <summary>File descriptor for tbmatch/shop.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ShopReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJ0Ym1hdGNoL3Nob3AucHJvdG8SB3RibWF0Y2gaEXRicnBjL3RicnBjLnBy",
            "b3RvGhN0Ym1hdGNoL3F1ZXJ5LnByb3RvIqoBCg5CaWxsaW5nQWRkcmVzcxIS",
            "CgpmaXJzdF9uYW1lGAEgASgJEhEKCWxhc3RfbmFtZRgCIAEoCRIPCgdjb21w",
            "YW55GAMgASgJEg8KB2FkZHJlc3MYBCABKAkSDAoEY2l0eRgFIAEoCRINCgVz",
            "dGF0ZRgGIAEoCRILCgN6aXAYByABKAkSDwoHY291bnRyeRgIIAEoCRIUCgxw",
            "aG9uZV9udW1iZXIYCSABKAkipwEKDVBheW1lbnRNZXRob2QSEQoJbWV0aG9k",
            "X2lkGAEgASgDEhMKC2NhcmRfbnVtYmVyGAIgASgJEhAKCGNhcmRfZXhwGAMg",
            "ASgJEhAKCGNhcmRfY2N2GAQgASgJEhEKCWNhcmRfdHlwZRgFIAEoCRIoCgdi",
            "aWxsaW5nGAogASgLMhcudGJtYXRjaC5CaWxsaW5nQWRkcmVzcxINCgVsYWJl",
            "bBg8IAEoCSJnCh1HZXRTdG9yZWRQYXltZW50TWV0aG9kc1Jlc3VsdBIrCgtt",
            "ZXRob2RfbGlzdBgBIAMoCzIWLnRibWF0Y2guUGF5bWVudE1ldGhvZBIZChFk",
            "ZWZhdWx0X21ldGhvZF9pZBgCIAEoAyIkCg9QYXltZW50TWV0aG9kSWQSEQoJ",
            "bWV0aG9kX2lkGAEgASgDIl0KC1RyYW5zYWN0aW9uEhYKDnRyYW5zYWN0aW9u",
            "X2lkGCEgASgDEhoKEmF1dGhvcml6YXRpb25fY29kZRgiIAEoCRIaChJ0cmFu",
            "c2FjdGlvbl9zdGF0dXMYIyABKAkigAIKB0Z1bmRpbmcSJwoGc291cmNlGAEg",
            "ASgOMhcudGJtYXRjaC5GdW5kaW5nLlNvdXJjZRIYChBzdG9yZWRfbWV0aG9k",
            "X2lkGAIgASgDEh8KF3N0b3JlZF9tZXRob2RfY2FyZF9jb2RlGAMgASgJEi0K",
            "DWN1c3RvbV9tZXRob2QYBCABKAsyFi50Ym1hdGNoLlBheW1lbnRNZXRob2Qi",
            "YgoGU291cmNlEgsKB0ZTX05PTkUQABIWChJGU19BQ0NPVU5UX0JBTEFOQ0UQ",
            "ARIVChFGU19TVE9SRURfREVGQVVMVBACEg0KCUZTX1NUT1JFRBADEg0KCUZT",
            "X0NVU1RPTRAEIlgKEVB1cmNoYXNlT3JkZXJJdGVtEg8KB2l0ZW1faWQYASAB",
            "KAMSEAoIcXVhbnRpdHkYCiABKAUSIAoKdW5pdF9wcmljZRgLIAEoCzIMLnRi",
            "cnBjLk1vbmV5IuADCg1QdXJjaGFzZU9yZGVyEhQKDG9yZGVyX251bWJlchgB",
            "IAEoAxIQCghjdXJyZW5jeRgCIAEoCRIoCgRpdGVtGAMgAygLMhoudGJtYXRj",
            "aC5QdXJjaGFzZU9yZGVySXRlbRIgCgp0YXhfYW1vdW50GAQgASgLMgwudGJy",
            "cGMuTW9uZXkSIQoLc2hpcF9hbW91bnQYBSABKAsyDC50YnJwYy5Nb25leRIi",
            "Cgx0b3RhbF9hbW91bnQYBiABKAsyDC50YnJwYy5Nb25leRIkCgZzdGF0dXMY",
            "CiABKA4yFC50Ym1hdGNoLk9yZGVyU3RhdHVzEhsKE3VzZV9hY2NvdW50X2Jh",
            "bGFuY2UYCyABKAgSLgoOcGF5bWVudF9tZXRob2QYDCABKAsyFi50Ym1hdGNo",
            "LlBheW1lbnRNZXRob2QSEwoLY3JlYXRlX3RpbWUYDSABKAkSEwoLbW9kaWZ5",
            "X3RpbWUYDiABKAkSEgoKYWNjb3VudF9pZBggIAEoAxIxChNwYXltZW50X3Ry",
            "YW5zYWN0aW9uGCEgASgLMhQudGJtYXRjaC5UcmFuc2FjdGlvbhIwChJyZWZ1",
            "bmRfdHJhbnNhY3Rpb24YIiABKAsyFC50Ym1hdGNoLlRyYW5zYWN0aW9uIu0B",
            "CglPcmRlclNvcnQSKAoFZmlyc3QYASABKA4yGS50Ym1hdGNoLk9yZGVyU29y",
            "dC5Tb3J0QnkSKQoGc2Vjb25kGAIgASgOMhkudGJtYXRjaC5PcmRlclNvcnQu",
            "U29ydEJ5EhIKCmRlc2NlbmRpbmcYAyABKAgidwoGU29ydEJ5EhAKDFNPUlRf",
            "QllfWkVSTxAAEgwKCE9SREVSX0lEEAESCgoGU1RBVFVTEAISDwoLQ1JFQVRF",
            "X1RJTUUQAxIPCgtNT0RJRllfVElNRRAEEhAKDFRPVEFMX0FNT1VOVBAFEg0K",
            "CUxBU1RfTkFNRRAGIq8BChBCYWxhbmNlRW50cnlTb3J0Ei4KBHNvcnQYASAB",
            "KA4yIC50Ym1hdGNoLkJhbGFuY2VFbnRyeVNvcnQuU29ydEJ5EhIKCmRlc2Nl",
            "bmRpbmcYAyABKAgiVwoGU29ydEJ5EhAKDFNPUlRfQllfWkVSTxAAEgwKCE9S",
            "REVSX0lEEAESCgoGU1RBVFVTEAISDwoLQ1JFQVRFX1RJTUUQAxIQCgxFTlRS",
            "WV9BTU9VTlQQBCKZAQoMQmFsYW5jZUVudHJ5EhQKDG9yZGVyX251bWJlchgB",
            "IAEoAxIUCgxiYWxhbmNlX2xvYWQYAiABKAgSHAoGYW1vdW50GAMgASgLMgwu",
            "dGJycGMuTW9uZXkSKgoMb3JkZXJfc3RhdHVzGAQgASgOMhQudGJtYXRjaC5P",
            "cmRlclN0YXR1cxITCgtjcmVhdGVfdGltZRgFIAEoCSJmChpTdWJtaXRQdXJj",
            "aGFzZU9yZGVyUmVxdWVzdBIlCgVvcmRlchgBIAEoCzIWLnRibWF0Y2guUHVy",
            "Y2hhc2VPcmRlchIhCgdmdW5kaW5nGBQgASgLMhAudGJtYXRjaC5GdW5kaW5n",
            "Il0KGVN1Ym1pdFB1cmNoYXNlT3JkZXJSZXN1bHQSFAoMb3JkZXJfbnVtYmVy",
            "GAEgASgDEioKDG9yZGVyX3N0YXR1cxgCIAEoDjIULnRibWF0Y2guT3JkZXJT",
            "dGF0dXMiLwoXR2V0UHVyY2hhc2VPcmRlclJlcXVlc3QSFAoMb3JkZXJfbnVt",
            "YmVyGAEgASgDIlEKHUdldEFjY291bnRPcmRlckhpc3RvcnlSZXF1ZXN0EiAK",
            "BHNvcnQYAiABKAsyEi50Ym1hdGNoLk9yZGVyU29ydBIOCgZvZmZzZXQYBSAB",
            "KAUiWwocR2V0QWNjb3VudE9yZGVySGlzdG9yeVJlc3VsdBImCgZvcmRlcnMY",
            "ASADKAsyFi50Ym1hdGNoLlB1cmNoYXNlT3JkZXISEwoLZW5kX29mX2RhdGEY",
            "AiABKAgilQEKH0dldEFjY291bnRCYWxhbmNlSGlzdG9yeVJlcXVlc3QSEAoI",
            "Y3VycmVuY3kYASABKAkSJwoLY3JlYXRlX3RpbWUYAiABKAsyEi50Ym1hdGNo",
            "LlRpbWVSYW5nZRInCgRzb3J0GAQgASgLMhkudGJtYXRjaC5CYWxhbmNlRW50",
            "cnlTb3J0Eg4KBm9mZnNldBgFIAEoBSJtCh5HZXRBY2NvdW50QmFsYW5jZUhp",
            "c3RvcnlSZXN1bHQSEAoIY3VycmVuY3kYASABKAkSJAoFZW50cnkYAiADKAsy",
            "FS50Ym1hdGNoLkJhbGFuY2VFbnRyeRITCgtlbmRfb2ZfZGF0YRgDIAEoCCJF",
            "ChhHZXRBY2NvdW50QmFsYW5jZVJlcXVlc3QSEAoIY3VycmVuY3kYASABKAkS",
            "FwoPaW5jbHVkZV9wZW5kaW5nGAIgASgIImkKF0dldEFjY291bnRCYWxhbmNl",
            "UmVzdWx0EhAKCGN1cnJlbmN5GAEgASgJEh0KB2JhbGFuY2UYAiABKAsyDC50",
            "YnJwYy5Nb25leRIdCgdwZW5kaW5nGAMgASgLMgwudGJycGMuTW9uZXkqlwEK",
            "C09yZGVyU3RhdHVzEhUKEU9SREVSX1NUQVRVU19aRVJPEAASBwoDTkVXEAES",
            "CwoHUEVORElORxACEgoKBkZBSUxFRBADEgwKCENPTVBMRVRFEAQSDAoIQ0FO",
            "Q0VMRUQQBRISCg5SRVRVUk5fUEVORElORxAGEhEKDVJFVFVSTl9GQUlMRUQQ",
            "BxIMCghSRVRVUk5FRBAIMo4HCgtTaG9wU2VydmljZRJVChdHZXRTdG9yZWRQ",
            "YXltZW50TWV0aG9kcxIMLnRicnBjLkVtcHR5GiYudGJtYXRjaC5HZXRTdG9y",
            "ZWRQYXltZW50TWV0aG9kc1Jlc3VsdCIEyPMYChJHChlDcmVhdGVTdG9yZWRQ",
            "YXltZW50TWV0aG9kEhYudGJtYXRjaC5QYXltZW50TWV0aG9kGgwudGJycGMu",
            "RW1wdHkiBMjzGAoSRwoZVXBkYXRlU3RvcmVkUGF5bWVudE1ldGhvZBIWLnRi",
            "bWF0Y2guUGF5bWVudE1ldGhvZBoMLnRicnBjLkVtcHR5IgTI8xgKEk0KHVNl",
            "dERlZmF1bHRTdG9yZWRQYXltZW50TWV0aG9kEhgudGJtYXRjaC5QYXltZW50",
            "TWV0aG9kSWQaDC50YnJwYy5FbXB0eSIEyPMYChJJChlSZW1vdmVTdG9yZWRQ",
            "YXltZW50TWV0aG9kEhgudGJtYXRjaC5QYXltZW50TWV0aG9kSWQaDC50YnJw",
            "Yy5FbXB0eSIEyPMYChJkChNTdWJtaXRQdXJjaGFzZU9yZGVyEiMudGJtYXRj",
            "aC5TdWJtaXRQdXJjaGFzZU9yZGVyUmVxdWVzdBoiLnRibWF0Y2guU3VibWl0",
            "UHVyY2hhc2VPcmRlclJlc3VsdCIEyPMYChJSChBHZXRQdXJjaGFzZU9yZGVy",
            "EiAudGJtYXRjaC5HZXRQdXJjaGFzZU9yZGVyUmVxdWVzdBoWLnRibWF0Y2gu",
            "UHVyY2hhc2VPcmRlciIEyPMYChJtChZHZXRBY2NvdW50T3JkZXJIaXN0b3J5",
            "EiYudGJtYXRjaC5HZXRBY2NvdW50T3JkZXJIaXN0b3J5UmVxdWVzdBolLnRi",
            "bWF0Y2guR2V0QWNjb3VudE9yZGVySGlzdG9yeVJlc3VsdCIEyPMYChJzChhH",
            "ZXRBY2NvdW50QmFsYW5jZUhpc3RvcnkSKC50Ym1hdGNoLkdldEFjY291bnRC",
            "YWxhbmNlSGlzdG9yeVJlcXVlc3QaJy50Ym1hdGNoLkdldEFjY291bnRCYWxh",
            "bmNlSGlzdG9yeVJlc3VsdCIEyPMYChJeChFHZXRBY2NvdW50QmFsYW5jZRIh",
            "LnRibWF0Y2guR2V0QWNjb3VudEJhbGFuY2VSZXF1ZXN0GiAudGJtYXRjaC5H",
            "ZXRBY2NvdW50QmFsYW5jZVJlc3VsdCIEyPMYCmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.TbrpcReflection.Descriptor, global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.QueryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BillingAddress), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BillingAddress.Parser, new[]{ "FirstName", "LastName", "Company", "Address", "City", "State", "Zip", "Country", "PhoneNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod.Parser, new[]{ "MethodId", "CardNumber", "CardExp", "CardCcv", "CardType", "Billing", "Label" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetStoredPaymentMethodsResult), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetStoredPaymentMethodsResult.Parser, new[]{ "MethodList", "DefaultMethodId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethodId), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethodId.Parser, new[]{ "MethodId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Transaction), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Transaction.Parser, new[]{ "TransactionId", "AuthorizationCode", "TransactionStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Funding), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Funding.Parser, new[]{ "Source", "StoredMethodId", "StoredMethodCardCode", "CustomMethod" }, null, new[]{ typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Funding.Types.Source) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrderItem), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrderItem.Parser, new[]{ "ItemId", "Quantity", "UnitPrice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder.Parser, new[]{ "OrderNumber", "Currency", "Item", "TaxAmount", "ShipAmount", "TotalAmount", "Status", "UseAccountBalance", "PaymentMethod", "CreateTime", "ModifyTime", "AccountId", "PaymentTransaction", "RefundTransaction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort.Parser, new[]{ "First", "Second", "Descending" }, null, new[]{ typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort.Types.SortBy) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntrySort), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntrySort.Parser, new[]{ "Sort", "Descending" }, null, new[]{ typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntrySort.Types.SortBy) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntry), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntry.Parser, new[]{ "OrderNumber", "BalanceLoad", "Amount", "OrderStatus", "CreateTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.SubmitPurchaseOrderRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.SubmitPurchaseOrderRequest.Parser, new[]{ "Order", "Funding" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.SubmitPurchaseOrderResult), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.SubmitPurchaseOrderResult.Parser, new[]{ "OrderNumber", "OrderStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetPurchaseOrderRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetPurchaseOrderRequest.Parser, new[]{ "OrderNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountOrderHistoryRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountOrderHistoryRequest.Parser, new[]{ "Sort", "Offset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountOrderHistoryResult), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountOrderHistoryResult.Parser, new[]{ "Orders", "EndOfData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountBalanceHistoryRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountBalanceHistoryRequest.Parser, new[]{ "Currency", "CreateTime", "Sort", "Offset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountBalanceHistoryResult), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountBalanceHistoryResult.Parser, new[]{ "Currency", "Entry", "EndOfData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountBalanceRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountBalanceRequest.Parser, new[]{ "Currency", "IncludePending" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountBalanceResult), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetAccountBalanceResult.Parser, new[]{ "Currency", "Balance", "Pending" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OrderStatus {
    [pbr::OriginalName("ORDER_STATUS_ZERO")] Zero = 0,
    /// <summary>
    /// New order that has not been processed yet.
    /// </summary>
    [pbr::OriginalName("NEW")] New = 1,
    /// <summary>
    /// Order accepted and is pending settlement.
    /// </summary>
    [pbr::OriginalName("PENDING")] Pending = 2,
    /// <summary>
    /// Order payment method failed.
    /// </summary>
    [pbr::OriginalName("FAILED")] Failed = 3,
    /// <summary>
    /// Payment has been accepted and goods delivered.
    /// For item orders, this state occurs on approval.
    /// For balance loads, after settlement has been observed.
    /// </summary>
    [pbr::OriginalName("COMPLETE")] Complete = 4,
    /// <summary>
    /// Order canceled before payment settled.
    /// Any goods that delivered in advance have been returned.
    /// </summary>
    [pbr::OriginalName("CANCELED")] Canceled = 5,
    /// <summary>
    /// Item return / refund requested; pending settlement.
    /// </summary>
    [pbr::OriginalName("RETURN_PENDING")] ReturnPending = 6,
    /// <summary>
    /// Refund was approved but failed to settle.  Items not returned.
    /// </summary>
    [pbr::OriginalName("RETURN_FAILED")] ReturnFailed = 7,
    /// <summary>
    /// Refund settled and items returned.
    /// </summary>
    [pbr::OriginalName("RETURNED")] Returned = 8,
  }

  #endregion

  #region Messages
  public sealed partial class BillingAddress : pb::IMessage<BillingAddress> {
    private static readonly pb::MessageParser<BillingAddress> _parser = new pb::MessageParser<BillingAddress>(() => new BillingAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAddress(BillingAddress other) : this() {
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      company_ = other.company_;
      address_ = other.address_;
      city_ = other.city_;
      state_ = other.state_;
      zip_ = other.zip_;
      country_ = other.country_;
      phoneNumber_ = other.phoneNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAddress Clone() {
      return new BillingAddress(this);
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 1;
    private string firstName_ = "";
    /// <summary>
    /// AuthNet customerAddressType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_name" field.</summary>
    public const int LastNameFieldNumber = 2;
    private string lastName_ = "";
    /// <summary>
    /// 50
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "company" field.</summary>
    public const int CompanyFieldNumber = 3;
    private string company_ = "";
    /// <summary>
    /// 50
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Company {
      get { return company_; }
      set {
        company_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 4;
    private string address_ = "";
    /// <summary>
    /// Obscured on fetch.  Submit obscured value to leave unchanged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 5;
    private string city_ = "";
    /// <summary>
    /// 40
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private string state_ = "";
    /// <summary>
    /// 40
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zip" field.</summary>
    public const int ZipFieldNumber = 7;
    private string zip_ = "";
    /// <summary>
    /// 20
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zip {
      get { return zip_; }
      set {
        zip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 8;
    private string country_ = "";
    /// <summary>
    /// 60
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone_number" field.</summary>
    public const int PhoneNumberFieldNumber = 9;
    private string phoneNumber_ = "";
    /// <summary>
    /// Obscured on fetch.  Submit obscured value to leave unchanged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Company != other.Company) return false;
      if (Address != other.Address) return false;
      if (City != other.City) return false;
      if (State != other.State) return false;
      if (Zip != other.Zip) return false;
      if (Country != other.Country) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Company.Length != 0) hash ^= Company.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (Zip.Length != 0) hash ^= Zip.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirstName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LastName);
      }
      if (Company.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Company);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (City.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(City);
      }
      if (State.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(State);
      }
      if (Zip.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Zip);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Country);
      }
      if (PhoneNumber.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Company.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Company);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (Zip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zip);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (PhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingAddress other) {
      if (other == null) {
        return;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Company.Length != 0) {
        Company = other.Company;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.Zip.Length != 0) {
        Zip = other.Zip;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.PhoneNumber.Length != 0) {
        PhoneNumber = other.PhoneNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirstName = input.ReadString();
            break;
          }
          case 18: {
            LastName = input.ReadString();
            break;
          }
          case 26: {
            Company = input.ReadString();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 42: {
            City = input.ReadString();
            break;
          }
          case 50: {
            State = input.ReadString();
            break;
          }
          case 58: {
            Zip = input.ReadString();
            break;
          }
          case 66: {
            Country = input.ReadString();
            break;
          }
          case 74: {
            PhoneNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaymentMethod : pb::IMessage<PaymentMethod> {
    private static readonly pb::MessageParser<PaymentMethod> _parser = new pb::MessageParser<PaymentMethod>(() => new PaymentMethod());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaymentMethod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentMethod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentMethod(PaymentMethod other) : this() {
      methodId_ = other.methodId_;
      cardNumber_ = other.cardNumber_;
      cardExp_ = other.cardExp_;
      cardCcv_ = other.cardCcv_;
      cardType_ = other.cardType_;
      Billing = other.billing_ != null ? other.Billing.Clone() : null;
      label_ = other.label_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentMethod Clone() {
      return new PaymentMethod(this);
    }

    /// <summary>Field number for the "method_id" field.</summary>
    public const int MethodIdFieldNumber = 1;
    private long methodId_;
    /// <summary>
    /// Unique ID provided by server. Leave unset during creation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MethodId {
      get { return methodId_; }
      set {
        methodId_ = value;
      }
    }

    /// <summary>Field number for the "card_number" field.</summary>
    public const int CardNumberFieldNumber = 2;
    private string cardNumber_ = "";
    /// <summary>
    /// 13-16 digits, no dashes or spaces.
    /// Obscured on fetch.  Submit obscured value to leave unchanged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardNumber {
      get { return cardNumber_; }
      set {
        cardNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "card_exp" field.</summary>
    public const int CardExpFieldNumber = 3;
    private string cardExp_ = "";
    /// <summary>
    /// YYYY-MM
    /// Obscured on fetch.  Submit obscured value to leave unchanged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardExp {
      get { return cardExp_; }
      set {
        cardExp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "card_ccv" field.</summary>
    public const int CardCcvFieldNumber = 4;
    private string cardCcv_ = "";
    /// <summary>
    /// 3 or 4 digit CCV numeric value.  Not stored in AuthNet, but used
    /// during validation of create stored method, update stored method, and
    /// for transactions with a custom payment method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardCcv {
      get { return cardCcv_; }
      set {
        cardCcv_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "card_type" field.</summary>
    public const int CardTypeFieldNumber = 5;
    private string cardType_ = "";
    /// <summary>
    /// Observed card issuer type (Visa, Discover, etc).  This field is
    /// ignored for stored payment methods, but may be returned for
    /// processed orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardType {
      get { return cardType_; }
      set {
        cardType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "billing" field.</summary>
    public const int BillingFieldNumber = 10;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BillingAddress billing_;
    /// <summary>
    /// The billing address.
    ///
    /// Unset indicates this payment method should use the account's
    /// first and last name, country, and current contact address.
    /// It is an error to leave unset when the contact address has not
    /// yet been stored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BillingAddress Billing {
      get { return billing_; }
      set {
        billing_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 60;
    private string label_ = "";
    /// <summary>
    /// Payment label, used to easily identify the card to the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaymentMethod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaymentMethod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MethodId != other.MethodId) return false;
      if (CardNumber != other.CardNumber) return false;
      if (CardExp != other.CardExp) return false;
      if (CardCcv != other.CardCcv) return false;
      if (CardType != other.CardType) return false;
      if (!object.Equals(Billing, other.Billing)) return false;
      if (Label != other.Label) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MethodId != 0L) hash ^= MethodId.GetHashCode();
      if (CardNumber.Length != 0) hash ^= CardNumber.GetHashCode();
      if (CardExp.Length != 0) hash ^= CardExp.GetHashCode();
      if (CardCcv.Length != 0) hash ^= CardCcv.GetHashCode();
      if (CardType.Length != 0) hash ^= CardType.GetHashCode();
      if (billing_ != null) hash ^= Billing.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MethodId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MethodId);
      }
      if (CardNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CardNumber);
      }
      if (CardExp.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CardExp);
      }
      if (CardCcv.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CardCcv);
      }
      if (CardType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CardType);
      }
      if (billing_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Billing);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(226, 3);
        output.WriteString(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MethodId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MethodId);
      }
      if (CardNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardNumber);
      }
      if (CardExp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardExp);
      }
      if (CardCcv.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardCcv);
      }
      if (CardType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardType);
      }
      if (billing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Billing);
      }
      if (Label.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaymentMethod other) {
      if (other == null) {
        return;
      }
      if (other.MethodId != 0L) {
        MethodId = other.MethodId;
      }
      if (other.CardNumber.Length != 0) {
        CardNumber = other.CardNumber;
      }
      if (other.CardExp.Length != 0) {
        CardExp = other.CardExp;
      }
      if (other.CardCcv.Length != 0) {
        CardCcv = other.CardCcv;
      }
      if (other.CardType.Length != 0) {
        CardType = other.CardType;
      }
      if (other.billing_ != null) {
        if (billing_ == null) {
          billing_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BillingAddress();
        }
        Billing.MergeFrom(other.Billing);
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MethodId = input.ReadInt64();
            break;
          }
          case 18: {
            CardNumber = input.ReadString();
            break;
          }
          case 26: {
            CardExp = input.ReadString();
            break;
          }
          case 34: {
            CardCcv = input.ReadString();
            break;
          }
          case 42: {
            CardType = input.ReadString();
            break;
          }
          case 82: {
            if (billing_ == null) {
              billing_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BillingAddress();
            }
            input.ReadMessage(billing_);
            break;
          }
          case 482: {
            Label = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStoredPaymentMethodsResult : pb::IMessage<GetStoredPaymentMethodsResult> {
    private static readonly pb::MessageParser<GetStoredPaymentMethodsResult> _parser = new pb::MessageParser<GetStoredPaymentMethodsResult>(() => new GetStoredPaymentMethodsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStoredPaymentMethodsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStoredPaymentMethodsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStoredPaymentMethodsResult(GetStoredPaymentMethodsResult other) : this() {
      methodList_ = other.methodList_.Clone();
      defaultMethodId_ = other.defaultMethodId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStoredPaymentMethodsResult Clone() {
      return new GetStoredPaymentMethodsResult(this);
    }

    /// <summary>Field number for the "method_list" field.</summary>
    public const int MethodListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod> _repeated_methodList_codec
        = pb::FieldCodec.ForMessage(10, global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod.Parser);
    private readonly pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod> methodList_ = new pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod>();
    /// <summary>
    /// List of all stored payment methods.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod> MethodList {
      get { return methodList_; }
    }

    /// <summary>Field number for the "default_method_id" field.</summary>
    public const int DefaultMethodIdFieldNumber = 2;
    private long defaultMethodId_;
    /// <summary>
    /// Which method is set as the default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DefaultMethodId {
      get { return defaultMethodId_; }
      set {
        defaultMethodId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStoredPaymentMethodsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStoredPaymentMethodsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!methodList_.Equals(other.methodList_)) return false;
      if (DefaultMethodId != other.DefaultMethodId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= methodList_.GetHashCode();
      if (DefaultMethodId != 0L) hash ^= DefaultMethodId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      methodList_.WriteTo(output, _repeated_methodList_codec);
      if (DefaultMethodId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DefaultMethodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += methodList_.CalculateSize(_repeated_methodList_codec);
      if (DefaultMethodId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DefaultMethodId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStoredPaymentMethodsResult other) {
      if (other == null) {
        return;
      }
      methodList_.Add(other.methodList_);
      if (other.DefaultMethodId != 0L) {
        DefaultMethodId = other.DefaultMethodId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            methodList_.AddEntriesFrom(input, _repeated_methodList_codec);
            break;
          }
          case 16: {
            DefaultMethodId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaymentMethodId : pb::IMessage<PaymentMethodId> {
    private static readonly pb::MessageParser<PaymentMethodId> _parser = new pb::MessageParser<PaymentMethodId>(() => new PaymentMethodId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaymentMethodId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentMethodId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentMethodId(PaymentMethodId other) : this() {
      methodId_ = other.methodId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentMethodId Clone() {
      return new PaymentMethodId(this);
    }

    /// <summary>Field number for the "method_id" field.</summary>
    public const int MethodIdFieldNumber = 1;
    private long methodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MethodId {
      get { return methodId_; }
      set {
        methodId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaymentMethodId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaymentMethodId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MethodId != other.MethodId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MethodId != 0L) hash ^= MethodId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MethodId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MethodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MethodId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MethodId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaymentMethodId other) {
      if (other == null) {
        return;
      }
      if (other.MethodId != 0L) {
        MethodId = other.MethodId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MethodId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// State of a merchant gateway transaction.
  /// </summary>
  public sealed partial class Transaction : pb::IMessage<Transaction> {
    private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction(Transaction other) : this() {
      transactionId_ = other.transactionId_;
      authorizationCode_ = other.authorizationCode_;
      transactionStatus_ = other.transactionStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction Clone() {
      return new Transaction(this);
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 33;
    private long transactionId_;
    /// <summary>
    /// External payment transaction ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = value;
      }
    }

    /// <summary>Field number for the "authorization_code" field.</summary>
    public const int AuthorizationCodeFieldNumber = 34;
    private string authorizationCode_ = "";
    /// <summary>
    /// Payment processor generated authorization code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorizationCode {
      get { return authorizationCode_; }
      set {
        authorizationCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction_status" field.</summary>
    public const int TransactionStatusFieldNumber = 35;
    private string transactionStatus_ = "";
    /// <summary>
    /// Last observed external transaction state.
    /// See http://www.authorize.net/support/ReportingGuide_XML.pdf page 26.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionStatus {
      get { return transactionStatus_; }
      set {
        transactionStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (AuthorizationCode != other.AuthorizationCode) return false;
      if (TransactionStatus != other.TransactionStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId != 0L) hash ^= TransactionId.GetHashCode();
      if (AuthorizationCode.Length != 0) hash ^= AuthorizationCode.GetHashCode();
      if (TransactionStatus.Length != 0) hash ^= TransactionStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId != 0L) {
        output.WriteRawTag(136, 2);
        output.WriteInt64(TransactionId);
      }
      if (AuthorizationCode.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(AuthorizationCode);
      }
      if (TransactionStatus.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(TransactionStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TransactionId);
      }
      if (AuthorizationCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuthorizationCode);
      }
      if (TransactionStatus.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TransactionStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transaction other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId != 0L) {
        TransactionId = other.TransactionId;
      }
      if (other.AuthorizationCode.Length != 0) {
        AuthorizationCode = other.AuthorizationCode;
      }
      if (other.TransactionStatus.Length != 0) {
        TransactionStatus = other.TransactionStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 264: {
            TransactionId = input.ReadInt64();
            break;
          }
          case 274: {
            AuthorizationCode = input.ReadString();
            break;
          }
          case 282: {
            TransactionStatus = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Funding : pb::IMessage<Funding> {
    private static readonly pb::MessageParser<Funding> _parser = new pb::MessageParser<Funding>(() => new Funding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Funding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Funding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Funding(Funding other) : this() {
      source_ = other.source_;
      storedMethodId_ = other.storedMethodId_;
      storedMethodCardCode_ = other.storedMethodCardCode_;
      CustomMethod = other.customMethod_ != null ? other.CustomMethod.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Funding Clone() {
      return new Funding(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Funding.Types.Source source_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Funding.Types.Source Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "stored_method_id" field.</summary>
    public const int StoredMethodIdFieldNumber = 2;
    private long storedMethodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StoredMethodId {
      get { return storedMethodId_; }
      set {
        storedMethodId_ = value;
      }
    }

    /// <summary>Field number for the "stored_method_card_code" field.</summary>
    public const int StoredMethodCardCodeFieldNumber = 3;
    private string storedMethodCardCode_ = "";
    /// <summary>
    /// When using a stored method, use this CVV value for validation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StoredMethodCardCode {
      get { return storedMethodCardCode_; }
      set {
        storedMethodCardCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "custom_method" field.</summary>
    public const int CustomMethodFieldNumber = 4;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod customMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod CustomMethod {
      get { return customMethod_; }
      set {
        customMethod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Funding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Funding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Source != other.Source) return false;
      if (StoredMethodId != other.StoredMethodId) return false;
      if (StoredMethodCardCode != other.StoredMethodCardCode) return false;
      if (!object.Equals(CustomMethod, other.CustomMethod)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Source != 0) hash ^= Source.GetHashCode();
      if (StoredMethodId != 0L) hash ^= StoredMethodId.GetHashCode();
      if (StoredMethodCardCode.Length != 0) hash ^= StoredMethodCardCode.GetHashCode();
      if (customMethod_ != null) hash ^= CustomMethod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Source != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Source);
      }
      if (StoredMethodId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StoredMethodId);
      }
      if (StoredMethodCardCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StoredMethodCardCode);
      }
      if (customMethod_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CustomMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Source != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
      }
      if (StoredMethodId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StoredMethodId);
      }
      if (StoredMethodCardCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoredMethodCardCode);
      }
      if (customMethod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CustomMethod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Funding other) {
      if (other == null) {
        return;
      }
      if (other.Source != 0) {
        Source = other.Source;
      }
      if (other.StoredMethodId != 0L) {
        StoredMethodId = other.StoredMethodId;
      }
      if (other.StoredMethodCardCode.Length != 0) {
        StoredMethodCardCode = other.StoredMethodCardCode;
      }
      if (other.customMethod_ != null) {
        if (customMethod_ == null) {
          customMethod_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod();
        }
        CustomMethod.MergeFrom(other.CustomMethod);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            source_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Funding.Types.Source) input.ReadEnum();
            break;
          }
          case 16: {
            StoredMethodId = input.ReadInt64();
            break;
          }
          case 26: {
            StoredMethodCardCode = input.ReadString();
            break;
          }
          case 34: {
            if (customMethod_ == null) {
              customMethod_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod();
            }
            input.ReadMessage(customMethod_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Funding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Source {
        /// <summary>
        /// None indicated.
        /// </summary>
        [pbr::OriginalName("FS_NONE")] FsNone = 0,
        /// <summary>
        /// Use available account balance for the order's currency.
        /// </summary>
        [pbr::OriginalName("FS_ACCOUNT_BALANCE")] FsAccountBalance = 1,
        /// <summary>
        /// Use the current default stored payment method.
        /// </summary>
        [pbr::OriginalName("FS_STORED_DEFAULT")] FsStoredDefault = 2,
        /// <summary>
        /// Use the stored payment method identified by stored_method_id.
        /// </summary>
        [pbr::OriginalName("FS_STORED")] FsStored = 3,
        /// <summary>
        /// Use a custom payment method described by custom_method.
        /// </summary>
        [pbr::OriginalName("FS_CUSTOM")] FsCustom = 4,
      }

    }
    #endregion

  }

  public sealed partial class PurchaseOrderItem : pb::IMessage<PurchaseOrderItem> {
    private static readonly pb::MessageParser<PurchaseOrderItem> _parser = new pb::MessageParser<PurchaseOrderItem>(() => new PurchaseOrderItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseOrderItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseOrderItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseOrderItem(PurchaseOrderItem other) : this() {
      itemId_ = other.itemId_;
      quantity_ = other.quantity_;
      UnitPrice = other.unitPrice_ != null ? other.UnitPrice.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseOrderItem Clone() {
      return new PurchaseOrderItem(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private long itemId_;
    /// <summary>
    /// Catalog item ID of the item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 10;
    private int quantity_;
    /// <summary>
    /// Quantity of this item to be purchased.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "unit_price" field.</summary>
    public const int UnitPriceFieldNumber = 11;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money unitPrice_;
    /// <summary>
    /// Unit price for the item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money UnitPrice {
      get { return unitPrice_; }
      set {
        unitPrice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseOrderItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseOrderItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Quantity != other.Quantity) return false;
      if (!object.Equals(UnitPrice, other.UnitPrice)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0L) hash ^= ItemId.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (unitPrice_ != null) hash ^= UnitPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Quantity);
      }
      if (unitPrice_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(UnitPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ItemId);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (unitPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseOrderItem other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0L) {
        ItemId = other.ItemId;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.unitPrice_ != null) {
        if (unitPrice_ == null) {
          unitPrice_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
        }
        UnitPrice.MergeFrom(other.UnitPrice);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt64();
            break;
          }
          case 80: {
            Quantity = input.ReadInt32();
            break;
          }
          case 90: {
            if (unitPrice_ == null) {
              unitPrice_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
            }
            input.ReadMessage(unitPrice_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurchaseOrder : pb::IMessage<PurchaseOrder> {
    private static readonly pb::MessageParser<PurchaseOrder> _parser = new pb::MessageParser<PurchaseOrder>(() => new PurchaseOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseOrder(PurchaseOrder other) : this() {
      orderNumber_ = other.orderNumber_;
      currency_ = other.currency_;
      item_ = other.item_.Clone();
      TaxAmount = other.taxAmount_ != null ? other.TaxAmount.Clone() : null;
      ShipAmount = other.shipAmount_ != null ? other.ShipAmount.Clone() : null;
      TotalAmount = other.totalAmount_ != null ? other.TotalAmount.Clone() : null;
      status_ = other.status_;
      useAccountBalance_ = other.useAccountBalance_;
      PaymentMethod = other.paymentMethod_ != null ? other.PaymentMethod.Clone() : null;
      createTime_ = other.createTime_;
      modifyTime_ = other.modifyTime_;
      accountId_ = other.accountId_;
      PaymentTransaction = other.paymentTransaction_ != null ? other.PaymentTransaction.Clone() : null;
      RefundTransaction = other.refundTransaction_ != null ? other.RefundTransaction.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseOrder Clone() {
      return new PurchaseOrder(this);
    }

    /// <summary>Field number for the "order_number" field.</summary>
    public const int OrderNumberFieldNumber = 1;
    private long orderNumber_;
    /// <summary>
    /// System-generated order number.  Unset in new requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 2;
    private string currency_ = "";
    /// <summary>
    /// Currency used for all items and amounts in this order.
    /// For game currency, account balance funding source is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrderItem> _repeated_item_codec
        = pb::FieldCodec.ForMessage(26, global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrderItem.Parser);
    private readonly pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrderItem> item_ = new pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrderItem>();
    /// <summary>
    /// List of items requested for purchase.  Minimum 1, max 30.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrderItem> Item {
      get { return item_; }
    }

    /// <summary>Field number for the "tax_amount" field.</summary>
    public const int TaxAmountFieldNumber = 4;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money taxAmount_;
    /// <summary>
    /// Amount of tax and shipping included in the total.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money TaxAmount {
      get { return taxAmount_; }
      set {
        taxAmount_ = value;
      }
    }

    /// <summary>Field number for the "ship_amount" field.</summary>
    public const int ShipAmountFieldNumber = 5;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money shipAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money ShipAmount {
      get { return shipAmount_; }
      set {
        shipAmount_ = value;
      }
    }

    /// <summary>Field number for the "total_amount" field.</summary>
    public const int TotalAmountFieldNumber = 6;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money totalAmount_;
    /// <summary>
    /// Total amount to charge the customer for this order.
    /// Must be equal to the sum of each item unit price times quantity, plus tax.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money TotalAmount {
      get { return totalAmount_; }
      set {
        totalAmount_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderStatus status_ = 0;
    /// <summary>
    /// Status of the order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "use_account_balance" field.</summary>
    public const int UseAccountBalanceFieldNumber = 11;
    private bool useAccountBalance_;
    /// <summary>
    /// Was account balance used?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseAccountBalance {
      get { return useAccountBalance_; }
      set {
        useAccountBalance_ = value;
      }
    }

    /// <summary>Field number for the "payment_method" field.</summary>
    public const int PaymentMethodFieldNumber = 12;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod paymentMethod_;
    /// <summary>
    /// If not drawn from account balance, snapshot of the payment method used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod PaymentMethod {
      get { return paymentMethod_; }
      set {
        paymentMethod_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 13;
    private string createTime_ = "";
    /// <summary>
    /// Creation and last modification time (RFC3339).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateTime {
      get { return createTime_; }
      set {
        createTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modify_time" field.</summary>
    public const int ModifyTimeFieldNumber = 14;
    private string modifyTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyTime {
      get { return modifyTime_; }
      set {
        modifyTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 32;
    private long accountId_;
    /// <summary>
    /// Account that created the order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "payment_transaction" field.</summary>
    public const int PaymentTransactionFieldNumber = 33;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Transaction paymentTransaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Transaction PaymentTransaction {
      get { return paymentTransaction_; }
      set {
        paymentTransaction_ = value;
      }
    }

    /// <summary>Field number for the "refund_transaction" field.</summary>
    public const int RefundTransactionFieldNumber = 34;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Transaction refundTransaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Transaction RefundTransaction {
      get { return refundTransaction_; }
      set {
        refundTransaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderNumber != other.OrderNumber) return false;
      if (Currency != other.Currency) return false;
      if(!item_.Equals(other.item_)) return false;
      if (!object.Equals(TaxAmount, other.TaxAmount)) return false;
      if (!object.Equals(ShipAmount, other.ShipAmount)) return false;
      if (!object.Equals(TotalAmount, other.TotalAmount)) return false;
      if (Status != other.Status) return false;
      if (UseAccountBalance != other.UseAccountBalance) return false;
      if (!object.Equals(PaymentMethod, other.PaymentMethod)) return false;
      if (CreateTime != other.CreateTime) return false;
      if (ModifyTime != other.ModifyTime) return false;
      if (AccountId != other.AccountId) return false;
      if (!object.Equals(PaymentTransaction, other.PaymentTransaction)) return false;
      if (!object.Equals(RefundTransaction, other.RefundTransaction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderNumber != 0L) hash ^= OrderNumber.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      hash ^= item_.GetHashCode();
      if (taxAmount_ != null) hash ^= TaxAmount.GetHashCode();
      if (shipAmount_ != null) hash ^= ShipAmount.GetHashCode();
      if (totalAmount_ != null) hash ^= TotalAmount.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (UseAccountBalance != false) hash ^= UseAccountBalance.GetHashCode();
      if (paymentMethod_ != null) hash ^= PaymentMethod.GetHashCode();
      if (CreateTime.Length != 0) hash ^= CreateTime.GetHashCode();
      if (ModifyTime.Length != 0) hash ^= ModifyTime.GetHashCode();
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (paymentTransaction_ != null) hash ^= PaymentTransaction.GetHashCode();
      if (refundTransaction_ != null) hash ^= RefundTransaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrderNumber);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Currency);
      }
      item_.WriteTo(output, _repeated_item_codec);
      if (taxAmount_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TaxAmount);
      }
      if (shipAmount_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ShipAmount);
      }
      if (totalAmount_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TotalAmount);
      }
      if (Status != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (UseAccountBalance != false) {
        output.WriteRawTag(88);
        output.WriteBool(UseAccountBalance);
      }
      if (paymentMethod_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PaymentMethod);
      }
      if (CreateTime.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(CreateTime);
      }
      if (ModifyTime.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModifyTime);
      }
      if (AccountId != 0L) {
        output.WriteRawTag(128, 2);
        output.WriteInt64(AccountId);
      }
      if (paymentTransaction_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(PaymentTransaction);
      }
      if (refundTransaction_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(RefundTransaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderNumber);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      size += item_.CalculateSize(_repeated_item_codec);
      if (taxAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaxAmount);
      }
      if (shipAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShipAmount);
      }
      if (totalAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalAmount);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (UseAccountBalance != false) {
        size += 1 + 1;
      }
      if (paymentMethod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PaymentMethod);
      }
      if (CreateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateTime);
      }
      if (ModifyTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifyTime);
      }
      if (AccountId != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (paymentTransaction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PaymentTransaction);
      }
      if (refundTransaction_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RefundTransaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseOrder other) {
      if (other == null) {
        return;
      }
      if (other.OrderNumber != 0L) {
        OrderNumber = other.OrderNumber;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      item_.Add(other.item_);
      if (other.taxAmount_ != null) {
        if (taxAmount_ == null) {
          taxAmount_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
        }
        TaxAmount.MergeFrom(other.TaxAmount);
      }
      if (other.shipAmount_ != null) {
        if (shipAmount_ == null) {
          shipAmount_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
        }
        ShipAmount.MergeFrom(other.ShipAmount);
      }
      if (other.totalAmount_ != null) {
        if (totalAmount_ == null) {
          totalAmount_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
        }
        TotalAmount.MergeFrom(other.TotalAmount);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.UseAccountBalance != false) {
        UseAccountBalance = other.UseAccountBalance;
      }
      if (other.paymentMethod_ != null) {
        if (paymentMethod_ == null) {
          paymentMethod_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod();
        }
        PaymentMethod.MergeFrom(other.PaymentMethod);
      }
      if (other.CreateTime.Length != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.ModifyTime.Length != 0) {
        ModifyTime = other.ModifyTime;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.paymentTransaction_ != null) {
        if (paymentTransaction_ == null) {
          paymentTransaction_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Transaction();
        }
        PaymentTransaction.MergeFrom(other.PaymentTransaction);
      }
      if (other.refundTransaction_ != null) {
        if (refundTransaction_ == null) {
          refundTransaction_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Transaction();
        }
        RefundTransaction.MergeFrom(other.RefundTransaction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrderNumber = input.ReadInt64();
            break;
          }
          case 18: {
            Currency = input.ReadString();
            break;
          }
          case 26: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
          case 34: {
            if (taxAmount_ == null) {
              taxAmount_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
            }
            input.ReadMessage(taxAmount_);
            break;
          }
          case 42: {
            if (shipAmount_ == null) {
              shipAmount_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
            }
            input.ReadMessage(shipAmount_);
            break;
          }
          case 50: {
            if (totalAmount_ == null) {
              totalAmount_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
            }
            input.ReadMessage(totalAmount_);
            break;
          }
          case 80: {
            status_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderStatus) input.ReadEnum();
            break;
          }
          case 88: {
            UseAccountBalance = input.ReadBool();
            break;
          }
          case 98: {
            if (paymentMethod_ == null) {
              paymentMethod_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PaymentMethod();
            }
            input.ReadMessage(paymentMethod_);
            break;
          }
          case 106: {
            CreateTime = input.ReadString();
            break;
          }
          case 114: {
            ModifyTime = input.ReadString();
            break;
          }
          case 256: {
            AccountId = input.ReadInt64();
            break;
          }
          case 266: {
            if (paymentTransaction_ == null) {
              paymentTransaction_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Transaction();
            }
            input.ReadMessage(paymentTransaction_);
            break;
          }
          case 274: {
            if (refundTransaction_ == null) {
              refundTransaction_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Transaction();
            }
            input.ReadMessage(refundTransaction_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderSort : pb::IMessage<OrderSort> {
    private static readonly pb::MessageParser<OrderSort> _parser = new pb::MessageParser<OrderSort>(() => new OrderSort());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderSort> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderSort() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderSort(OrderSort other) : this() {
      first_ = other.first_;
      second_ = other.second_;
      descending_ = other.descending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderSort Clone() {
      return new OrderSort(this);
    }

    /// <summary>Field number for the "first" field.</summary>
    public const int FirstFieldNumber = 1;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort.Types.SortBy first_ = 0;
    /// <summary>
    /// First sort-by column.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort.Types.SortBy First {
      get { return first_; }
      set {
        first_ = value;
      }
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort.Types.SortBy second_ = 0;
    /// <summary>
    /// Secondary sort-by column.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort.Types.SortBy Second {
      get { return second_; }
      set {
        second_ = value;
      }
    }

    /// <summary>Field number for the "descending" field.</summary>
    public const int DescendingFieldNumber = 3;
    private bool descending_;
    /// <summary>
    /// Set to true for highest values first.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Descending {
      get { return descending_; }
      set {
        descending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderSort);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderSort other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (First != other.First) return false;
      if (Second != other.Second) return false;
      if (Descending != other.Descending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (First != 0) hash ^= First.GetHashCode();
      if (Second != 0) hash ^= Second.GetHashCode();
      if (Descending != false) hash ^= Descending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (First != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) First);
      }
      if (Second != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Second);
      }
      if (Descending != false) {
        output.WriteRawTag(24);
        output.WriteBool(Descending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (First != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) First);
      }
      if (Second != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Second);
      }
      if (Descending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderSort other) {
      if (other == null) {
        return;
      }
      if (other.First != 0) {
        First = other.First;
      }
      if (other.Second != 0) {
        Second = other.Second;
      }
      if (other.Descending != false) {
        Descending = other.Descending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            first_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort.Types.SortBy) input.ReadEnum();
            break;
          }
          case 16: {
            second_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort.Types.SortBy) input.ReadEnum();
            break;
          }
          case 24: {
            Descending = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the OrderSort message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SortBy {
        [pbr::OriginalName("SORT_BY_ZERO")] Zero = 0,
        [pbr::OriginalName("ORDER_ID")] OrderId = 1,
        [pbr::OriginalName("STATUS")] Status = 2,
        [pbr::OriginalName("CREATE_TIME")] CreateTime = 3,
        [pbr::OriginalName("MODIFY_TIME")] ModifyTime = 4,
        [pbr::OriginalName("TOTAL_AMOUNT")] TotalAmount = 5,
        [pbr::OriginalName("LAST_NAME")] LastName = 6,
      }

    }
    #endregion

  }

  public sealed partial class BalanceEntrySort : pb::IMessage<BalanceEntrySort> {
    private static readonly pb::MessageParser<BalanceEntrySort> _parser = new pb::MessageParser<BalanceEntrySort>(() => new BalanceEntrySort());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalanceEntrySort> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceEntrySort() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceEntrySort(BalanceEntrySort other) : this() {
      sort_ = other.sort_;
      descending_ = other.descending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceEntrySort Clone() {
      return new BalanceEntrySort(this);
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 1;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntrySort.Types.SortBy sort_ = 0;
    /// <summary>
    /// Sort-by column.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntrySort.Types.SortBy Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "descending" field.</summary>
    public const int DescendingFieldNumber = 3;
    private bool descending_;
    /// <summary>
    /// Set to true for highest values first.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Descending {
      get { return descending_; }
      set {
        descending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalanceEntrySort);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalanceEntrySort other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sort != other.Sort) return false;
      if (Descending != other.Descending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (Descending != false) hash ^= Descending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sort != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Sort);
      }
      if (Descending != false) {
        output.WriteRawTag(24);
        output.WriteBool(Descending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Sort);
      }
      if (Descending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalanceEntrySort other) {
      if (other == null) {
        return;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.Descending != false) {
        Descending = other.Descending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            sort_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntrySort.Types.SortBy) input.ReadEnum();
            break;
          }
          case 24: {
            Descending = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BalanceEntrySort message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SortBy {
        [pbr::OriginalName("SORT_BY_ZERO")] Zero = 0,
        [pbr::OriginalName("ORDER_ID")] OrderId = 1,
        [pbr::OriginalName("STATUS")] Status = 2,
        [pbr::OriginalName("CREATE_TIME")] CreateTime = 3,
        [pbr::OriginalName("ENTRY_AMOUNT")] EntryAmount = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Summary of an order that affected the account balance
  /// </summary>
  public sealed partial class BalanceEntry : pb::IMessage<BalanceEntry> {
    private static readonly pb::MessageParser<BalanceEntry> _parser = new pb::MessageParser<BalanceEntry>(() => new BalanceEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalanceEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceEntry(BalanceEntry other) : this() {
      orderNumber_ = other.orderNumber_;
      balanceLoad_ = other.balanceLoad_;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      orderStatus_ = other.orderStatus_;
      createTime_ = other.createTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceEntry Clone() {
      return new BalanceEntry(this);
    }

    /// <summary>Field number for the "order_number" field.</summary>
    public const int OrderNumberFieldNumber = 1;
    private long orderNumber_;
    /// <summary>
    /// Order number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    /// <summary>Field number for the "balance_load" field.</summary>
    public const int BalanceLoadFieldNumber = 2;
    private bool balanceLoad_;
    /// <summary>
    /// True for balance load events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BalanceLoad {
      get { return balanceLoad_; }
      set {
        balanceLoad_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money amount_;
    /// <summary>
    /// Amount of the balance change.  Balance loads will be positive,
    /// deductions will be negative.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "order_status" field.</summary>
    public const int OrderStatusFieldNumber = 4;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderStatus orderStatus_ = 0;
    /// <summary>
    /// Status of the order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderStatus OrderStatus {
      get { return orderStatus_; }
      set {
        orderStatus_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private string createTime_ = "";
    /// <summary>
    /// Creation time of the order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateTime {
      get { return createTime_; }
      set {
        createTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalanceEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalanceEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderNumber != other.OrderNumber) return false;
      if (BalanceLoad != other.BalanceLoad) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (OrderStatus != other.OrderStatus) return false;
      if (CreateTime != other.CreateTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderNumber != 0L) hash ^= OrderNumber.GetHashCode();
      if (BalanceLoad != false) hash ^= BalanceLoad.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (OrderStatus != 0) hash ^= OrderStatus.GetHashCode();
      if (CreateTime.Length != 0) hash ^= CreateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrderNumber);
      }
      if (BalanceLoad != false) {
        output.WriteRawTag(16);
        output.WriteBool(BalanceLoad);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (OrderStatus != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OrderStatus);
      }
      if (CreateTime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderNumber);
      }
      if (BalanceLoad != false) {
        size += 1 + 1;
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (OrderStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderStatus);
      }
      if (CreateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalanceEntry other) {
      if (other == null) {
        return;
      }
      if (other.OrderNumber != 0L) {
        OrderNumber = other.OrderNumber;
      }
      if (other.BalanceLoad != false) {
        BalanceLoad = other.BalanceLoad;
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.OrderStatus != 0) {
        OrderStatus = other.OrderStatus;
      }
      if (other.CreateTime.Length != 0) {
        CreateTime = other.CreateTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrderNumber = input.ReadInt64();
            break;
          }
          case 16: {
            BalanceLoad = input.ReadBool();
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 32: {
            orderStatus_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderStatus) input.ReadEnum();
            break;
          }
          case 42: {
            CreateTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Submit a purchase order.  Provide minimum required fields
  /// in PurchaseOrder, and specify a funding source.
  /// </summary>
  public sealed partial class SubmitPurchaseOrderRequest : pb::IMessage<SubmitPurchaseOrderRequest> {
    private static readonly pb::MessageParser<SubmitPurchaseOrderRequest> _parser = new pb::MessageParser<SubmitPurchaseOrderRequest>(() => new SubmitPurchaseOrderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitPurchaseOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPurchaseOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPurchaseOrderRequest(SubmitPurchaseOrderRequest other) : this() {
      Order = other.order_ != null ? other.Order.Clone() : null;
      Funding = other.funding_ != null ? other.Funding.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPurchaseOrderRequest Clone() {
      return new SubmitPurchaseOrderRequest(this);
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 1;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "funding" field.</summary>
    public const int FundingFieldNumber = 20;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Funding funding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Funding Funding {
      get { return funding_; }
      set {
        funding_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitPurchaseOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitPurchaseOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Order, other.Order)) return false;
      if (!object.Equals(Funding, other.Funding)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (order_ != null) hash ^= Order.GetHashCode();
      if (funding_ != null) hash ^= Funding.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
      if (funding_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Funding);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      if (funding_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Funding);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitPurchaseOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          order_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder();
        }
        Order.MergeFrom(other.Order);
      }
      if (other.funding_ != null) {
        if (funding_ == null) {
          funding_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Funding();
        }
        Funding.MergeFrom(other.Funding);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (order_ == null) {
              order_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder();
            }
            input.ReadMessage(order_);
            break;
          }
          case 162: {
            if (funding_ == null) {
              funding_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.Funding();
            }
            input.ReadMessage(funding_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitPurchaseOrderResult : pb::IMessage<SubmitPurchaseOrderResult> {
    private static readonly pb::MessageParser<SubmitPurchaseOrderResult> _parser = new pb::MessageParser<SubmitPurchaseOrderResult>(() => new SubmitPurchaseOrderResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitPurchaseOrderResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPurchaseOrderResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPurchaseOrderResult(SubmitPurchaseOrderResult other) : this() {
      orderNumber_ = other.orderNumber_;
      orderStatus_ = other.orderStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPurchaseOrderResult Clone() {
      return new SubmitPurchaseOrderResult(this);
    }

    /// <summary>Field number for the "order_number" field.</summary>
    public const int OrderNumberFieldNumber = 1;
    private long orderNumber_;
    /// <summary>
    /// Generated order number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    /// <summary>Field number for the "order_status" field.</summary>
    public const int OrderStatusFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderStatus orderStatus_ = 0;
    /// <summary>
    /// Current status of the order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderStatus OrderStatus {
      get { return orderStatus_; }
      set {
        orderStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitPurchaseOrderResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitPurchaseOrderResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderNumber != other.OrderNumber) return false;
      if (OrderStatus != other.OrderStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderNumber != 0L) hash ^= OrderNumber.GetHashCode();
      if (OrderStatus != 0) hash ^= OrderStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrderNumber);
      }
      if (OrderStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OrderStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderNumber);
      }
      if (OrderStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitPurchaseOrderResult other) {
      if (other == null) {
        return;
      }
      if (other.OrderNumber != 0L) {
        OrderNumber = other.OrderNumber;
      }
      if (other.OrderStatus != 0) {
        OrderStatus = other.OrderStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrderNumber = input.ReadInt64();
            break;
          }
          case 16: {
            orderStatus_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Load a specific purchase order.
  /// </summary>
  public sealed partial class GetPurchaseOrderRequest : pb::IMessage<GetPurchaseOrderRequest> {
    private static readonly pb::MessageParser<GetPurchaseOrderRequest> _parser = new pb::MessageParser<GetPurchaseOrderRequest>(() => new GetPurchaseOrderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPurchaseOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPurchaseOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPurchaseOrderRequest(GetPurchaseOrderRequest other) : this() {
      orderNumber_ = other.orderNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPurchaseOrderRequest Clone() {
      return new GetPurchaseOrderRequest(this);
    }

    /// <summary>Field number for the "order_number" field.</summary>
    public const int OrderNumberFieldNumber = 1;
    private long orderNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPurchaseOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPurchaseOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderNumber != other.OrderNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderNumber != 0L) hash ^= OrderNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrderNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPurchaseOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.OrderNumber != 0L) {
        OrderNumber = other.OrderNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrderNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Get the account's purchase order history.  Result size limit
  /// controlled by server configuration.
  /// </summary>
  public sealed partial class GetAccountOrderHistoryRequest : pb::IMessage<GetAccountOrderHistoryRequest> {
    private static readonly pb::MessageParser<GetAccountOrderHistoryRequest> _parser = new pb::MessageParser<GetAccountOrderHistoryRequest>(() => new GetAccountOrderHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountOrderHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountOrderHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountOrderHistoryRequest(GetAccountOrderHistoryRequest other) : this() {
      Sort = other.sort_ != null ? other.Sort.Clone() : null;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountOrderHistoryRequest Clone() {
      return new GetAccountOrderHistoryRequest(this);
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort sort_;
    /// <summary>
    /// Order sorting
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private int offset_;
    /// <summary>
    /// Skip past this many records in the result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountOrderHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountOrderHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Sort, other.Sort)) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sort_ != null) hash ^= Sort.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (Offset != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sort_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sort);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountOrderHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.sort_ != null) {
        if (sort_ == null) {
          sort_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort();
        }
        Sort.MergeFrom(other.Sort);
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (sort_ == null) {
              sort_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.OrderSort();
            }
            input.ReadMessage(sort_);
            break;
          }
          case 40: {
            Offset = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountOrderHistoryResult : pb::IMessage<GetAccountOrderHistoryResult> {
    private static readonly pb::MessageParser<GetAccountOrderHistoryResult> _parser = new pb::MessageParser<GetAccountOrderHistoryResult>(() => new GetAccountOrderHistoryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountOrderHistoryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountOrderHistoryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountOrderHistoryResult(GetAccountOrderHistoryResult other) : this() {
      orders_ = other.orders_.Clone();
      endOfData_ = other.endOfData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountOrderHistoryResult Clone() {
      return new GetAccountOrderHistoryResult(this);
    }

    /// <summary>Field number for the "orders" field.</summary>
    public const int OrdersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder> _repeated_orders_codec
        = pb::FieldCodec.ForMessage(10, global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder.Parser);
    private readonly pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder> orders_ = new pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder>();
    /// <summary>
    /// Orders that matched the criteria.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.PurchaseOrder> Orders {
      get { return orders_; }
    }

    /// <summary>Field number for the "end_of_data" field.</summary>
    public const int EndOfDataFieldNumber = 2;
    private bool endOfData_;
    /// <summary>
    /// True when the included results reached the end of the query result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EndOfData {
      get { return endOfData_; }
      set {
        endOfData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountOrderHistoryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountOrderHistoryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!orders_.Equals(other.orders_)) return false;
      if (EndOfData != other.EndOfData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= orders_.GetHashCode();
      if (EndOfData != false) hash ^= EndOfData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      orders_.WriteTo(output, _repeated_orders_codec);
      if (EndOfData != false) {
        output.WriteRawTag(16);
        output.WriteBool(EndOfData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orders_.CalculateSize(_repeated_orders_codec);
      if (EndOfData != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountOrderHistoryResult other) {
      if (other == null) {
        return;
      }
      orders_.Add(other.orders_);
      if (other.EndOfData != false) {
        EndOfData = other.EndOfData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orders_.AddEntriesFrom(input, _repeated_orders_codec);
            break;
          }
          case 16: {
            EndOfData = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountBalanceHistoryRequest : pb::IMessage<GetAccountBalanceHistoryRequest> {
    private static readonly pb::MessageParser<GetAccountBalanceHistoryRequest> _parser = new pb::MessageParser<GetAccountBalanceHistoryRequest>(() => new GetAccountBalanceHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountBalanceHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceHistoryRequest(GetAccountBalanceHistoryRequest other) : this() {
      currency_ = other.currency_;
      CreateTime = other.createTime_ != null ? other.CreateTime.Clone() : null;
      Sort = other.sort_ != null ? other.Sort.Clone() : null;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceHistoryRequest Clone() {
      return new GetAccountBalanceHistoryRequest(this);
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 1;
    private string currency_ = "";
    /// <summary>
    /// Currency of the balance.  If not specified, will use the
    /// account's default currency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange createTime_;
    /// <summary>
    /// Creation date time range.  Server may impose limit;
    /// will return last 30 days if not set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 4;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntrySort sort_;
    /// <summary>
    /// Sort order to sort the orders in short order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntrySort Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private int offset_;
    /// <summary>
    /// Skip past this many records in the result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountBalanceHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountBalanceHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Currency != other.Currency) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(Sort, other.Sort)) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (sort_ != null) hash ^= Sort.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Currency.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Currency);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (sort_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Sort);
      }
      if (Offset != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (sort_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sort);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountBalanceHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          createTime_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.sort_ != null) {
        if (sort_ == null) {
          sort_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntrySort();
        }
        Sort.MergeFrom(other.Sort);
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Currency = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              createTime_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange();
            }
            input.ReadMessage(createTime_);
            break;
          }
          case 34: {
            if (sort_ == null) {
              sort_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntrySort();
            }
            input.ReadMessage(sort_);
            break;
          }
          case 40: {
            Offset = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountBalanceHistoryResult : pb::IMessage<GetAccountBalanceHistoryResult> {
    private static readonly pb::MessageParser<GetAccountBalanceHistoryResult> _parser = new pb::MessageParser<GetAccountBalanceHistoryResult>(() => new GetAccountBalanceHistoryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountBalanceHistoryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceHistoryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceHistoryResult(GetAccountBalanceHistoryResult other) : this() {
      currency_ = other.currency_;
      entry_ = other.entry_.Clone();
      endOfData_ = other.endOfData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceHistoryResult Clone() {
      return new GetAccountBalanceHistoryResult(this);
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 1;
    private string currency_ = "";
    /// <summary>
    /// Currency of the affected balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntry> _repeated_entry_codec
        = pb::FieldCodec.ForMessage(18, global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntry.Parser);
    private readonly pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntry> entry_ = new pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntry>();
    /// <summary>
    /// Summaries of orders that affected the balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.BalanceEntry> Entry {
      get { return entry_; }
    }

    /// <summary>Field number for the "end_of_data" field.</summary>
    public const int EndOfDataFieldNumber = 3;
    private bool endOfData_;
    /// <summary>
    /// True when the included results reached the end of the query result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EndOfData {
      get { return endOfData_; }
      set {
        endOfData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountBalanceHistoryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountBalanceHistoryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Currency != other.Currency) return false;
      if(!entry_.Equals(other.entry_)) return false;
      if (EndOfData != other.EndOfData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      hash ^= entry_.GetHashCode();
      if (EndOfData != false) hash ^= EndOfData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Currency.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Currency);
      }
      entry_.WriteTo(output, _repeated_entry_codec);
      if (EndOfData != false) {
        output.WriteRawTag(24);
        output.WriteBool(EndOfData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      size += entry_.CalculateSize(_repeated_entry_codec);
      if (EndOfData != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountBalanceHistoryResult other) {
      if (other == null) {
        return;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      entry_.Add(other.entry_);
      if (other.EndOfData != false) {
        EndOfData = other.EndOfData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Currency = input.ReadString();
            break;
          }
          case 18: {
            entry_.AddEntriesFrom(input, _repeated_entry_codec);
            break;
          }
          case 24: {
            EndOfData = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountBalanceRequest : pb::IMessage<GetAccountBalanceRequest> {
    private static readonly pb::MessageParser<GetAccountBalanceRequest> _parser = new pb::MessageParser<GetAccountBalanceRequest>(() => new GetAccountBalanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountBalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceRequest(GetAccountBalanceRequest other) : this() {
      currency_ = other.currency_;
      includePending_ = other.includePending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceRequest Clone() {
      return new GetAccountBalanceRequest(this);
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 1;
    private string currency_ = "";
    /// <summary>
    /// Currency of the balance to retreive.  If not given,
    /// uses the user's default currency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "include_pending" field.</summary>
    public const int IncludePendingFieldNumber = 2;
    private bool includePending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludePending {
      get { return includePending_; }
      set {
        includePending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountBalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountBalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Currency != other.Currency) return false;
      if (IncludePending != other.IncludePending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (IncludePending != false) hash ^= IncludePending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Currency.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Currency);
      }
      if (IncludePending != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludePending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (IncludePending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountBalanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.IncludePending != false) {
        IncludePending = other.IncludePending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Currency = input.ReadString();
            break;
          }
          case 16: {
            IncludePending = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountBalanceResult : pb::IMessage<GetAccountBalanceResult> {
    private static readonly pb::MessageParser<GetAccountBalanceResult> _parser = new pb::MessageParser<GetAccountBalanceResult>(() => new GetAccountBalanceResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountBalanceResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ShopReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceResult(GetAccountBalanceResult other) : this() {
      currency_ = other.currency_;
      Balance = other.balance_ != null ? other.Balance.Clone() : null;
      Pending = other.pending_ != null ? other.Pending.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountBalanceResult Clone() {
      return new GetAccountBalanceResult(this);
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 1;
    private string currency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "pending" field.</summary>
    public const int PendingFieldNumber = 3;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money pending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money Pending {
      get { return pending_; }
      set {
        pending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountBalanceResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountBalanceResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Currency != other.Currency) return false;
      if (!object.Equals(Balance, other.Balance)) return false;
      if (!object.Equals(Pending, other.Pending)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (balance_ != null) hash ^= Balance.GetHashCode();
      if (pending_ != null) hash ^= Pending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Currency.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Currency);
      }
      if (balance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Balance);
      }
      if (pending_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (balance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Balance);
      }
      if (pending_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pending);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountBalanceResult other) {
      if (other == null) {
        return;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.balance_ != null) {
        if (balance_ == null) {
          balance_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
        }
        Balance.MergeFrom(other.Balance);
      }
      if (other.pending_ != null) {
        if (pending_ == null) {
          pending_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
        }
        Pending.MergeFrom(other.Pending);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Currency = input.ReadString();
            break;
          }
          case 18: {
            if (balance_ == null) {
              balance_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
            }
            input.ReadMessage(balance_);
            break;
          }
          case 26: {
            if (pending_ == null) {
              pending_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.Money();
            }
            input.ReadMessage(pending_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
