// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tbmatch/account.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rising_Thunder_Server_CS.Protobufs.Tbmatch {

  /// <summary>Holder for reflection information generated from tbmatch/account.proto</summary>
  public static partial class AccountReflection {

    #region Descriptor
    /// <summary>File descriptor for tbmatch/account.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChV0Ym1hdGNoL2FjY291bnQucHJvdG8SB3RibWF0Y2gaEXRicnBjL3RicnBj",
            "LnByb3RvIvEBCg9Vc2VyQWNjb3VudFNwZWMSDQoFZW1haWwYASABKAkSEAoI",
            "cGFzc3dvcmQYAiABKAkSDgoGaGFuZGxlGAMgASgJEhIKCmdpdmVuX25hbWUY",
            "BCABKAkSEwoLZmFtaWx5X25hbWUYBSABKAkSEgoKc2FsdXRhdGlvbhgGIAEo",
            "CRISCgpiaXJ0aF9kYXRlGAogASgJEg8KB2NvdW50cnkYCyABKAkSDgoGbG9j",
            "YWxlGAwgASgJEhsKE3NlY3JldF9xdWVzdGlvbl9tc2cYFCABKAkSHgoWc2Vj",
            "cmV0X3F1ZXN0aW9uX2Fuc3dlchgVIAEoCSJdCglVc2VyUHJlZnMSIAoYYmFs",
            "YW5jZV9wdXJjaGFzZV9pbl9nYW1lGAEgASgIEhQKDGVtYWlsX29mZmVycxgU",
            "IAEoCBIYChBkZWZhdWx0X2N1cnJlbmN5GB4gASgJInwKDkNvbnRhY3RBZGRy",
            "ZXNzEhEKCWFkZHJlc3NfMRgBIAEoCRIRCglhZGRyZXNzXzIYAiABKAkSDAoE",
            "Y2l0eRgDIAEoCRIOCgZyZWdpb24YBCABKAkSEAoIemlwX2NvZGUYBSABKAkS",
            "FAoMcGhvbmVfbnVtYmVyGAYgASgJIp8CCghVc2VySW5mbxISCgphY2NvdW50",
            "X2lkGAEgASgDEiYKBHNwZWMYAiABKAsyGC50Ym1hdGNoLlVzZXJBY2NvdW50",
            "U3BlYxIwCg9jb250YWN0X2FkZHJlc3MYAyABKAsyFy50Ym1hdGNoLkNvbnRh",
            "Y3RBZGRyZXNzEiEKBXByZWZzGAQgASgLMhIudGJtYXRjaC5Vc2VyUHJlZnMS",
            "EwoLYWNjZXNzX2JpdHMYCiABKAUSKgoMbG9naW5fc3RhdHVzGAsgASgOMhQu",
            "dGJtYXRjaC5Mb2dpblN0YXR1cxITCgtjcmVhdGVfdGltZRg8IAEoCRITCgtt",
            "b2RpZnlfdGltZRg9IAEoCRIXCg9sYXN0X2xvZ2luX3RpbWUYPiABKAkiIgoQ",
            "U2V0TG9jYWxlUmVxdWVzdBIOCgZsb2NhbGUYASABKAkiQwoVQ2hhbmdlUGFz",
            "c3dvcmRSZXF1ZXN0EhQKDG9sZF9wYXNzd29yZBgBIAEoCRIUCgxuZXdfcGFz",
            "c3dvcmQYAiABKAkiXwoZQ2hhbmdlRW1haWxBZGRyZXNzUmVxdWVzdBIZChFu",
            "ZXdfZW1haWxfYWRkcmVzcxgBIAEoCRIVCg1zZWNyZXRfYW5zd2VyGAIgASgJ",
            "EhAKCHBhc3N3b3JkGAMgASgJIicKF1JlZGVlbUFjY2Vzc0NvZGVSZXF1ZXN0",
            "EgwKBGNvZGUYASABKAkiegoTUmVnaXN0ZXJVc2VyUmVxdWVzdBImCgRzcGVj",
            "GAEgASgLMhgudGJtYXRjaC5Vc2VyQWNjb3VudFNwZWMSIQoFcHJlZnMYAiAB",
            "KAsyEi50Ym1hdGNoLlVzZXJQcmVmcxIYChByZWdpc3RyYXRpb25fa2V5GAog",
            "ASgJIiQKE1ZhbGlkYXRlVXNlclJlcXVlc3QSDQoFbm9uY2UYASABKAkiKQoY",
            "R2V0U2VjcmV0UXVlc3Rpb25SZXF1ZXN0Eg0KBWVtYWlsGAEgASgJIjYKF0dl",
            "dFNlY3JldFF1ZXN0aW9uUmVzdWx0EhsKE3NlY3JldF9xdWVzdGlvbl9tc2cY",
            "ASABKAkiawodU2VuZFBhc3N3b3JkUmVzZXRFbWFpbFJlcXVlc3QSDQoFZW1h",
            "aWwYASABKAkSGwoTc2VjcmV0X3F1ZXN0aW9uX21zZxgCIAEoCRIeChZzZWNy",
            "ZXRfcXVlc3Rpb25fYW5zd2VyGAMgASgJIkgKHlZlcmlmeVJlc2V0UGFzc3dv",
            "cmRDb2RlUmVxdWVzdBINCgVlbWFpbBgBIAEoCRIXCg92YWxpZGF0aW9uX2Nv",
            "ZGUYAiABKAkiVAoUUmVzZXRQYXNzd29yZFJlcXVlc3QSDQoFZW1haWwYASAB",
            "KAkSFwoPdmFsaWRhdGlvbl9jb2RlGAIgASgJEhQKDG5ld19wYXNzd29yZBgD",
            "IAEoCSIkChJDaGVja0hhbmRsZVJlcXVlc3QSDgoGaGFuZGxlGAEgASgJKlYK",
            "C0xvZ2luU3RhdHVzEhUKEUxPR0lOX1NUQVRVU19aRVJPEAASCgoGQUNUSVZF",
            "EAESDAoIRElTQUJMRUQQAxIWChJQRU5ESU5HX1ZBTElEQVRJT04QBDLoCAoO",
            "QWNjb3VudFNlcnZpY2USPgoLQ2hlY2tIYW5kbGUSGy50Ym1hdGNoLkNoZWNr",
            "SGFuZGxlUmVxdWVzdBoMLnRicnBjLkVtcHR5IgTI8xgAEkAKDFJlZ2lzdGVy",
            "VXNlchIcLnRibWF0Y2guUmVnaXN0ZXJVc2VyUmVxdWVzdBoMLnRicnBjLkVt",
            "cHR5IgTI8xgAEkUKDFZhbGlkYXRlVXNlchIcLnRibWF0Y2guVmFsaWRhdGVV",
            "c2VyUmVxdWVzdBoRLnRibWF0Y2guVXNlckluZm8iBMjzGAASXgoRR2V0U2Vj",
            "cmV0UXVlc3Rpb24SIS50Ym1hdGNoLkdldFNlY3JldFF1ZXN0aW9uUmVxdWVz",
            "dBogLnRibWF0Y2guR2V0U2VjcmV0UXVlc3Rpb25SZXN1bHQiBMjzGAASVAoW",
            "U2VuZFBhc3N3b3JkUmVzZXRFbWFpbBImLnRibWF0Y2guU2VuZFBhc3N3b3Jk",
            "UmVzZXRFbWFpbFJlcXVlc3QaDC50YnJwYy5FbXB0eSIEyPMYABJWChdWZXJp",
            "ZnlSZXNldFBhc3N3b3JkQ29kZRInLnRibWF0Y2guVmVyaWZ5UmVzZXRQYXNz",
            "d29yZENvZGVSZXF1ZXN0GgwudGJycGMuRW1wdHkiBMjzGAASQgoNUmVzZXRQ",
            "YXNzd29yZBIdLnRibWF0Y2guUmVzZXRQYXNzd29yZFJlcXVlc3QaDC50YnJw",
            "Yy5FbXB0eSIEyPMYABI0CgtHZXRVc2VySW5mbxIMLnRicnBjLkVtcHR5GhEu",
            "dGJtYXRjaC5Vc2VySW5mbyIEyPMYARI5ChVSZXNlbmRWYWxpZGF0aW9uRW1h",
            "aWwSDC50YnJwYy5FbXB0eRoMLnRicnBjLkVtcHR5IgTI8xgBEjoKCVNldExv",
            "Y2FsZRIZLnRibWF0Y2guU2V0TG9jYWxlUmVxdWVzdBoMLnRicnBjLkVtcHR5",
            "IgTI8xgBEkAKEVNldENvbnRhY3RBZGRyZXNzEhcudGJtYXRjaC5Db250YWN0",
            "QWRkcmVzcxoMLnRicnBjLkVtcHR5IgTI8xgBEjYKDEdldFVzZXJQcmVmcxIM",
            "LnRicnBjLkVtcHR5GhIudGJtYXRjaC5Vc2VyUHJlZnMiBMjzGAESNgoMU2V0",
            "VXNlclByZWZzEhIudGJtYXRjaC5Vc2VyUHJlZnMaDC50YnJwYy5FbXB0eSIE",
            "yPMYARJECg5DaGFuZ2VQYXNzd29yZBIeLnRibWF0Y2guQ2hhbmdlUGFzc3dv",
            "cmRSZXF1ZXN0GgwudGJycGMuRW1wdHkiBMjzGAESTAoSQ2hhbmdlRW1haWxB",
            "ZGRyZXNzEiIudGJtYXRjaC5DaGFuZ2VFbWFpbEFkZHJlc3NSZXF1ZXN0Ggwu",
            "dGJycGMuRW1wdHkiBMjzGAESSAoQUmVkZWVtQWNjZXNzQ29kZRIgLnRibWF0",
            "Y2guUmVkZWVtQWNjZXNzQ29kZVJlcXVlc3QaDC50YnJwYy5FbXB0eSIEyPMY",
            "AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.TbrpcReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.LoginStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec.Parser, new[]{ "Email", "Password", "Handle", "GivenName", "FamilyName", "Salutation", "BirthDate", "Country", "Locale", "SecretQuestionMsg", "SecretQuestionAnswer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs.Parser, new[]{ "BalancePurchaseInGame", "EmailOffers", "DefaultCurrency" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ContactAddress), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ContactAddress.Parser, new[]{ "Address1", "Address2", "City", "Region", "ZipCode", "PhoneNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserInfo), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserInfo.Parser, new[]{ "AccountId", "Spec", "ContactAddress", "Prefs", "AccessBits", "LoginStatus", "CreateTime", "ModifyTime", "LastLoginTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.SetLocaleRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.SetLocaleRequest.Parser, new[]{ "Locale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ChangePasswordRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ChangePasswordRequest.Parser, new[]{ "OldPassword", "NewPassword" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ChangeEmailAddressRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ChangeEmailAddressRequest.Parser, new[]{ "NewEmailAddress", "SecretAnswer", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.RedeemAccessCodeRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.RedeemAccessCodeRequest.Parser, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.RegisterUserRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.RegisterUserRequest.Parser, new[]{ "Spec", "Prefs", "RegistrationKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ValidateUserRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ValidateUserRequest.Parser, new[]{ "Nonce" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetSecretQuestionRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetSecretQuestionRequest.Parser, new[]{ "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetSecretQuestionResult), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.GetSecretQuestionResult.Parser, new[]{ "SecretQuestionMsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.SendPasswordResetEmailRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.SendPasswordResetEmailRequest.Parser, new[]{ "Email", "SecretQuestionMsg", "SecretQuestionAnswer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.VerifyResetPasswordCodeRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.VerifyResetPasswordCodeRequest.Parser, new[]{ "Email", "ValidationCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ResetPasswordRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ResetPasswordRequest.Parser, new[]{ "Email", "ValidationCode", "NewPassword" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.CheckHandleRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.CheckHandleRequest.Parser, new[]{ "Handle" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LoginStatus {
    [pbr::OriginalName("LOGIN_STATUS_ZERO")] Zero = 0,
    /// <summary>
    /// Account accepts logins with a valid password.
    /// </summary>
    [pbr::OriginalName("ACTIVE")] Active = 1,
    /// <summary>
    /// Account is permanently frozen and can only be enabled by an administrator.
    /// </summary>
    [pbr::OriginalName("DISABLED")] Disabled = 3,
    /// <summary>
    /// Account uses an e-mail address that has not yet been confirmed.
    /// </summary>
    [pbr::OriginalName("PENDING_VALIDATION")] PendingValidation = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Used to create or update accounts.
  /// </summary>
  public sealed partial class UserAccountSpec : pb::IMessage<UserAccountSpec> {
    private static readonly pb::MessageParser<UserAccountSpec> _parser = new pb::MessageParser<UserAccountSpec>(() => new UserAccountSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserAccountSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAccountSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAccountSpec(UserAccountSpec other) : this() {
      email_ = other.email_;
      password_ = other.password_;
      handle_ = other.handle_;
      givenName_ = other.givenName_;
      familyName_ = other.familyName_;
      salutation_ = other.salutation_;
      birthDate_ = other.birthDate_;
      country_ = other.country_;
      locale_ = other.locale_;
      secretQuestionMsg_ = other.secretQuestionMsg_;
      secretQuestionAnswer_ = other.secretQuestionAnswer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAccountSpec Clone() {
      return new UserAccountSpec(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    /// <summary>
    /// E-mail address.  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    /// Desired password.  Required for CreateUser and Register;
    /// existing accounts must use ResetPassword.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 3;
    private string handle_ = "";
    /// <summary>
    /// Username as seen by other users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Handle {
      get { return handle_; }
      set {
        handle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "given_name" field.</summary>
    public const int GivenNameFieldNumber = 4;
    private string givenName_ = "";
    /// <summary>
    /// Given (first) name.  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GivenName {
      get { return givenName_; }
      set {
        givenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "family_name" field.</summary>
    public const int FamilyNameFieldNumber = 5;
    private string familyName_ = "";
    /// <summary>
    /// Family (last) name.  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FamilyName {
      get { return familyName_; }
      set {
        familyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "salutation" field.</summary>
    public const int SalutationFieldNumber = 6;
    private string salutation_ = "";
    /// <summary>
    /// Salutation, optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Salutation {
      get { return salutation_; }
      set {
        salutation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "birth_date" field.</summary>
    public const int BirthDateFieldNumber = 10;
    private string birthDate_ = "";
    /// <summary>
    /// Date of birth (RFC3339 string).  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BirthDate {
      get { return birthDate_; }
      set {
        birthDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 11;
    private string country_ = "";
    /// <summary>
    /// 3-letter code for country of residence.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 12;
    private string locale_ = "";
    /// <summary>
    /// Locale for messages, currency format, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_question_msg" field.</summary>
    public const int SecretQuestionMsgFieldNumber = 20;
    private string secretQuestionMsg_ = "";
    /// <summary>
    /// Secret question message ID.  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretQuestionMsg {
      get { return secretQuestionMsg_; }
      set {
        secretQuestionMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_question_answer" field.</summary>
    public const int SecretQuestionAnswerFieldNumber = 21;
    private string secretQuestionAnswer_ = "";
    /// <summary>
    /// Answer to the secret question.  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretQuestionAnswer {
      get { return secretQuestionAnswer_; }
      set {
        secretQuestionAnswer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserAccountSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserAccountSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (Password != other.Password) return false;
      if (Handle != other.Handle) return false;
      if (GivenName != other.GivenName) return false;
      if (FamilyName != other.FamilyName) return false;
      if (Salutation != other.Salutation) return false;
      if (BirthDate != other.BirthDate) return false;
      if (Country != other.Country) return false;
      if (Locale != other.Locale) return false;
      if (SecretQuestionMsg != other.SecretQuestionMsg) return false;
      if (SecretQuestionAnswer != other.SecretQuestionAnswer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Handle.Length != 0) hash ^= Handle.GetHashCode();
      if (GivenName.Length != 0) hash ^= GivenName.GetHashCode();
      if (FamilyName.Length != 0) hash ^= FamilyName.GetHashCode();
      if (Salutation.Length != 0) hash ^= Salutation.GetHashCode();
      if (BirthDate.Length != 0) hash ^= BirthDate.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (Locale.Length != 0) hash ^= Locale.GetHashCode();
      if (SecretQuestionMsg.Length != 0) hash ^= SecretQuestionMsg.GetHashCode();
      if (SecretQuestionAnswer.Length != 0) hash ^= SecretQuestionAnswer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (Handle.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Handle);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GivenName);
      }
      if (FamilyName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FamilyName);
      }
      if (Salutation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Salutation);
      }
      if (BirthDate.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BirthDate);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Country);
      }
      if (Locale.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Locale);
      }
      if (SecretQuestionMsg.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(SecretQuestionMsg);
      }
      if (SecretQuestionAnswer.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(SecretQuestionAnswer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Handle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Handle);
      }
      if (GivenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName);
      }
      if (FamilyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyName);
      }
      if (Salutation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Salutation);
      }
      if (BirthDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BirthDate);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (Locale.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (SecretQuestionMsg.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SecretQuestionMsg);
      }
      if (SecretQuestionAnswer.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SecretQuestionAnswer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserAccountSpec other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Handle.Length != 0) {
        Handle = other.Handle;
      }
      if (other.GivenName.Length != 0) {
        GivenName = other.GivenName;
      }
      if (other.FamilyName.Length != 0) {
        FamilyName = other.FamilyName;
      }
      if (other.Salutation.Length != 0) {
        Salutation = other.Salutation;
      }
      if (other.BirthDate.Length != 0) {
        BirthDate = other.BirthDate;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.Locale.Length != 0) {
        Locale = other.Locale;
      }
      if (other.SecretQuestionMsg.Length != 0) {
        SecretQuestionMsg = other.SecretQuestionMsg;
      }
      if (other.SecretQuestionAnswer.Length != 0) {
        SecretQuestionAnswer = other.SecretQuestionAnswer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            Handle = input.ReadString();
            break;
          }
          case 34: {
            GivenName = input.ReadString();
            break;
          }
          case 42: {
            FamilyName = input.ReadString();
            break;
          }
          case 50: {
            Salutation = input.ReadString();
            break;
          }
          case 82: {
            BirthDate = input.ReadString();
            break;
          }
          case 90: {
            Country = input.ReadString();
            break;
          }
          case 98: {
            Locale = input.ReadString();
            break;
          }
          case 162: {
            SecretQuestionMsg = input.ReadString();
            break;
          }
          case 170: {
            SecretQuestionAnswer = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// User settable options and preferences for the website.
  /// </summary>
  public sealed partial class UserPrefs : pb::IMessage<UserPrefs> {
    private static readonly pb::MessageParser<UserPrefs> _parser = new pb::MessageParser<UserPrefs>(() => new UserPrefs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserPrefs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPrefs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPrefs(UserPrefs other) : this() {
      balancePurchaseInGame_ = other.balancePurchaseInGame_;
      emailOffers_ = other.emailOffers_;
      defaultCurrency_ = other.defaultCurrency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPrefs Clone() {
      return new UserPrefs(this);
    }

    /// <summary>Field number for the "balance_purchase_in_game" field.</summary>
    public const int BalancePurchaseInGameFieldNumber = 1;
    private bool balancePurchaseInGame_;
    /// <summary>
    /// Allow using account balance for in-game purchases.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BalancePurchaseInGame {
      get { return balancePurchaseInGame_; }
      set {
        balancePurchaseInGame_ = value;
      }
    }

    /// <summary>Field number for the "email_offers" field.</summary>
    public const int EmailOffersFieldNumber = 20;
    private bool emailOffers_;
    /// <summary>
    /// Elect to receive special offers and promotional e-mail.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EmailOffers {
      get { return emailOffers_; }
      set {
        emailOffers_ = value;
      }
    }

    /// <summary>Field number for the "default_currency" field.</summary>
    public const int DefaultCurrencyFieldNumber = 30;
    private string defaultCurrency_ = "";
    /// <summary>
    /// Currency last used/selected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultCurrency {
      get { return defaultCurrency_; }
      set {
        defaultCurrency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserPrefs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserPrefs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BalancePurchaseInGame != other.BalancePurchaseInGame) return false;
      if (EmailOffers != other.EmailOffers) return false;
      if (DefaultCurrency != other.DefaultCurrency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BalancePurchaseInGame != false) hash ^= BalancePurchaseInGame.GetHashCode();
      if (EmailOffers != false) hash ^= EmailOffers.GetHashCode();
      if (DefaultCurrency.Length != 0) hash ^= DefaultCurrency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BalancePurchaseInGame != false) {
        output.WriteRawTag(8);
        output.WriteBool(BalancePurchaseInGame);
      }
      if (EmailOffers != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(EmailOffers);
      }
      if (DefaultCurrency.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(DefaultCurrency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BalancePurchaseInGame != false) {
        size += 1 + 1;
      }
      if (EmailOffers != false) {
        size += 2 + 1;
      }
      if (DefaultCurrency.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DefaultCurrency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserPrefs other) {
      if (other == null) {
        return;
      }
      if (other.BalancePurchaseInGame != false) {
        BalancePurchaseInGame = other.BalancePurchaseInGame;
      }
      if (other.EmailOffers != false) {
        EmailOffers = other.EmailOffers;
      }
      if (other.DefaultCurrency.Length != 0) {
        DefaultCurrency = other.DefaultCurrency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BalancePurchaseInGame = input.ReadBool();
            break;
          }
          case 160: {
            EmailOffers = input.ReadBool();
            break;
          }
          case 242: {
            DefaultCurrency = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// User's contact address fields.
  /// </summary>
  public sealed partial class ContactAddress : pb::IMessage<ContactAddress> {
    private static readonly pb::MessageParser<ContactAddress> _parser = new pb::MessageParser<ContactAddress>(() => new ContactAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContactAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactAddress(ContactAddress other) : this() {
      address1_ = other.address1_;
      address2_ = other.address2_;
      city_ = other.city_;
      region_ = other.region_;
      zipCode_ = other.zipCode_;
      phoneNumber_ = other.phoneNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactAddress Clone() {
      return new ContactAddress(this);
    }

    /// <summary>Field number for the "address_1" field.</summary>
    public const int Address1FieldNumber = 1;
    private string address1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address1 {
      get { return address1_; }
      set {
        address1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address_2" field.</summary>
    public const int Address2FieldNumber = 2;
    private string address2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address2 {
      get { return address2_; }
      set {
        address2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 3;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 4;
    private string region_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zip_code" field.</summary>
    public const int ZipCodeFieldNumber = 5;
    private string zipCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZipCode {
      get { return zipCode_; }
      set {
        zipCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone_number" field.</summary>
    public const int PhoneNumberFieldNumber = 6;
    private string phoneNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContactAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContactAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address1 != other.Address1) return false;
      if (Address2 != other.Address2) return false;
      if (City != other.City) return false;
      if (Region != other.Region) return false;
      if (ZipCode != other.ZipCode) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address1.Length != 0) hash ^= Address1.GetHashCode();
      if (Address2.Length != 0) hash ^= Address2.GetHashCode();
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (ZipCode.Length != 0) hash ^= ZipCode.GetHashCode();
      if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address1);
      }
      if (Address2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Address2);
      }
      if (City.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(City);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Region);
      }
      if (ZipCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ZipCode);
      }
      if (PhoneNumber.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address1);
      }
      if (Address2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address2);
      }
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (ZipCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZipCode);
      }
      if (PhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContactAddress other) {
      if (other == null) {
        return;
      }
      if (other.Address1.Length != 0) {
        Address1 = other.Address1;
      }
      if (other.Address2.Length != 0) {
        Address2 = other.Address2;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.ZipCode.Length != 0) {
        ZipCode = other.ZipCode;
      }
      if (other.PhoneNumber.Length != 0) {
        PhoneNumber = other.PhoneNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address1 = input.ReadString();
            break;
          }
          case 18: {
            Address2 = input.ReadString();
            break;
          }
          case 26: {
            City = input.ReadString();
            break;
          }
          case 34: {
            Region = input.ReadString();
            break;
          }
          case 42: {
            ZipCode = input.ReadString();
            break;
          }
          case 50: {
            PhoneNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Full details and status of a user account.  Can be returned
  /// both for the active session, and for account administration.
  /// </summary>
  public sealed partial class UserInfo : pb::IMessage<UserInfo> {
    private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo(UserInfo other) : this() {
      accountId_ = other.accountId_;
      Spec = other.spec_ != null ? other.Spec.Clone() : null;
      ContactAddress = other.contactAddress_ != null ? other.ContactAddress.Clone() : null;
      Prefs = other.prefs_ != null ? other.Prefs.Clone() : null;
      accessBits_ = other.accessBits_;
      loginStatus_ = other.loginStatus_;
      createTime_ = other.createTime_;
      modifyTime_ = other.modifyTime_;
      lastLoginTime_ = other.lastLoginTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo Clone() {
      return new UserInfo(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "contact_address" field.</summary>
    public const int ContactAddressFieldNumber = 3;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ContactAddress contactAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ContactAddress ContactAddress {
      get { return contactAddress_; }
      set {
        contactAddress_ = value;
      }
    }

    /// <summary>Field number for the "prefs" field.</summary>
    public const int PrefsFieldNumber = 4;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs prefs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs Prefs {
      get { return prefs_; }
      set {
        prefs_ = value;
      }
    }

    /// <summary>Field number for the "access_bits" field.</summary>
    public const int AccessBitsFieldNumber = 10;
    private int accessBits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccessBits {
      get { return accessBits_; }
      set {
        accessBits_ = value;
      }
    }

    /// <summary>Field number for the "login_status" field.</summary>
    public const int LoginStatusFieldNumber = 11;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.LoginStatus loginStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.LoginStatus LoginStatus {
      get { return loginStatus_; }
      set {
        loginStatus_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 60;
    private string createTime_ = "";
    /// <summary>
    /// When account was created (RFC 3339 string).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateTime {
      get { return createTime_; }
      set {
        createTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modify_time" field.</summary>
    public const int ModifyTimeFieldNumber = 61;
    private string modifyTime_ = "";
    /// <summary>
    /// Last time account was modified (RFC 3339 string).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyTime {
      get { return modifyTime_; }
      set {
        modifyTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_login_time" field.</summary>
    public const int LastLoginTimeFieldNumber = 62;
    private string lastLoginTime_ = "";
    /// <summary>
    /// Last login time, if any (RFC3339 string).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastLoginTime {
      get { return lastLoginTime_; }
      set {
        lastLoginTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(ContactAddress, other.ContactAddress)) return false;
      if (!object.Equals(Prefs, other.Prefs)) return false;
      if (AccessBits != other.AccessBits) return false;
      if (LoginStatus != other.LoginStatus) return false;
      if (CreateTime != other.CreateTime) return false;
      if (ModifyTime != other.ModifyTime) return false;
      if (LastLoginTime != other.LastLoginTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (contactAddress_ != null) hash ^= ContactAddress.GetHashCode();
      if (prefs_ != null) hash ^= Prefs.GetHashCode();
      if (AccessBits != 0) hash ^= AccessBits.GetHashCode();
      if (LoginStatus != 0) hash ^= LoginStatus.GetHashCode();
      if (CreateTime.Length != 0) hash ^= CreateTime.GetHashCode();
      if (ModifyTime.Length != 0) hash ^= ModifyTime.GetHashCode();
      if (LastLoginTime.Length != 0) hash ^= LastLoginTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (contactAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ContactAddress);
      }
      if (prefs_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Prefs);
      }
      if (AccessBits != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(AccessBits);
      }
      if (LoginStatus != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) LoginStatus);
      }
      if (CreateTime.Length != 0) {
        output.WriteRawTag(226, 3);
        output.WriteString(CreateTime);
      }
      if (ModifyTime.Length != 0) {
        output.WriteRawTag(234, 3);
        output.WriteString(ModifyTime);
      }
      if (LastLoginTime.Length != 0) {
        output.WriteRawTag(242, 3);
        output.WriteString(LastLoginTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (contactAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContactAddress);
      }
      if (prefs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prefs);
      }
      if (AccessBits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccessBits);
      }
      if (LoginStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LoginStatus);
      }
      if (CreateTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreateTime);
      }
      if (ModifyTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyTime);
      }
      if (LastLoginTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LastLoginTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfo other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          spec_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.contactAddress_ != null) {
        if (contactAddress_ == null) {
          contactAddress_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ContactAddress();
        }
        ContactAddress.MergeFrom(other.ContactAddress);
      }
      if (other.prefs_ != null) {
        if (prefs_ == null) {
          prefs_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs();
        }
        Prefs.MergeFrom(other.Prefs);
      }
      if (other.AccessBits != 0) {
        AccessBits = other.AccessBits;
      }
      if (other.LoginStatus != 0) {
        LoginStatus = other.LoginStatus;
      }
      if (other.CreateTime.Length != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.ModifyTime.Length != 0) {
        ModifyTime = other.ModifyTime;
      }
      if (other.LastLoginTime.Length != 0) {
        LastLoginTime = other.LastLoginTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 18: {
            if (spec_ == null) {
              spec_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec();
            }
            input.ReadMessage(spec_);
            break;
          }
          case 26: {
            if (contactAddress_ == null) {
              contactAddress_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ContactAddress();
            }
            input.ReadMessage(contactAddress_);
            break;
          }
          case 34: {
            if (prefs_ == null) {
              prefs_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs();
            }
            input.ReadMessage(prefs_);
            break;
          }
          case 80: {
            AccessBits = input.ReadInt32();
            break;
          }
          case 88: {
            loginStatus_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.LoginStatus) input.ReadEnum();
            break;
          }
          case 482: {
            CreateTime = input.ReadString();
            break;
          }
          case 490: {
            ModifyTime = input.ReadString();
            break;
          }
          case 498: {
            LastLoginTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to change the default locale of the account.
  /// </summary>
  public sealed partial class SetLocaleRequest : pb::IMessage<SetLocaleRequest> {
    private static readonly pb::MessageParser<SetLocaleRequest> _parser = new pb::MessageParser<SetLocaleRequest>(() => new SetLocaleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLocaleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLocaleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLocaleRequest(SetLocaleRequest other) : this() {
      locale_ = other.locale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLocaleRequest Clone() {
      return new SetLocaleRequest(this);
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 1;
    private string locale_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLocaleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLocaleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Locale != other.Locale) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Locale.Length != 0) hash ^= Locale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Locale.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Locale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Locale.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLocaleRequest other) {
      if (other == null) {
        return;
      }
      if (other.Locale.Length != 0) {
        Locale = other.Locale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Locale = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Change the password for this account.
  /// </summary>
  public sealed partial class ChangePasswordRequest : pb::IMessage<ChangePasswordRequest> {
    private static readonly pb::MessageParser<ChangePasswordRequest> _parser = new pb::MessageParser<ChangePasswordRequest>(() => new ChangePasswordRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangePasswordRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangePasswordRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangePasswordRequest(ChangePasswordRequest other) : this() {
      oldPassword_ = other.oldPassword_;
      newPassword_ = other.newPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangePasswordRequest Clone() {
      return new ChangePasswordRequest(this);
    }

    /// <summary>Field number for the "old_password" field.</summary>
    public const int OldPasswordFieldNumber = 1;
    private string oldPassword_ = "";
    /// <summary>
    /// Provide the correct existing account password.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OldPassword {
      get { return oldPassword_; }
      set {
        oldPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_password" field.</summary>
    public const int NewPasswordFieldNumber = 2;
    private string newPassword_ = "";
    /// <summary>
    /// Provide a new password that adheres to the password requirements.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewPassword {
      get { return newPassword_; }
      set {
        newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangePasswordRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangePasswordRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldPassword != other.OldPassword) return false;
      if (NewPassword != other.NewPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OldPassword.Length != 0) hash ^= OldPassword.GetHashCode();
      if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OldPassword.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OldPassword);
      }
      if (NewPassword.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OldPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OldPassword);
      }
      if (NewPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangePasswordRequest other) {
      if (other == null) {
        return;
      }
      if (other.OldPassword.Length != 0) {
        OldPassword = other.OldPassword;
      }
      if (other.NewPassword.Length != 0) {
        NewPassword = other.NewPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OldPassword = input.ReadString();
            break;
          }
          case 18: {
            NewPassword = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Change the e-mail address for this account.
  /// </summary>
  public sealed partial class ChangeEmailAddressRequest : pb::IMessage<ChangeEmailAddressRequest> {
    private static readonly pb::MessageParser<ChangeEmailAddressRequest> _parser = new pb::MessageParser<ChangeEmailAddressRequest>(() => new ChangeEmailAddressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeEmailAddressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeEmailAddressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeEmailAddressRequest(ChangeEmailAddressRequest other) : this() {
      newEmailAddress_ = other.newEmailAddress_;
      secretAnswer_ = other.secretAnswer_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeEmailAddressRequest Clone() {
      return new ChangeEmailAddressRequest(this);
    }

    /// <summary>Field number for the "new_email_address" field.</summary>
    public const int NewEmailAddressFieldNumber = 1;
    private string newEmailAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewEmailAddress {
      get { return newEmailAddress_; }
      set {
        newEmailAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_answer" field.</summary>
    public const int SecretAnswerFieldNumber = 2;
    private string secretAnswer_ = "";
    /// <summary>
    /// Provide 2 forms of authentication.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretAnswer {
      get { return secretAnswer_; }
      set {
        secretAnswer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeEmailAddressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeEmailAddressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewEmailAddress != other.NewEmailAddress) return false;
      if (SecretAnswer != other.SecretAnswer) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewEmailAddress.Length != 0) hash ^= NewEmailAddress.GetHashCode();
      if (SecretAnswer.Length != 0) hash ^= SecretAnswer.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewEmailAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewEmailAddress);
      }
      if (SecretAnswer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SecretAnswer);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewEmailAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewEmailAddress);
      }
      if (SecretAnswer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretAnswer);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeEmailAddressRequest other) {
      if (other == null) {
        return;
      }
      if (other.NewEmailAddress.Length != 0) {
        NewEmailAddress = other.NewEmailAddress;
      }
      if (other.SecretAnswer.Length != 0) {
        SecretAnswer = other.SecretAnswer;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NewEmailAddress = input.ReadString();
            break;
          }
          case 18: {
            SecretAnswer = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Redeem an access code to grant the account additional roles or objects.
  /// </summary>
  public sealed partial class RedeemAccessCodeRequest : pb::IMessage<RedeemAccessCodeRequest> {
    private static readonly pb::MessageParser<RedeemAccessCodeRequest> _parser = new pb::MessageParser<RedeemAccessCodeRequest>(() => new RedeemAccessCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemAccessCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemAccessCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemAccessCodeRequest(RedeemAccessCodeRequest other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemAccessCodeRequest Clone() {
      return new RedeemAccessCodeRequest(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemAccessCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemAccessCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemAccessCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to create an account.
  /// </summary>
  public sealed partial class RegisterUserRequest : pb::IMessage<RegisterUserRequest> {
    private static readonly pb::MessageParser<RegisterUserRequest> _parser = new pb::MessageParser<RegisterUserRequest>(() => new RegisterUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUserRequest(RegisterUserRequest other) : this() {
      Spec = other.spec_ != null ? other.Spec.Clone() : null;
      Prefs = other.prefs_ != null ? other.Prefs.Clone() : null;
      registrationKey_ = other.registrationKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUserRequest Clone() {
      return new RegisterUserRequest(this);
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 1;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "prefs" field.</summary>
    public const int PrefsFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs prefs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs Prefs {
      get { return prefs_; }
      set {
        prefs_ = value;
      }
    }

    /// <summary>Field number for the "registration_key" field.</summary>
    public const int RegistrationKeyFieldNumber = 10;
    private string registrationKey_ = "";
    /// <summary>
    /// Registration key (if required)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegistrationKey {
      get { return registrationKey_; }
      set {
        registrationKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Prefs, other.Prefs)) return false;
      if (RegistrationKey != other.RegistrationKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (prefs_ != null) hash ^= Prefs.GetHashCode();
      if (RegistrationKey.Length != 0) hash ^= RegistrationKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (prefs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Prefs);
      }
      if (RegistrationKey.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(RegistrationKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (prefs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prefs);
      }
      if (RegistrationKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegistrationKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          spec_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.prefs_ != null) {
        if (prefs_ == null) {
          prefs_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs();
        }
        Prefs.MergeFrom(other.Prefs);
      }
      if (other.RegistrationKey.Length != 0) {
        RegistrationKey = other.RegistrationKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spec_ == null) {
              spec_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec();
            }
            input.ReadMessage(spec_);
            break;
          }
          case 18: {
            if (prefs_ == null) {
              prefs_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs();
            }
            input.ReadMessage(prefs_);
            break;
          }
          case 82: {
            RegistrationKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Validate a pending account or e-mail address change.
  /// </summary>
  public sealed partial class ValidateUserRequest : pb::IMessage<ValidateUserRequest> {
    private static readonly pb::MessageParser<ValidateUserRequest> _parser = new pb::MessageParser<ValidateUserRequest>(() => new ValidateUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValidateUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateUserRequest(ValidateUserRequest other) : this() {
      nonce_ = other.nonce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateUserRequest Clone() {
      return new ValidateUserRequest(this);
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 1;
    private string nonce_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nonce {
      get { return nonce_; }
      set {
        nonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValidateUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValidateUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nonce != other.Nonce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nonce.Length != 0) hash ^= Nonce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nonce.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Nonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nonce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValidateUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.Nonce.Length != 0) {
        Nonce = other.Nonce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Nonce = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSecretQuestionRequest : pb::IMessage<GetSecretQuestionRequest> {
    private static readonly pb::MessageParser<GetSecretQuestionRequest> _parser = new pb::MessageParser<GetSecretQuestionRequest>(() => new GetSecretQuestionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSecretQuestionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSecretQuestionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSecretQuestionRequest(GetSecretQuestionRequest other) : this() {
      email_ = other.email_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSecretQuestionRequest Clone() {
      return new GetSecretQuestionRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSecretQuestionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSecretQuestionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSecretQuestionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSecretQuestionResult : pb::IMessage<GetSecretQuestionResult> {
    private static readonly pb::MessageParser<GetSecretQuestionResult> _parser = new pb::MessageParser<GetSecretQuestionResult>(() => new GetSecretQuestionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSecretQuestionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSecretQuestionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSecretQuestionResult(GetSecretQuestionResult other) : this() {
      secretQuestionMsg_ = other.secretQuestionMsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSecretQuestionResult Clone() {
      return new GetSecretQuestionResult(this);
    }

    /// <summary>Field number for the "secret_question_msg" field.</summary>
    public const int SecretQuestionMsgFieldNumber = 1;
    private string secretQuestionMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretQuestionMsg {
      get { return secretQuestionMsg_; }
      set {
        secretQuestionMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSecretQuestionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSecretQuestionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SecretQuestionMsg != other.SecretQuestionMsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SecretQuestionMsg.Length != 0) hash ^= SecretQuestionMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SecretQuestionMsg.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SecretQuestionMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SecretQuestionMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretQuestionMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSecretQuestionResult other) {
      if (other == null) {
        return;
      }
      if (other.SecretQuestionMsg.Length != 0) {
        SecretQuestionMsg = other.SecretQuestionMsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SecretQuestionMsg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendPasswordResetEmailRequest : pb::IMessage<SendPasswordResetEmailRequest> {
    private static readonly pb::MessageParser<SendPasswordResetEmailRequest> _parser = new pb::MessageParser<SendPasswordResetEmailRequest>(() => new SendPasswordResetEmailRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendPasswordResetEmailRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPasswordResetEmailRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPasswordResetEmailRequest(SendPasswordResetEmailRequest other) : this() {
      email_ = other.email_;
      secretQuestionMsg_ = other.secretQuestionMsg_;
      secretQuestionAnswer_ = other.secretQuestionAnswer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPasswordResetEmailRequest Clone() {
      return new SendPasswordResetEmailRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_question_msg" field.</summary>
    public const int SecretQuestionMsgFieldNumber = 2;
    private string secretQuestionMsg_ = "";
    /// <summary>
    /// Secret question message ID for the account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretQuestionMsg {
      get { return secretQuestionMsg_; }
      set {
        secretQuestionMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_question_answer" field.</summary>
    public const int SecretQuestionAnswerFieldNumber = 3;
    private string secretQuestionAnswer_ = "";
    /// <summary>
    /// Answer to secret question.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretQuestionAnswer {
      get { return secretQuestionAnswer_; }
      set {
        secretQuestionAnswer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendPasswordResetEmailRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendPasswordResetEmailRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (SecretQuestionMsg != other.SecretQuestionMsg) return false;
      if (SecretQuestionAnswer != other.SecretQuestionAnswer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (SecretQuestionMsg.Length != 0) hash ^= SecretQuestionMsg.GetHashCode();
      if (SecretQuestionAnswer.Length != 0) hash ^= SecretQuestionAnswer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (SecretQuestionMsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SecretQuestionMsg);
      }
      if (SecretQuestionAnswer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SecretQuestionAnswer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (SecretQuestionMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretQuestionMsg);
      }
      if (SecretQuestionAnswer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretQuestionAnswer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendPasswordResetEmailRequest other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.SecretQuestionMsg.Length != 0) {
        SecretQuestionMsg = other.SecretQuestionMsg;
      }
      if (other.SecretQuestionAnswer.Length != 0) {
        SecretQuestionAnswer = other.SecretQuestionAnswer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            SecretQuestionMsg = input.ReadString();
            break;
          }
          case 26: {
            SecretQuestionAnswer = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyResetPasswordCodeRequest : pb::IMessage<VerifyResetPasswordCodeRequest> {
    private static readonly pb::MessageParser<VerifyResetPasswordCodeRequest> _parser = new pb::MessageParser<VerifyResetPasswordCodeRequest>(() => new VerifyResetPasswordCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyResetPasswordCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyResetPasswordCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyResetPasswordCodeRequest(VerifyResetPasswordCodeRequest other) : this() {
      email_ = other.email_;
      validationCode_ = other.validationCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyResetPasswordCodeRequest Clone() {
      return new VerifyResetPasswordCodeRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    /// <summary>
    /// Account to verify.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "validation_code" field.</summary>
    public const int ValidationCodeFieldNumber = 2;
    private string validationCode_ = "";
    /// <summary>
    /// String from the email sent by SendPasswordResetRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValidationCode {
      get { return validationCode_; }
      set {
        validationCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyResetPasswordCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyResetPasswordCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (ValidationCode != other.ValidationCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (ValidationCode.Length != 0) hash ^= ValidationCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (ValidationCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValidationCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (ValidationCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValidationCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyResetPasswordCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.ValidationCode.Length != 0) {
        ValidationCode = other.ValidationCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            ValidationCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResetPasswordRequest : pb::IMessage<ResetPasswordRequest> {
    private static readonly pb::MessageParser<ResetPasswordRequest> _parser = new pb::MessageParser<ResetPasswordRequest>(() => new ResetPasswordRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetPasswordRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetPasswordRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetPasswordRequest(ResetPasswordRequest other) : this() {
      email_ = other.email_;
      validationCode_ = other.validationCode_;
      newPassword_ = other.newPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetPasswordRequest Clone() {
      return new ResetPasswordRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    /// <summary>
    /// Account to reset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "validation_code" field.</summary>
    public const int ValidationCodeFieldNumber = 2;
    private string validationCode_ = "";
    /// <summary>
    /// String from the email sent by SendPasswordResetRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValidationCode {
      get { return validationCode_; }
      set {
        validationCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_password" field.</summary>
    public const int NewPasswordFieldNumber = 3;
    private string newPassword_ = "";
    /// <summary>
    /// New password to set. Must obey password restrictions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewPassword {
      get { return newPassword_; }
      set {
        newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetPasswordRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetPasswordRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (ValidationCode != other.ValidationCode) return false;
      if (NewPassword != other.NewPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (ValidationCode.Length != 0) hash ^= ValidationCode.GetHashCode();
      if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (ValidationCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValidationCode);
      }
      if (NewPassword.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NewPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (ValidationCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValidationCode);
      }
      if (NewPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetPasswordRequest other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.ValidationCode.Length != 0) {
        ValidationCode = other.ValidationCode;
      }
      if (other.NewPassword.Length != 0) {
        NewPassword = other.NewPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            ValidationCode = input.ReadString();
            break;
          }
          case 26: {
            NewPassword = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckHandleRequest : pb::IMessage<CheckHandleRequest> {
    private static readonly pb::MessageParser<CheckHandleRequest> _parser = new pb::MessageParser<CheckHandleRequest>(() => new CheckHandleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckHandleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckHandleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckHandleRequest(CheckHandleRequest other) : this() {
      handle_ = other.handle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckHandleRequest Clone() {
      return new CheckHandleRequest(this);
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 1;
    private string handle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Handle {
      get { return handle_; }
      set {
        handle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckHandleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckHandleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Handle != other.Handle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Handle.Length != 0) hash ^= Handle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Handle.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Handle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Handle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Handle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckHandleRequest other) {
      if (other == null) {
        return;
      }
      if (other.Handle.Length != 0) {
        Handle = other.Handle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Handle = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
