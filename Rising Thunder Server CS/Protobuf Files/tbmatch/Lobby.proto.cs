// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tbmatch/lobby.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tbmatch {

  /// <summary>Holder for reflection information generated from tbmatch/lobby.proto</summary>
  public static partial class LobbyReflection {

    #region Descriptor
    /// <summary>File descriptor for tbmatch/lobby.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LobbyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChN0Ym1hdGNoL2xvYmJ5LnByb3RvEgd0Ym1hdGNoGhF0YnJwYy90YnJwYy5w",
            "cm90bxoTdGJtYXRjaC9tYXRjaC5wcm90byJPCgtMb2JieU1lbWJlchISCgph",
            "Y2NvdW50X2lkGAEgASgDEg4KBmhhbmRsZRgCIAEoCRINCgVvd25lchgKIAEo",
            "CBINCgVyZWFkeRgLIAEoCCLzAQoFTG9iYnkSEAoIbG9iYnlfaWQYASABKAMS",
            "IAoEdHlwZRgCIAEoDjISLnRibWF0Y2guTG9iYnlUeXBlEgwKBG5hbWUYAyAB",
            "KAkSIgoFc3RhdGUYBSABKA4yEy50Ym1hdGNoLkxvYmJ5U3RhdGUSJAoGbWVt",
            "YmVyGAogAygLMhQudGJtYXRjaC5Mb2JieU1lbWJlchIlCgdvcHRpb25zGAsg",
            "ASgLMhQudGJtYXRjaC5HYW1lT3B0aW9ucxIoCgtnYW1lX2NvbmZpZxgUIAEo",
            "CzITLnRibWF0Y2guR2FtZUNvbmZpZxINCgVxdWV1ZRgeIAMoAyJEChJDcmVh",
            "dGVMb2JieVJlcXVlc3QSIAoEdHlwZRgBIAEoDjISLnRibWF0Y2guTG9iYnlU",
            "eXBlEgwKBG5hbWUYAiABKAkiKwoXR2V0TG9iYnlKb2luQ29kZVJlcXVlc3QS",
            "EAoIbG9iYnlfaWQYASABKAMiKwoWR2V0TG9iYnlKb2luQ29kZVJlc3VsdBIR",
            "Cglqb2luX2NvZGUYASABKAkiJgoWSm9pbkxvYmJ5QnlDb2RlUmVxdWVzdBIM",
            "CgRjb2RlGAEgASgJIncKFExvYmJ5U2V0UmVhZHlSZXF1ZXN0Eg0KBXJlYWR5",
            "GAIgASgIEiUKB25ldHdvcmsYCiABKAsyFC50Ym1hdGNoLk5ldHdvcmtBZGRy",
            "EikKCWNoYXJhY3RlchgLIAEoCzIWLnRibWF0Y2guQ2hhcmFjdGVyU3BlYyJD",
            "ChpMb2JieVNldEdhbWVPcHRpb25zUmVxdWVzdBIlCgdvcHRpb25zGAEgASgL",
            "MhQudGJtYXRjaC5HYW1lT3B0aW9ucyJPChRMb2JieVNldE93bmVyUmVxdWVz",
            "dBIQCghsb2JieV9pZBgBIAEoAxISCgphY2NvdW50X2lkGAIgASgDEhEKCXNl",
            "dF9vd25lchgDIAEoCCI7ChNMb2JieUJhblVzZXJSZXF1ZXN0EhAKCGxvYmJ5",
            "X2lkGAEgASgDEhIKCmFjY291bnRfaWQYAiABKAMiPgoWTG9iYnlSZW1vdmVV",
            "c2VyUmVxdWVzdBIQCghsb2JieV9pZBgBIAEoAxISCgphY2NvdW50X2lkGAIg",
            "ASgDKi8KCUxvYmJ5VHlwZRITCg9MT0JCWV9UWVBFX1pFUk8QABINCglMVF9R",
            "VUVVRUQQASpTCgpMb2JieVN0YXRlEhQKEExPQkJZX1NUQVRFX1pFUk8QABIL",
            "CgdMU19JRExFEAESFAoQTFNfTUFUQ0hfUEVORElORxACEgwKCExTX01BVENI",
            "EAMyqQUKDExvYmJ5U2VydmljZRJCCgtDcmVhdGVMb2JieRIbLnRibWF0Y2gu",
            "Q3JlYXRlTG9iYnlSZXF1ZXN0GgwudGJycGMuRW1wdHkiCNjzGGTI8xgLEl8K",
            "EEdldExvYmJ5Sm9pbkNvZGUSIC50Ym1hdGNoLkdldExvYmJ5Sm9pbkNvZGVS",
            "ZXF1ZXN0Gh8udGJtYXRjaC5HZXRMb2JieUpvaW5Db2RlUmVzdWx0IgjY8xhk",
            "yPMYCxJKCg9Kb2luTG9iYnlCeUNvZGUSHy50Ym1hdGNoLkpvaW5Mb2JieUJ5",
            "Q29kZVJlcXVlc3QaDC50YnJwYy5FbXB0eSII2PMYZMjzGAsSMgoKTGVhdmVM",
            "b2JieRIMLnRicnBjLkVtcHR5GgwudGJycGMuRW1wdHkiCNjzGGTI8xgLEkYK",
            "DUxvYmJ5U2V0UmVhZHkSHS50Ym1hdGNoLkxvYmJ5U2V0UmVhZHlSZXF1ZXN0",
            "GgwudGJycGMuRW1wdHkiCNjzGGTI8xgLEkYKDUxvYmJ5U2V0T3duZXISHS50",
            "Ym1hdGNoLkxvYmJ5U2V0T3duZXJSZXF1ZXN0GgwudGJycGMuRW1wdHkiCNjz",
            "GGTI8xgLElIKE0xvYmJ5U2V0R2FtZU9wdGlvbnMSIy50Ym1hdGNoLkxvYmJ5",
            "U2V0R2FtZU9wdGlvbnNSZXF1ZXN0GgwudGJycGMuRW1wdHkiCNjzGGTI8xgL",
            "EkQKDExvYmJ5QmFuVXNlchIcLnRibWF0Y2guTG9iYnlCYW5Vc2VyUmVxdWVz",
            "dBoMLnRicnBjLkVtcHR5IgjY8xhkyPMYCxJKCg9Mb2JieVJlbW92ZVVzZXIS",
            "Hy50Ym1hdGNoLkxvYmJ5UmVtb3ZlVXNlclJlcXVlc3QaDC50YnJwYy5FbXB0",
            "eSII2PMYZMjzGAtiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tbrpc.TbrpcReflection.Descriptor, global::Tbmatch.MatchReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Tbmatch.LobbyType), typeof(global::Tbmatch.LobbyState), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.LobbyMember), global::Tbmatch.LobbyMember.Parser, new[]{ "AccountId", "Handle", "Owner", "Ready" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.Lobby), global::Tbmatch.Lobby.Parser, new[]{ "LobbyId", "Type", "Name", "State", "Member", "Options", "GameConfig", "Queue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.CreateLobbyRequest), global::Tbmatch.CreateLobbyRequest.Parser, new[]{ "Type", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.GetLobbyJoinCodeRequest), global::Tbmatch.GetLobbyJoinCodeRequest.Parser, new[]{ "LobbyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.GetLobbyJoinCodeResult), global::Tbmatch.GetLobbyJoinCodeResult.Parser, new[]{ "JoinCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.JoinLobbyByCodeRequest), global::Tbmatch.JoinLobbyByCodeRequest.Parser, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.LobbySetReadyRequest), global::Tbmatch.LobbySetReadyRequest.Parser, new[]{ "Ready", "Network", "Character" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.LobbySetGameOptionsRequest), global::Tbmatch.LobbySetGameOptionsRequest.Parser, new[]{ "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.LobbySetOwnerRequest), global::Tbmatch.LobbySetOwnerRequest.Parser, new[]{ "LobbyId", "AccountId", "SetOwner" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.LobbyBanUserRequest), global::Tbmatch.LobbyBanUserRequest.Parser, new[]{ "LobbyId", "AccountId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tbmatch.LobbyRemoveUserRequest), global::Tbmatch.LobbyRemoveUserRequest.Parser, new[]{ "LobbyId", "AccountId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LobbyType {
    [pbr::OriginalName("LOBBY_TYPE_ZERO")] Zero = 0,
    [pbr::OriginalName("LT_QUEUED")] LtQueued = 1,
  }

  public enum LobbyState {
    [pbr::OriginalName("LOBBY_STATE_ZERO")] Zero = 0,
    /// <summary>
    /// Waiting for 2 ready players.
    /// </summary>
    [pbr::OriginalName("LS_IDLE")] LsIdle = 1,
    /// <summary>
    /// Match is ready to start.
    /// </summary>
    [pbr::OriginalName("LS_MATCH_PENDING")] LsMatchPending = 2,
    /// <summary>
    /// A match is in progress.
    /// </summary>
    [pbr::OriginalName("LS_MATCH")] LsMatch = 3,
  }

  #endregion

  #region Messages
  public sealed partial class LobbyMember : pb::IMessage<LobbyMember> {
    private static readonly pb::MessageParser<LobbyMember> _parser = new pb::MessageParser<LobbyMember>(() => new LobbyMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyMember(LobbyMember other) : this() {
      accountId_ = other.accountId_;
      handle_ = other.handle_;
      owner_ = other.owner_;
      ready_ = other.ready_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyMember Clone() {
      return new LobbyMember(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 2;
    private string handle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Handle {
      get { return handle_; }
      set {
        handle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 10;
    private bool owner_;
    /// <summary>
    /// Lobby owner?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 11;
    private bool ready_;
    /// <summary>
    /// Ready for next match?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ready {
      get { return ready_; }
      set {
        ready_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (Handle != other.Handle) return false;
      if (Owner != other.Owner) return false;
      if (Ready != other.Ready) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (Handle.Length != 0) hash ^= Handle.GetHashCode();
      if (Owner != false) hash ^= Owner.GetHashCode();
      if (Ready != false) hash ^= Ready.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (Handle.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Handle);
      }
      if (Owner != false) {
        output.WriteRawTag(80);
        output.WriteBool(Owner);
      }
      if (Ready != false) {
        output.WriteRawTag(88);
        output.WriteBool(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (Handle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Handle);
      }
      if (Owner != false) {
        size += 1 + 1;
      }
      if (Ready != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyMember other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.Handle.Length != 0) {
        Handle = other.Handle;
      }
      if (other.Owner != false) {
        Owner = other.Owner;
      }
      if (other.Ready != false) {
        Ready = other.Ready;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 18: {
            Handle = input.ReadString();
            break;
          }
          case 80: {
            Owner = input.ReadBool();
            break;
          }
          case 88: {
            Ready = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Lobby : pb::IMessage<Lobby> {
    private static readonly pb::MessageParser<Lobby> _parser = new pb::MessageParser<Lobby>(() => new Lobby());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Lobby> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lobby() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lobby(Lobby other) : this() {
      lobbyId_ = other.lobbyId_;
      type_ = other.type_;
      name_ = other.name_;
      state_ = other.state_;
      member_ = other.member_.Clone();
      Options = other.options_ != null ? other.Options.Clone() : null;
      GameConfig = other.gameConfig_ != null ? other.GameConfig.Clone() : null;
      queue_ = other.queue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lobby Clone() {
      return new Lobby(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private long lobbyId_;
    /// <summary>
    /// Unique identifier for this lobby.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Tbmatch.LobbyType type_ = 0;
    /// <summary>
    /// Style of gameplay conducted in the lobby.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tbmatch.LobbyType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// Name given by creator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private global::Tbmatch.LobbyState state_ = 0;
    /// <summary>
    /// Current state of the lobby.
    /// Updated by LobbyStatusEvent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tbmatch.LobbyState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Tbmatch.LobbyMember> _repeated_member_codec
        = pb::FieldCodec.ForMessage(82, global::Tbmatch.LobbyMember.Parser);
    private readonly pbc::RepeatedField<global::Tbmatch.LobbyMember> member_ = new pbc::RepeatedField<global::Tbmatch.LobbyMember>();
    /// <summary>
    /// People currently in the lobby.
    /// Updated by LobbyMemberUpdateEvent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tbmatch.LobbyMember> Member {
      get { return member_; }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 11;
    private global::Tbmatch.GameOptions options_;
    /// <summary>
    /// Options included for the next match generated by this lobby.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tbmatch.GameOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    /// <summary>Field number for the "game_config" field.</summary>
    public const int GameConfigFieldNumber = 20;
    private global::Tbmatch.GameConfig gameConfig_;
    /// <summary>
    /// For state == LS_MATCH, start config of the game being played.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tbmatch.GameConfig GameConfig {
      get { return gameConfig_; }
      set {
        gameConfig_ = value;
      }
    }

    /// <summary>Field number for the "queue" field.</summary>
    public const int QueueFieldNumber = 30;
    private static readonly pb::FieldCodec<long> _repeated_queue_codec
        = pb::FieldCodec.ForInt64(242);
    private readonly pbc::RepeatedField<long> queue_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// For type == LT_QUEUED, this is the current queue order of account IDs.
    /// Updated by LobbyMemberUpdateEvent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Queue {
      get { return queue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Lobby);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Lobby other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      if(!member_.Equals(other.member_)) return false;
      if (!object.Equals(Options, other.Options)) return false;
      if (!object.Equals(GameConfig, other.GameConfig)) return false;
      if(!queue_.Equals(other.queue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId != 0L) hash ^= LobbyId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      hash ^= member_.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (gameConfig_ != null) hash ^= GameConfig.GetHashCode();
      hash ^= queue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LobbyId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LobbyId);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (State != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      member_.WriteTo(output, _repeated_member_codec);
      if (options_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Options);
      }
      if (gameConfig_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GameConfig);
      }
      queue_.WriteTo(output, _repeated_queue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LobbyId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      size += member_.CalculateSize(_repeated_member_codec);
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (gameConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GameConfig);
      }
      size += queue_.CalculateSize(_repeated_queue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Lobby other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId != 0L) {
        LobbyId = other.LobbyId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != 0) {
        State = other.State;
      }
      member_.Add(other.member_);
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Tbmatch.GameOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.gameConfig_ != null) {
        if (gameConfig_ == null) {
          gameConfig_ = new global::Tbmatch.GameConfig();
        }
        GameConfig.MergeFrom(other.GameConfig);
      }
      queue_.Add(other.queue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LobbyId = input.ReadInt64();
            break;
          }
          case 16: {
            type_ = (global::Tbmatch.LobbyType) input.ReadEnum();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            state_ = (global::Tbmatch.LobbyState) input.ReadEnum();
            break;
          }
          case 82: {
            member_.AddEntriesFrom(input, _repeated_member_codec);
            break;
          }
          case 90: {
            if (options_ == null) {
              options_ = new global::Tbmatch.GameOptions();
            }
            input.ReadMessage(options_);
            break;
          }
          case 162: {
            if (gameConfig_ == null) {
              gameConfig_ = new global::Tbmatch.GameConfig();
            }
            input.ReadMessage(gameConfig_);
            break;
          }
          case 242:
          case 240: {
            queue_.AddEntriesFrom(input, _repeated_queue_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateLobbyRequest : pb::IMessage<CreateLobbyRequest> {
    private static readonly pb::MessageParser<CreateLobbyRequest> _parser = new pb::MessageParser<CreateLobbyRequest>(() => new CreateLobbyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateLobbyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLobbyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLobbyRequest(CreateLobbyRequest other) : this() {
      type_ = other.type_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLobbyRequest Clone() {
      return new CreateLobbyRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Tbmatch.LobbyType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tbmatch.LobbyType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateLobbyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateLobbyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateLobbyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Tbmatch.LobbyType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLobbyJoinCodeRequest : pb::IMessage<GetLobbyJoinCodeRequest> {
    private static readonly pb::MessageParser<GetLobbyJoinCodeRequest> _parser = new pb::MessageParser<GetLobbyJoinCodeRequest>(() => new GetLobbyJoinCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLobbyJoinCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLobbyJoinCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLobbyJoinCodeRequest(GetLobbyJoinCodeRequest other) : this() {
      lobbyId_ = other.lobbyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLobbyJoinCodeRequest Clone() {
      return new GetLobbyJoinCodeRequest(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private long lobbyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLobbyJoinCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLobbyJoinCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId != 0L) hash ^= LobbyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LobbyId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LobbyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LobbyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLobbyJoinCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId != 0L) {
        LobbyId = other.LobbyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LobbyId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLobbyJoinCodeResult : pb::IMessage<GetLobbyJoinCodeResult> {
    private static readonly pb::MessageParser<GetLobbyJoinCodeResult> _parser = new pb::MessageParser<GetLobbyJoinCodeResult>(() => new GetLobbyJoinCodeResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLobbyJoinCodeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLobbyJoinCodeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLobbyJoinCodeResult(GetLobbyJoinCodeResult other) : this() {
      joinCode_ = other.joinCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLobbyJoinCodeResult Clone() {
      return new GetLobbyJoinCodeResult(this);
    }

    /// <summary>Field number for the "join_code" field.</summary>
    public const int JoinCodeFieldNumber = 1;
    private string joinCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JoinCode {
      get { return joinCode_; }
      set {
        joinCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLobbyJoinCodeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLobbyJoinCodeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JoinCode != other.JoinCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JoinCode.Length != 0) hash ^= JoinCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JoinCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JoinCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JoinCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JoinCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLobbyJoinCodeResult other) {
      if (other == null) {
        return;
      }
      if (other.JoinCode.Length != 0) {
        JoinCode = other.JoinCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JoinCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinLobbyByCodeRequest : pb::IMessage<JoinLobbyByCodeRequest> {
    private static readonly pb::MessageParser<JoinLobbyByCodeRequest> _parser = new pb::MessageParser<JoinLobbyByCodeRequest>(() => new JoinLobbyByCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinLobbyByCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyByCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyByCodeRequest(JoinLobbyByCodeRequest other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyByCodeRequest Clone() {
      return new JoinLobbyByCodeRequest(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinLobbyByCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinLobbyByCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinLobbyByCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LobbySetReadyRequest : pb::IMessage<LobbySetReadyRequest> {
    private static readonly pb::MessageParser<LobbySetReadyRequest> _parser = new pb::MessageParser<LobbySetReadyRequest>(() => new LobbySetReadyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbySetReadyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbySetReadyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbySetReadyRequest(LobbySetReadyRequest other) : this() {
      ready_ = other.ready_;
      Network = other.network_ != null ? other.Network.Clone() : null;
      Character = other.character_ != null ? other.Character.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbySetReadyRequest Clone() {
      return new LobbySetReadyRequest(this);
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 2;
    private bool ready_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ready {
      get { return ready_; }
      set {
        ready_ = value;
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 10;
    private global::Tbmatch.NetworkAddr network_;
    /// <summary>
    /// If ready == true, layer network and character data for the next match.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tbmatch.NetworkAddr Network {
      get { return network_; }
      set {
        network_ = value;
      }
    }

    /// <summary>Field number for the "character" field.</summary>
    public const int CharacterFieldNumber = 11;
    private global::Tbmatch.CharacterSpec character_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tbmatch.CharacterSpec Character {
      get { return character_; }
      set {
        character_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbySetReadyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbySetReadyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ready != other.Ready) return false;
      if (!object.Equals(Network, other.Network)) return false;
      if (!object.Equals(Character, other.Character)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ready != false) hash ^= Ready.GetHashCode();
      if (network_ != null) hash ^= Network.GetHashCode();
      if (character_ != null) hash ^= Character.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ready != false) {
        output.WriteRawTag(16);
        output.WriteBool(Ready);
      }
      if (network_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Network);
      }
      if (character_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Character);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ready != false) {
        size += 1 + 1;
      }
      if (network_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Network);
      }
      if (character_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Character);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbySetReadyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ready != false) {
        Ready = other.Ready;
      }
      if (other.network_ != null) {
        if (network_ == null) {
          network_ = new global::Tbmatch.NetworkAddr();
        }
        Network.MergeFrom(other.Network);
      }
      if (other.character_ != null) {
        if (character_ == null) {
          character_ = new global::Tbmatch.CharacterSpec();
        }
        Character.MergeFrom(other.Character);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Ready = input.ReadBool();
            break;
          }
          case 82: {
            if (network_ == null) {
              network_ = new global::Tbmatch.NetworkAddr();
            }
            input.ReadMessage(network_);
            break;
          }
          case 90: {
            if (character_ == null) {
              character_ = new global::Tbmatch.CharacterSpec();
            }
            input.ReadMessage(character_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LobbySetGameOptionsRequest : pb::IMessage<LobbySetGameOptionsRequest> {
    private static readonly pb::MessageParser<LobbySetGameOptionsRequest> _parser = new pb::MessageParser<LobbySetGameOptionsRequest>(() => new LobbySetGameOptionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbySetGameOptionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbySetGameOptionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbySetGameOptionsRequest(LobbySetGameOptionsRequest other) : this() {
      Options = other.options_ != null ? other.Options.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbySetGameOptionsRequest Clone() {
      return new LobbySetGameOptionsRequest(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 1;
    private global::Tbmatch.GameOptions options_;
    /// <summary>
    /// Any set fields will be updated in the lobby GameConfig template.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tbmatch.GameOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbySetGameOptionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbySetGameOptionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (options_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbySetGameOptionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Tbmatch.GameOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (options_ == null) {
              options_ = new global::Tbmatch.GameOptions();
            }
            input.ReadMessage(options_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LobbySetOwnerRequest : pb::IMessage<LobbySetOwnerRequest> {
    private static readonly pb::MessageParser<LobbySetOwnerRequest> _parser = new pb::MessageParser<LobbySetOwnerRequest>(() => new LobbySetOwnerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbySetOwnerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbySetOwnerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbySetOwnerRequest(LobbySetOwnerRequest other) : this() {
      lobbyId_ = other.lobbyId_;
      accountId_ = other.accountId_;
      setOwner_ = other.setOwner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbySetOwnerRequest Clone() {
      return new LobbySetOwnerRequest(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private long lobbyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = value;
      }
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "set_owner" field.</summary>
    public const int SetOwnerFieldNumber = 3;
    private bool setOwner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SetOwner {
      get { return setOwner_; }
      set {
        setOwner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbySetOwnerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbySetOwnerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      if (AccountId != other.AccountId) return false;
      if (SetOwner != other.SetOwner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId != 0L) hash ^= LobbyId.GetHashCode();
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (SetOwner != false) hash ^= SetOwner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LobbyId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LobbyId);
      }
      if (AccountId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AccountId);
      }
      if (SetOwner != false) {
        output.WriteRawTag(24);
        output.WriteBool(SetOwner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LobbyId);
      }
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (SetOwner != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbySetOwnerRequest other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId != 0L) {
        LobbyId = other.LobbyId;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.SetOwner != false) {
        SetOwner = other.SetOwner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LobbyId = input.ReadInt64();
            break;
          }
          case 16: {
            AccountId = input.ReadInt64();
            break;
          }
          case 24: {
            SetOwner = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LobbyBanUserRequest : pb::IMessage<LobbyBanUserRequest> {
    private static readonly pb::MessageParser<LobbyBanUserRequest> _parser = new pb::MessageParser<LobbyBanUserRequest>(() => new LobbyBanUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyBanUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyBanUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyBanUserRequest(LobbyBanUserRequest other) : this() {
      lobbyId_ = other.lobbyId_;
      accountId_ = other.accountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyBanUserRequest Clone() {
      return new LobbyBanUserRequest(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private long lobbyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = value;
      }
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyBanUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyBanUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      if (AccountId != other.AccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId != 0L) hash ^= LobbyId.GetHashCode();
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LobbyId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LobbyId);
      }
      if (AccountId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LobbyId);
      }
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyBanUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId != 0L) {
        LobbyId = other.LobbyId;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LobbyId = input.ReadInt64();
            break;
          }
          case 16: {
            AccountId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LobbyRemoveUserRequest : pb::IMessage<LobbyRemoveUserRequest> {
    private static readonly pb::MessageParser<LobbyRemoveUserRequest> _parser = new pb::MessageParser<LobbyRemoveUserRequest>(() => new LobbyRemoveUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyRemoveUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tbmatch.LobbyReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyRemoveUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyRemoveUserRequest(LobbyRemoveUserRequest other) : this() {
      lobbyId_ = other.lobbyId_;
      accountId_ = other.accountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyRemoveUserRequest Clone() {
      return new LobbyRemoveUserRequest(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private long lobbyId_;
    /// <summary>
    /// ID of the lobby.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = value;
      }
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private long accountId_;
    /// <summary>
    /// Account ID of the user to kick.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyRemoveUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyRemoveUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      if (AccountId != other.AccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId != 0L) hash ^= LobbyId.GetHashCode();
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LobbyId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LobbyId);
      }
      if (AccountId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LobbyId);
      }
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyRemoveUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId != 0L) {
        LobbyId = other.LobbyId;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LobbyId = input.ReadInt64();
            break;
          }
          case 16: {
            AccountId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
