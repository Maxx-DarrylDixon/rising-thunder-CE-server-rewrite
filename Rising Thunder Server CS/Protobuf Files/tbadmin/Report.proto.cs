// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tbadmin/report.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rising_Thunder_Server_CS.Protobufs.Tbadmin {

  /// <summary>Holder for reflection information generated from tbadmin/report.proto</summary>
  public static partial class ReportReflection {

    #region Descriptor
    /// <summary>File descriptor for tbadmin/report.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReportReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChR0YmFkbWluL3JlcG9ydC5wcm90bxIHdGJhZG1pbhoRdGJycGMvdGJycGMu",
            "cHJvdG8aE3RibWF0Y2gvbWF0Y2gucHJvdG8iWQoUQ3Jhc2hCdWlsZElkZW50",
            "aWZpZXISGAoQYnVpbGRfaWRlbnRpZmllchgBIAEoCRIQCghhcHBfbmFtZRgC",
            "IAEoCRIVCg1idWlsZF92ZXJzaW9uGAMgASgJIocBCg9DcmFzaENvbGxlY3Rp",
            "b24SGAoQY3Jhc2hfaWRlbnRpZmllchgBIAEoCRIYChBidWlsZF9pZGVudGlm",
            "aWVyGAIgASgJEhMKC29jY3VycmVuY2VzGAMgASgEEhYKDnVzZXJzX2FmZmVj",
            "dGVkGAQgASgEEhMKC3N0YWNrX3RyYWNlGAUgASgJImYKDFN5bWJvbEhlYWRl",
            "chITCgtzeW1ib2xfcGF0aBgBIAEoCRIQCghhcHBfbmFtZRgCIAEoCRIVCg1i",
            "dWlsZF92ZXJzaW9uGAMgASgJEhgKEHN5bWJvbF9kaXJlY3RvcnkYBCABKAki",
            "jgEKEUNyYXNoUmVwb3J0SGVhZGVyEhMKC3JlcG9ydF9wYXRoGAEgASgJEhEK",
            "CXRpbWVzdGFtcBgCIAEoAxIQCghhcHBfbmFtZRgDIAEoCRIVCg1idWlsZF92",
            "ZXJzaW9uGAQgASgJEhIKCm1hY2hpbmVfaWQYBSABKAkSFAoMY3Jhc2hfbnVt",
            "YmVyGAYgASgJIjMKEkxpc3REZXN5bmNzUmVxdWVzdBIOCgZvZmZzZXQYASAB",
            "KAUSDQoFbGltaXQYAiABKAUiQAoRTGlzdERlc3luY3NSZXN1bHQSKwoGZGVz",
            "eW5jGAEgAygLMhsudGJtYXRjaC5EZXN5bmNSZXBvcnRIZWFkZXIiZwoSTGlz",
            "dENyYXNoZXNSZXF1ZXN0Eg4KBm9mZnNldBgBIAEoBRINCgVsaW1pdBgCIAEo",
            "BRIYChBidWlsZF9pZGVudGlmaWVyGAMgASgJEhgKEGNyYXNoX2lkZW50aWZp",
            "ZXIYBCABKAkibgoRTGlzdENyYXNoZXNSZXN1bHQSLAoKY29sbGVjdGlvbhgB",
            "IAEoCzIYLnRiYWRtaW4uQ3Jhc2hDb2xsZWN0aW9uEisKB3JlcG9ydHMYAiAD",
            "KAsyGi50YmFkbWluLkNyYXNoUmVwb3J0SGVhZGVyIkEKIExpc3RDcmFzaEJ1",
            "aWxkSWRlbnRpZmllcnNSZXF1ZXN0Eg4KBm9mZnNldBgBIAEoBRINCgVsaW1p",
            "dBgCIAEoBSJVCh9MaXN0Q3Jhc2hCdWlsZElkZW50aWZpZXJzUmVzdWx0EjIK",
            "C2lkZW50aWZpZXJzGAEgAygLMh0udGJhZG1pbi5DcmFzaEJ1aWxkSWRlbnRp",
            "ZmllciJWChtMaXN0Q3Jhc2hDb2xsZWN0aW9uc1JlcXVlc3QSDgoGb2Zmc2V0",
            "GAEgASgFEg0KBWxpbWl0GAIgASgFEhgKEGJ1aWxkX2lkZW50aWZpZXIYAyAB",
            "KAkiSwoaTGlzdENyYXNoQ29sbGVjdGlvbnNSZXN1bHQSLQoLY29sbGVjdGlv",
            "bnMYASADKAsyGC50YmFkbWluLkNyYXNoQ29sbGVjdGlvbjKQAwoRRmFpbFJl",
            "cG9ydFNlcnZpY2USTAoLTGlzdERlc3luY3MSGy50YmFkbWluLkxpc3REZXN5",
            "bmNzUmVxdWVzdBoaLnRiYWRtaW4uTGlzdERlc3luY3NSZXN1bHQiBMjzGBIS",
            "TAoLTGlzdENyYXNoZXMSGy50YmFkbWluLkxpc3RDcmFzaGVzUmVxdWVzdBoa",
            "LnRiYWRtaW4uTGlzdENyYXNoZXNSZXN1bHQiBMjzGBISdgoZTGlzdENyYXNo",
            "QnVpbGRJZGVudGlmaWVycxIpLnRiYWRtaW4uTGlzdENyYXNoQnVpbGRJZGVu",
            "dGlmaWVyc1JlcXVlc3QaKC50YmFkbWluLkxpc3RDcmFzaEJ1aWxkSWRlbnRp",
            "ZmllcnNSZXN1bHQiBMjzGBISZwoUTGlzdENyYXNoQ29sbGVjdGlvbnMSJC50",
            "YmFkbWluLkxpc3RDcmFzaENvbGxlY3Rpb25zUmVxdWVzdBojLnRiYWRtaW4u",
            "TGlzdENyYXNoQ29sbGVjdGlvbnNSZXN1bHQiBMjzGBJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.TbrpcReflection.Descriptor, global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.MatchReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashBuildIdentifier), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashBuildIdentifier.Parser, new[]{ "BuildIdentifier", "AppName", "BuildVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection.Parser, new[]{ "CrashIdentifier", "BuildIdentifier", "Occurrences", "UsersAffected", "StackTrace" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SymbolHeader), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SymbolHeader.Parser, new[]{ "SymbolPath", "AppName", "BuildVersion", "SymbolDirectory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashReportHeader), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashReportHeader.Parser, new[]{ "ReportPath", "Timestamp", "AppName", "BuildVersion", "MachineId", "CrashNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListDesyncsRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListDesyncsRequest.Parser, new[]{ "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListDesyncsResult), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListDesyncsResult.Parser, new[]{ "Desync" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashesRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashesRequest.Parser, new[]{ "Offset", "Limit", "BuildIdentifier", "CrashIdentifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashesResult), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashesResult.Parser, new[]{ "Collection", "Reports" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashBuildIdentifiersRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashBuildIdentifiersRequest.Parser, new[]{ "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashBuildIdentifiersResult), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashBuildIdentifiersResult.Parser, new[]{ "Identifiers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashCollectionsRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashCollectionsRequest.Parser, new[]{ "Offset", "Limit", "BuildIdentifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashCollectionsResult), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ListCrashCollectionsResult.Parser, new[]{ "Collections" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CrashBuildIdentifier : pb::IMessage<CrashBuildIdentifier> {
    private static readonly pb::MessageParser<CrashBuildIdentifier> _parser = new pb::MessageParser<CrashBuildIdentifier>(() => new CrashBuildIdentifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrashBuildIdentifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrashBuildIdentifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrashBuildIdentifier(CrashBuildIdentifier other) : this() {
      buildIdentifier_ = other.buildIdentifier_;
      appName_ = other.appName_;
      buildVersion_ = other.buildVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrashBuildIdentifier Clone() {
      return new CrashBuildIdentifier(this);
    }

    /// <summary>Field number for the "build_identifier" field.</summary>
    public const int BuildIdentifierFieldNumber = 1;
    private string buildIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildIdentifier {
      get { return buildIdentifier_; }
      set {
        buildIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 2;
    private string appName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "build_version" field.</summary>
    public const int BuildVersionFieldNumber = 3;
    private string buildVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildVersion {
      get { return buildVersion_; }
      set {
        buildVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrashBuildIdentifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrashBuildIdentifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildIdentifier != other.BuildIdentifier) return false;
      if (AppName != other.AppName) return false;
      if (BuildVersion != other.BuildVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildIdentifier.Length != 0) hash ^= BuildIdentifier.GetHashCode();
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (BuildVersion.Length != 0) hash ^= BuildVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildIdentifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BuildIdentifier);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppName);
      }
      if (BuildVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BuildVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildIdentifier);
      }
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (BuildVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrashBuildIdentifier other) {
      if (other == null) {
        return;
      }
      if (other.BuildIdentifier.Length != 0) {
        BuildIdentifier = other.BuildIdentifier;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.BuildVersion.Length != 0) {
        BuildVersion = other.BuildVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BuildIdentifier = input.ReadString();
            break;
          }
          case 18: {
            AppName = input.ReadString();
            break;
          }
          case 26: {
            BuildVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrashCollection : pb::IMessage<CrashCollection> {
    private static readonly pb::MessageParser<CrashCollection> _parser = new pb::MessageParser<CrashCollection>(() => new CrashCollection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrashCollection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrashCollection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrashCollection(CrashCollection other) : this() {
      crashIdentifier_ = other.crashIdentifier_;
      buildIdentifier_ = other.buildIdentifier_;
      occurrences_ = other.occurrences_;
      usersAffected_ = other.usersAffected_;
      stackTrace_ = other.stackTrace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrashCollection Clone() {
      return new CrashCollection(this);
    }

    /// <summary>Field number for the "crash_identifier" field.</summary>
    public const int CrashIdentifierFieldNumber = 1;
    private string crashIdentifier_ = "";
    /// <summary>
    /// The top line of the stack trace, used as a unique identifier to group together the same types of crash.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CrashIdentifier {
      get { return crashIdentifier_; }
      set {
        crashIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "build_identifier" field.</summary>
    public const int BuildIdentifierFieldNumber = 2;
    private string buildIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildIdentifier {
      get { return buildIdentifier_; }
      set {
        buildIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "occurrences" field.</summary>
    public const int OccurrencesFieldNumber = 3;
    private ulong occurrences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Occurrences {
      get { return occurrences_; }
      set {
        occurrences_ = value;
      }
    }

    /// <summary>Field number for the "users_affected" field.</summary>
    public const int UsersAffectedFieldNumber = 4;
    private ulong usersAffected_;
    /// <summary>
    /// The number of unique users affected by the crash. Less than num_occurrences if a crash happens to the same person more than once.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UsersAffected {
      get { return usersAffected_; }
      set {
        usersAffected_ = value;
      }
    }

    /// <summary>Field number for the "stack_trace" field.</summary>
    public const int StackTraceFieldNumber = 5;
    private string stackTrace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StackTrace {
      get { return stackTrace_; }
      set {
        stackTrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrashCollection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrashCollection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CrashIdentifier != other.CrashIdentifier) return false;
      if (BuildIdentifier != other.BuildIdentifier) return false;
      if (Occurrences != other.Occurrences) return false;
      if (UsersAffected != other.UsersAffected) return false;
      if (StackTrace != other.StackTrace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CrashIdentifier.Length != 0) hash ^= CrashIdentifier.GetHashCode();
      if (BuildIdentifier.Length != 0) hash ^= BuildIdentifier.GetHashCode();
      if (Occurrences != 0UL) hash ^= Occurrences.GetHashCode();
      if (UsersAffected != 0UL) hash ^= UsersAffected.GetHashCode();
      if (StackTrace.Length != 0) hash ^= StackTrace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CrashIdentifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CrashIdentifier);
      }
      if (BuildIdentifier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BuildIdentifier);
      }
      if (Occurrences != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Occurrences);
      }
      if (UsersAffected != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(UsersAffected);
      }
      if (StackTrace.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StackTrace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CrashIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CrashIdentifier);
      }
      if (BuildIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildIdentifier);
      }
      if (Occurrences != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Occurrences);
      }
      if (UsersAffected != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UsersAffected);
      }
      if (StackTrace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StackTrace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrashCollection other) {
      if (other == null) {
        return;
      }
      if (other.CrashIdentifier.Length != 0) {
        CrashIdentifier = other.CrashIdentifier;
      }
      if (other.BuildIdentifier.Length != 0) {
        BuildIdentifier = other.BuildIdentifier;
      }
      if (other.Occurrences != 0UL) {
        Occurrences = other.Occurrences;
      }
      if (other.UsersAffected != 0UL) {
        UsersAffected = other.UsersAffected;
      }
      if (other.StackTrace.Length != 0) {
        StackTrace = other.StackTrace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CrashIdentifier = input.ReadString();
            break;
          }
          case 18: {
            BuildIdentifier = input.ReadString();
            break;
          }
          case 24: {
            Occurrences = input.ReadUInt64();
            break;
          }
          case 32: {
            UsersAffected = input.ReadUInt64();
            break;
          }
          case 42: {
            StackTrace = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SymbolHeader : pb::IMessage<SymbolHeader> {
    private static readonly pb::MessageParser<SymbolHeader> _parser = new pb::MessageParser<SymbolHeader>(() => new SymbolHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SymbolHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolHeader(SymbolHeader other) : this() {
      symbolPath_ = other.symbolPath_;
      appName_ = other.appName_;
      buildVersion_ = other.buildVersion_;
      symbolDirectory_ = other.symbolDirectory_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolHeader Clone() {
      return new SymbolHeader(this);
    }

    /// <summary>Field number for the "symbol_path" field.</summary>
    public const int SymbolPathFieldNumber = 1;
    private string symbolPath_ = "";
    /// <summary>
    /// The path on gcs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SymbolPath {
      get { return symbolPath_; }
      set {
        symbolPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 2;
    private string appName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "build_version" field.</summary>
    public const int BuildVersionFieldNumber = 3;
    private string buildVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildVersion {
      get { return buildVersion_; }
      set {
        buildVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol_directory" field.</summary>
    public const int SymbolDirectoryFieldNumber = 4;
    private string symbolDirectory_ = "";
    /// <summary>
    ///The directory minidump_stackwalk will look for the symbol file in, retrieved from the first line of the sym file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SymbolDirectory {
      get { return symbolDirectory_; }
      set {
        symbolDirectory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SymbolHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SymbolHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SymbolPath != other.SymbolPath) return false;
      if (AppName != other.AppName) return false;
      if (BuildVersion != other.BuildVersion) return false;
      if (SymbolDirectory != other.SymbolDirectory) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SymbolPath.Length != 0) hash ^= SymbolPath.GetHashCode();
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (BuildVersion.Length != 0) hash ^= BuildVersion.GetHashCode();
      if (SymbolDirectory.Length != 0) hash ^= SymbolDirectory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SymbolPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SymbolPath);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppName);
      }
      if (BuildVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BuildVersion);
      }
      if (SymbolDirectory.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SymbolDirectory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SymbolPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SymbolPath);
      }
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (BuildVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildVersion);
      }
      if (SymbolDirectory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SymbolDirectory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SymbolHeader other) {
      if (other == null) {
        return;
      }
      if (other.SymbolPath.Length != 0) {
        SymbolPath = other.SymbolPath;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.BuildVersion.Length != 0) {
        BuildVersion = other.BuildVersion;
      }
      if (other.SymbolDirectory.Length != 0) {
        SymbolDirectory = other.SymbolDirectory;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SymbolPath = input.ReadString();
            break;
          }
          case 18: {
            AppName = input.ReadString();
            break;
          }
          case 26: {
            BuildVersion = input.ReadString();
            break;
          }
          case 34: {
            SymbolDirectory = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrashReportHeader : pb::IMessage<CrashReportHeader> {
    private static readonly pb::MessageParser<CrashReportHeader> _parser = new pb::MessageParser<CrashReportHeader>(() => new CrashReportHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrashReportHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrashReportHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrashReportHeader(CrashReportHeader other) : this() {
      reportPath_ = other.reportPath_;
      timestamp_ = other.timestamp_;
      appName_ = other.appName_;
      buildVersion_ = other.buildVersion_;
      machineId_ = other.machineId_;
      crashNumber_ = other.crashNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrashReportHeader Clone() {
      return new CrashReportHeader(this);
    }

    /// <summary>Field number for the "report_path" field.</summary>
    public const int ReportPathFieldNumber = 1;
    private string reportPath_ = "";
    /// <summary>
    /// The path on gcs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReportPath {
      get { return reportPath_; }
      set {
        reportPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 3;
    private string appName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "build_version" field.</summary>
    public const int BuildVersionFieldNumber = 4;
    private string buildVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildVersion {
      get { return buildVersion_; }
      set {
        buildVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "machine_id" field.</summary>
    public const int MachineIdFieldNumber = 5;
    private string machineId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MachineId {
      get { return machineId_; }
      set {
        machineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "crash_number" field.</summary>
    public const int CrashNumberFieldNumber = 6;
    private string crashNumber_ = "";
    /// <summary>
    /// The crash number on a per-build version basis
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CrashNumber {
      get { return crashNumber_; }
      set {
        crashNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrashReportHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrashReportHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReportPath != other.ReportPath) return false;
      if (Timestamp != other.Timestamp) return false;
      if (AppName != other.AppName) return false;
      if (BuildVersion != other.BuildVersion) return false;
      if (MachineId != other.MachineId) return false;
      if (CrashNumber != other.CrashNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReportPath.Length != 0) hash ^= ReportPath.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (BuildVersion.Length != 0) hash ^= BuildVersion.GetHashCode();
      if (MachineId.Length != 0) hash ^= MachineId.GetHashCode();
      if (CrashNumber.Length != 0) hash ^= CrashNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReportPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReportPath);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppName);
      }
      if (BuildVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BuildVersion);
      }
      if (MachineId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MachineId);
      }
      if (CrashNumber.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CrashNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReportPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportPath);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (BuildVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildVersion);
      }
      if (MachineId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineId);
      }
      if (CrashNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CrashNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrashReportHeader other) {
      if (other == null) {
        return;
      }
      if (other.ReportPath.Length != 0) {
        ReportPath = other.ReportPath;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.BuildVersion.Length != 0) {
        BuildVersion = other.BuildVersion;
      }
      if (other.MachineId.Length != 0) {
        MachineId = other.MachineId;
      }
      if (other.CrashNumber.Length != 0) {
        CrashNumber = other.CrashNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReportPath = input.ReadString();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            AppName = input.ReadString();
            break;
          }
          case 34: {
            BuildVersion = input.ReadString();
            break;
          }
          case 42: {
            MachineId = input.ReadString();
            break;
          }
          case 50: {
            CrashNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListDesyncsRequest : pb::IMessage<ListDesyncsRequest> {
    private static readonly pb::MessageParser<ListDesyncsRequest> _parser = new pb::MessageParser<ListDesyncsRequest>(() => new ListDesyncsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDesyncsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDesyncsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDesyncsRequest(ListDesyncsRequest other) : this() {
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDesyncsRequest Clone() {
      return new ListDesyncsRequest(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDesyncsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDesyncsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDesyncsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListDesyncsResult : pb::IMessage<ListDesyncsResult> {
    private static readonly pb::MessageParser<ListDesyncsResult> _parser = new pb::MessageParser<ListDesyncsResult>(() => new ListDesyncsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDesyncsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDesyncsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDesyncsResult(ListDesyncsResult other) : this() {
      desync_ = other.desync_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDesyncsResult Clone() {
      return new ListDesyncsResult(this);
    }

    /// <summary>Field number for the "desync" field.</summary>
    public const int DesyncFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.DesyncReportHeader> _repeated_desync_codec
        = pb::FieldCodec.ForMessage(10, global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.DesyncReportHeader.Parser);
    private readonly pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.DesyncReportHeader> desync_ = new pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.DesyncReportHeader>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.DesyncReportHeader> Desync {
      get { return desync_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDesyncsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDesyncsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!desync_.Equals(other.desync_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= desync_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      desync_.WriteTo(output, _repeated_desync_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += desync_.CalculateSize(_repeated_desync_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDesyncsResult other) {
      if (other == null) {
        return;
      }
      desync_.Add(other.desync_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            desync_.AddEntriesFrom(input, _repeated_desync_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListCrashesRequest : pb::IMessage<ListCrashesRequest> {
    private static readonly pb::MessageParser<ListCrashesRequest> _parser = new pb::MessageParser<ListCrashesRequest>(() => new ListCrashesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCrashesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashesRequest(ListCrashesRequest other) : this() {
      offset_ = other.offset_;
      limit_ = other.limit_;
      buildIdentifier_ = other.buildIdentifier_;
      crashIdentifier_ = other.crashIdentifier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashesRequest Clone() {
      return new ListCrashesRequest(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "build_identifier" field.</summary>
    public const int BuildIdentifierFieldNumber = 3;
    private string buildIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildIdentifier {
      get { return buildIdentifier_; }
      set {
        buildIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "crash_identifier" field.</summary>
    public const int CrashIdentifierFieldNumber = 4;
    private string crashIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CrashIdentifier {
      get { return crashIdentifier_; }
      set {
        crashIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCrashesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCrashesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (BuildIdentifier != other.BuildIdentifier) return false;
      if (CrashIdentifier != other.CrashIdentifier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (BuildIdentifier.Length != 0) hash ^= BuildIdentifier.GetHashCode();
      if (CrashIdentifier.Length != 0) hash ^= CrashIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (BuildIdentifier.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BuildIdentifier);
      }
      if (CrashIdentifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CrashIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (BuildIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildIdentifier);
      }
      if (CrashIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CrashIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCrashesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.BuildIdentifier.Length != 0) {
        BuildIdentifier = other.BuildIdentifier;
      }
      if (other.CrashIdentifier.Length != 0) {
        CrashIdentifier = other.CrashIdentifier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            BuildIdentifier = input.ReadString();
            break;
          }
          case 34: {
            CrashIdentifier = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListCrashesResult : pb::IMessage<ListCrashesResult> {
    private static readonly pb::MessageParser<ListCrashesResult> _parser = new pb::MessageParser<ListCrashesResult>(() => new ListCrashesResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCrashesResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashesResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashesResult(ListCrashesResult other) : this() {
      Collection = other.collection_ != null ? other.Collection.Clone() : null;
      reports_ = other.reports_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashesResult Clone() {
      return new ListCrashesResult(this);
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 1;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection collection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection Collection {
      get { return collection_; }
      set {
        collection_ = value;
      }
    }

    /// <summary>Field number for the "reports" field.</summary>
    public const int ReportsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashReportHeader> _repeated_reports_codec
        = pb::FieldCodec.ForMessage(18, global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashReportHeader.Parser);
    private readonly pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashReportHeader> reports_ = new pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashReportHeader>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashReportHeader> Reports {
      get { return reports_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCrashesResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCrashesResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Collection, other.Collection)) return false;
      if(!reports_.Equals(other.reports_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (collection_ != null) hash ^= Collection.GetHashCode();
      hash ^= reports_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (collection_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Collection);
      }
      reports_.WriteTo(output, _repeated_reports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (collection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Collection);
      }
      size += reports_.CalculateSize(_repeated_reports_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCrashesResult other) {
      if (other == null) {
        return;
      }
      if (other.collection_ != null) {
        if (collection_ == null) {
          collection_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection();
        }
        Collection.MergeFrom(other.Collection);
      }
      reports_.Add(other.reports_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (collection_ == null) {
              collection_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection();
            }
            input.ReadMessage(collection_);
            break;
          }
          case 18: {
            reports_.AddEntriesFrom(input, _repeated_reports_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListCrashBuildIdentifiersRequest : pb::IMessage<ListCrashBuildIdentifiersRequest> {
    private static readonly pb::MessageParser<ListCrashBuildIdentifiersRequest> _parser = new pb::MessageParser<ListCrashBuildIdentifiersRequest>(() => new ListCrashBuildIdentifiersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCrashBuildIdentifiersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashBuildIdentifiersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashBuildIdentifiersRequest(ListCrashBuildIdentifiersRequest other) : this() {
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashBuildIdentifiersRequest Clone() {
      return new ListCrashBuildIdentifiersRequest(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCrashBuildIdentifiersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCrashBuildIdentifiersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCrashBuildIdentifiersRequest other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListCrashBuildIdentifiersResult : pb::IMessage<ListCrashBuildIdentifiersResult> {
    private static readonly pb::MessageParser<ListCrashBuildIdentifiersResult> _parser = new pb::MessageParser<ListCrashBuildIdentifiersResult>(() => new ListCrashBuildIdentifiersResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCrashBuildIdentifiersResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashBuildIdentifiersResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashBuildIdentifiersResult(ListCrashBuildIdentifiersResult other) : this() {
      identifiers_ = other.identifiers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashBuildIdentifiersResult Clone() {
      return new ListCrashBuildIdentifiersResult(this);
    }

    /// <summary>Field number for the "identifiers" field.</summary>
    public const int IdentifiersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashBuildIdentifier> _repeated_identifiers_codec
        = pb::FieldCodec.ForMessage(10, global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashBuildIdentifier.Parser);
    private readonly pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashBuildIdentifier> identifiers_ = new pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashBuildIdentifier>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashBuildIdentifier> Identifiers {
      get { return identifiers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCrashBuildIdentifiersResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCrashBuildIdentifiersResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!identifiers_.Equals(other.identifiers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= identifiers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      identifiers_.WriteTo(output, _repeated_identifiers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += identifiers_.CalculateSize(_repeated_identifiers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCrashBuildIdentifiersResult other) {
      if (other == null) {
        return;
      }
      identifiers_.Add(other.identifiers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            identifiers_.AddEntriesFrom(input, _repeated_identifiers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListCrashCollectionsRequest : pb::IMessage<ListCrashCollectionsRequest> {
    private static readonly pb::MessageParser<ListCrashCollectionsRequest> _parser = new pb::MessageParser<ListCrashCollectionsRequest>(() => new ListCrashCollectionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCrashCollectionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashCollectionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashCollectionsRequest(ListCrashCollectionsRequest other) : this() {
      offset_ = other.offset_;
      limit_ = other.limit_;
      buildIdentifier_ = other.buildIdentifier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashCollectionsRequest Clone() {
      return new ListCrashCollectionsRequest(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "build_identifier" field.</summary>
    public const int BuildIdentifierFieldNumber = 3;
    private string buildIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildIdentifier {
      get { return buildIdentifier_; }
      set {
        buildIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCrashCollectionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCrashCollectionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (BuildIdentifier != other.BuildIdentifier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (BuildIdentifier.Length != 0) hash ^= BuildIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (BuildIdentifier.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BuildIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (BuildIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCrashCollectionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.BuildIdentifier.Length != 0) {
        BuildIdentifier = other.BuildIdentifier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            BuildIdentifier = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListCrashCollectionsResult : pb::IMessage<ListCrashCollectionsResult> {
    private static readonly pb::MessageParser<ListCrashCollectionsResult> _parser = new pb::MessageParser<ListCrashCollectionsResult>(() => new ListCrashCollectionsResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCrashCollectionsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ReportReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashCollectionsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashCollectionsResult(ListCrashCollectionsResult other) : this() {
      collections_ = other.collections_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCrashCollectionsResult Clone() {
      return new ListCrashCollectionsResult(this);
    }

    /// <summary>Field number for the "collections" field.</summary>
    public const int CollectionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection> _repeated_collections_codec
        = pb::FieldCodec.ForMessage(10, global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection.Parser);
    private readonly pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection> collections_ = new pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CrashCollection> Collections {
      get { return collections_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCrashCollectionsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCrashCollectionsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!collections_.Equals(other.collections_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= collections_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      collections_.WriteTo(output, _repeated_collections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += collections_.CalculateSize(_repeated_collections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCrashCollectionsResult other) {
      if (other == null) {
        return;
      }
      collections_.Add(other.collections_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            collections_.AddEntriesFrom(input, _repeated_collections_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
