// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tbadmin/account.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rising_Thunder_Server_CS.Protobufs.Tbadmin {

  /// <summary>Holder for reflection information generated from tbadmin/account.proto</summary>
  public static partial class AccountReflection {

    #region Descriptor
    /// <summary>File descriptor for tbadmin/account.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChV0YmFkbWluL2FjY291bnQucHJvdG8SB3RiYWRtaW4aEXRicnBjL3RicnBj",
            "LnByb3RvGhV0Ym1hdGNoL2FjY291bnQucHJvdG8aE3RibWF0Y2gvcXVlcnku",
            "cHJvdG8iRgoRTG9va3VwVXNlclJlcXVlc3QSEgoKYWNjb3VudF9pZBgBIAEo",
            "AxINCgVlbWFpbBgCIAEoCRIOCgZoYW5kbGUYAyABKAkiwwIKDFVzZXJDcml0",
            "ZXJpYRIjCgVlbWFpbBgBIAEoCzIULnRibWF0Y2guU3RyaW5nTWF0Y2gSJAoG",
            "aGFuZGxlGAIgASgLMhQudGJtYXRjaC5TdHJpbmdNYXRjaBIoCgpnaXZlbl9u",
            "YW1lGAMgASgLMhQudGJtYXRjaC5TdHJpbmdNYXRjaBIpCgtmYW1pbHlfbmFt",
            "ZRgEIAEoCzIULnRibWF0Y2guU3RyaW5nTWF0Y2gSFAoMY291bnRyeV9jb2Rl",
            "GAUgASgJEicKC2NyZWF0ZV90aW1lGAogASgLMhIudGJtYXRjaC5UaW1lUmFu",
            "Z2USJwoLbW9kaWZ5X3RpbWUYCyABKAsyEi50Ym1hdGNoLlRpbWVSYW5nZRIr",
            "Cg9sYXN0X2xvZ2luX3RpbWUYDCABKAsyEi50Ym1hdGNoLlRpbWVSYW5nZSKN",
            "AgoIVXNlclNvcnQSJwoFZmlyc3QYASABKA4yGC50YmFkbWluLlVzZXJTb3J0",
            "LlNvcnRCeRIoCgZzZWNvbmQYAiABKA4yGC50YmFkbWluLlVzZXJTb3J0LlNv",
            "cnRCeRISCgpkZXNjZW5kaW5nGAMgASgIIpkBCgZTb3J0QnkSEAoMU09SVF9C",
            "WV9aRVJPEAASDgoKQUNDT1VOVF9JRBABEgkKBUVNQUlMEAISCgoGSEFORExF",
            "EAMSDgoKR0lWRU5fTkFNRRAEEg8KC0ZBTUlMWV9OQU1FEAUSDwoLQ1JFQVRF",
            "X1RJTUUQBhIPCgtNT0RJRllfVElNRRAHEhMKD0xBU1RfTE9HSU5fVElNRRAI",
            "IjYKDEhhbmRsZUNoYW5nZRIMCgR0aW1lGAEgASgDEgsKA29sZBgCIAEoCRIL",
            "CgNuZXcYAyABKAkifQoSU2VhcmNoVXNlcnNSZXF1ZXN0EicKCGNyaXRlcmlh",
            "GAEgASgLMhUudGJhZG1pbi5Vc2VyQ3JpdGVyaWESHwoEc29ydBgCIAEoCzIR",
            "LnRiYWRtaW4uVXNlclNvcnQSDgoGb2Zmc2V0GAUgASgFEg0KBWxpbWl0GAYg",
            "ASgFIkoKEVNlYXJjaFVzZXJzUmVzdWx0EiAKBXVzZXJzGAEgAygLMhEudGJt",
            "YXRjaC5Vc2VySW5mbxITCgtlbmRfb2ZfZGF0YRgCIAEoCCJyChFVcGRhdGVV",
            "c2VyUmVxdWVzdBISCgphY2NvdW50X2lkGAEgASgDEiYKBHNwZWMYAiABKAsy",
            "GC50Ym1hdGNoLlVzZXJBY2NvdW50U3BlYxIhCgVwcmVmcxgDIAEoCzISLnRi",
            "bWF0Y2guVXNlclByZWZzIpoBChFDcmVhdGVVc2VyUmVxdWVzdBImCgRzcGVj",
            "GAEgASgLMhgudGJtYXRjaC5Vc2VyQWNjb3VudFNwZWMSIQoFcHJlZnMYAiAB",
            "KAsyEi50Ym1hdGNoLlVzZXJQcmVmcxIOCgZhY2Nlc3MYCiABKAUSKgoMbG9n",
            "aW5fc3RhdHVzGAsgASgOMhQudGJtYXRjaC5Mb2dpblN0YXR1cyImChBDcmVh",
            "dGVVc2VyUmVzdWx0EhIKCmFjY291bnRfaWQYASABKAMiZAocU2V0VXNlckNv",
            "bnRhY3RBZGRyZXNzUmVxdWVzdBISCgphY2NvdW50X2lkGAEgASgDEjAKD2Nv",
            "bnRhY3RfYWRkcmVzcxgCIAEoCzIXLnRibWF0Y2guQ29udGFjdEFkZHJlc3Mi",
            "ZgoUU2V0VXNlckFjY2Vzc1JlcXVlc3QSEgoKYWNjb3VudF9pZBgBIAEoAxIN",
            "CgVncmFudBgDIAEoBRIOCgZyZXZva2UYBCABKAUSGwoTX19kZXByZWNhdGVk",
            "X2FjY2VzcxgCIAEoBSJbChlTZXRVc2VyTG9naW5TdGF0dXNSZXF1ZXN0EhIK",
            "CmFjY291bnRfaWQYASABKAMSKgoMbG9naW5fc3RhdHVzGAIgASgOMhQudGJt",
            "YXRjaC5Mb2dpblN0YXR1cyJAChhSZXNldFVzZXJQYXNzd29yZFJlcXVlc3QS",
            "EgoKYWNjb3VudF9pZBgBIAEoAxIQCghwYXNzd29yZBgCIAEoCSInChFOdWtl",
            "SGFuZGxlUmVxdWVzdBISCgphY2NvdW50X2lkGAEgASgDIjoKEE51a2VIYW5k",
            "bGVSZXN1bHQSEgoKYWNjb3VudF9pZBgBIAEoAxISCgpuZXdfaGFuZGxlGAIg",
            "ASgJIi0KF0dldEhhbmRsZUhpc3RvcnlSZXF1ZXN0EhIKCmFjY291bnRfaWQY",
            "ASABKAMiUwoWR2V0SGFuZGxlSGlzdG9yeVJlc3VsdBISCgphY2NvdW50X2lk",
            "GAEgASgDEiUKBmNoYW5nZRgCIAMoCzIVLnRiYWRtaW4uSGFuZGxlQ2hhbmdl",
            "IsgCCiBTZW5kVXNlckVtYWlsTm90aWZpY2F0aW9uUmVxdWVzdBISCgphY2Nv",
            "dW50X2lkGAEgASgDEkIKBHR5cGUYAiABKA4yNC50YmFkbWluLlNlbmRVc2Vy",
            "RW1haWxOb3RpZmljYXRpb25SZXF1ZXN0Lk5vdGlmeVR5cGUSSwoMZnJpZW5k",
            "X2NvZGVzGAwgASgLMjUudGJhZG1pbi5TZW5kVXNlckVtYWlsTm90aWZpY2F0",
            "aW9uUmVxdWVzdC5GcmllbmRDb2Rlcxo3CgtGcmllbmRDb2RlcxISCgpjb2Rl",
            "X2NvdW50GAEgASgFEhQKDGFjY2Vzc19mbGFncxgCIAEoBSJGCgpOb3RpZnlU",
            "eXBlEhQKEE5PVElGWV9UWVBFX1pFUk8QABIQCgxBTFBIQV9BQ0NFU1MQARIQ",
            "CgxGUklFTkRfQ09ERVMQAjLlBgoTQWNjb3VudEFkbWluU2VydmljZRJBCgpM",
            "b29rdXBVc2VyEhoudGJhZG1pbi5Mb29rdXBVc2VyUmVxdWVzdBoRLnRibWF0",
            "Y2guVXNlckluZm8iBMjzGBUSTAoLU2VhcmNoVXNlcnMSGy50YmFkbWluLlNl",
            "YXJjaFVzZXJzUmVxdWVzdBoaLnRiYWRtaW4uU2VhcmNoVXNlcnNSZXN1bHQi",
            "BMjzGBUSSQoKQ3JlYXRlVXNlchIaLnRiYWRtaW4uQ3JlYXRlVXNlclJlcXVl",
            "c3QaGS50YmFkbWluLkNyZWF0ZVVzZXJSZXN1bHQiBMjzGBUSPAoKVXBkYXRl",
            "VXNlchIaLnRiYWRtaW4uVXBkYXRlVXNlclJlcXVlc3QaDC50YnJwYy5FbXB0",
            "eSIEyPMYFRJSChVTZXRVc2VyQ29udGFjdEFkZHJlc3MSJS50YmFkbWluLlNl",
            "dFVzZXJDb250YWN0QWRkcmVzc1JlcXVlc3QaDC50YnJwYy5FbXB0eSIEyPMY",
            "FRJCCg1TZXRVc2VyQWNjZXNzEh0udGJhZG1pbi5TZXRVc2VyQWNjZXNzUmVx",
            "dWVzdBoMLnRicnBjLkVtcHR5IgTI8xgVEkwKElNldFVzZXJMb2dpblN0YXR1",
            "cxIiLnRiYWRtaW4uU2V0VXNlckxvZ2luU3RhdHVzUmVxdWVzdBoMLnRicnBj",
            "LkVtcHR5IgTI8xgVEkoKEVJlc2V0VXNlclBhc3N3b3JkEiEudGJhZG1pbi5S",
            "ZXNldFVzZXJQYXNzd29yZFJlcXVlc3QaDC50YnJwYy5FbXB0eSIEyPMYFRJJ",
            "CgpOdWtlSGFuZGxlEhoudGJhZG1pbi5OdWtlSGFuZGxlUmVxdWVzdBoZLnRi",
            "YWRtaW4uTnVrZUhhbmRsZVJlc3VsdCIEyPMYFRJbChBHZXRIYW5kbGVIaXN0",
            "b3J5EiAudGJhZG1pbi5HZXRIYW5kbGVIaXN0b3J5UmVxdWVzdBofLnRiYWRt",
            "aW4uR2V0SGFuZGxlSGlzdG9yeVJlc3VsdCIEyPMYFRJaChlTZW5kVXNlckVt",
            "YWlsTm90aWZpY2F0aW9uEikudGJhZG1pbi5TZW5kVXNlckVtYWlsTm90aWZp",
            "Y2F0aW9uUmVxdWVzdBoMLnRicnBjLkVtcHR5IgTI8xgVYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Rising_Thunder_Server_CS.Protobufs.Tbrpc.TbrpcReflection.Descriptor, global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.AccountReflection.Descriptor, global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.QueryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.LookupUserRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.LookupUserRequest.Parser, new[]{ "AccountId", "Email", "Handle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserCriteria), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserCriteria.Parser, new[]{ "Email", "Handle", "GivenName", "FamilyName", "CountryCode", "CreateTime", "ModifyTime", "LastLoginTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort.Parser, new[]{ "First", "Second", "Descending" }, null, new[]{ typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort.Types.SortBy) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.HandleChange), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.HandleChange.Parser, new[]{ "Time", "Old", "New" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SearchUsersRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SearchUsersRequest.Parser, new[]{ "Criteria", "Sort", "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SearchUsersResult), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SearchUsersResult.Parser, new[]{ "Users", "EndOfData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UpdateUserRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UpdateUserRequest.Parser, new[]{ "AccountId", "Spec", "Prefs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CreateUserRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CreateUserRequest.Parser, new[]{ "Spec", "Prefs", "Access", "LoginStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CreateUserResult), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.CreateUserResult.Parser, new[]{ "AccountId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SetUserContactAddressRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SetUserContactAddressRequest.Parser, new[]{ "AccountId", "ContactAddress" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SetUserAccessRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SetUserAccessRequest.Parser, new[]{ "AccountId", "Grant", "Revoke", "DeprecatedAccess" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SetUserLoginStatusRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SetUserLoginStatusRequest.Parser, new[]{ "AccountId", "LoginStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ResetUserPasswordRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.ResetUserPasswordRequest.Parser, new[]{ "AccountId", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.NukeHandleRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.NukeHandleRequest.Parser, new[]{ "AccountId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.NukeHandleResult), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.NukeHandleResult.Parser, new[]{ "AccountId", "NewHandle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.GetHandleHistoryRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.GetHandleHistoryRequest.Parser, new[]{ "AccountId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.GetHandleHistoryResult), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.GetHandleHistoryResult.Parser, new[]{ "AccountId", "Change" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Parser, new[]{ "AccountId", "Type", "FriendCodes" }, null, new[]{ typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Types.NotifyType) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Types.FriendCodes), global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Types.FriendCodes.Parser, new[]{ "CodeCount", "AccessFlags" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Admin user lookups.
  /// </summary>
  public sealed partial class LookupUserRequest : pb::IMessage<LookupUserRequest> {
    private static readonly pb::MessageParser<LookupUserRequest> _parser = new pb::MessageParser<LookupUserRequest>(() => new LookupUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LookupUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LookupUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LookupUserRequest(LookupUserRequest other) : this() {
      accountId_ = other.accountId_;
      email_ = other.email_;
      handle_ = other.handle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LookupUserRequest Clone() {
      return new LookupUserRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    /// <summary>
    /// Find user account ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    /// <summary>
    /// Find user by e-mail address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 3;
    private string handle_ = "";
    /// <summary>
    /// Find user by player handle.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Handle {
      get { return handle_; }
      set {
        handle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LookupUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LookupUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (Email != other.Email) return false;
      if (Handle != other.Handle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Handle.Length != 0) hash ^= Handle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (Handle.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Handle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Handle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Handle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LookupUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Handle.Length != 0) {
        Handle = other.Handle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            Handle = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// How to match a user search.
  /// </summary>
  public sealed partial class UserCriteria : pb::IMessage<UserCriteria> {
    private static readonly pb::MessageParser<UserCriteria> _parser = new pb::MessageParser<UserCriteria>(() => new UserCriteria());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserCriteria> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCriteria() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCriteria(UserCriteria other) : this() {
      Email = other.email_ != null ? other.Email.Clone() : null;
      Handle = other.handle_ != null ? other.Handle.Clone() : null;
      GivenName = other.givenName_ != null ? other.GivenName.Clone() : null;
      FamilyName = other.familyName_ != null ? other.FamilyName.Clone() : null;
      countryCode_ = other.countryCode_;
      CreateTime = other.createTime_ != null ? other.CreateTime.Clone() : null;
      ModifyTime = other.modifyTime_ != null ? other.ModifyTime.Clone() : null;
      LastLoginTime = other.lastLoginTime_ != null ? other.LastLoginTime.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCriteria Clone() {
      return new UserCriteria(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch Email {
      get { return email_; }
      set {
        email_ = value;
      }
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch handle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch Handle {
      get { return handle_; }
      set {
        handle_ = value;
      }
    }

    /// <summary>Field number for the "given_name" field.</summary>
    public const int GivenNameFieldNumber = 3;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch givenName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch GivenName {
      get { return givenName_; }
      set {
        givenName_ = value;
      }
    }

    /// <summary>Field number for the "family_name" field.</summary>
    public const int FamilyNameFieldNumber = 4;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch familyName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch FamilyName {
      get { return familyName_; }
      set {
        familyName_ = value;
      }
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 5;
    private string countryCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 10;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "modify_time" field.</summary>
    public const int ModifyTimeFieldNumber = 11;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange modifyTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange ModifyTime {
      get { return modifyTime_; }
      set {
        modifyTime_ = value;
      }
    }

    /// <summary>Field number for the "last_login_time" field.</summary>
    public const int LastLoginTimeFieldNumber = 12;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange lastLoginTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange LastLoginTime {
      get { return lastLoginTime_; }
      set {
        lastLoginTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserCriteria);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserCriteria other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Email, other.Email)) return false;
      if (!object.Equals(Handle, other.Handle)) return false;
      if (!object.Equals(GivenName, other.GivenName)) return false;
      if (!object.Equals(FamilyName, other.FamilyName)) return false;
      if (CountryCode != other.CountryCode) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(ModifyTime, other.ModifyTime)) return false;
      if (!object.Equals(LastLoginTime, other.LastLoginTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (email_ != null) hash ^= Email.GetHashCode();
      if (handle_ != null) hash ^= Handle.GetHashCode();
      if (givenName_ != null) hash ^= GivenName.GetHashCode();
      if (familyName_ != null) hash ^= FamilyName.GetHashCode();
      if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (modifyTime_ != null) hash ^= ModifyTime.GetHashCode();
      if (lastLoginTime_ != null) hash ^= LastLoginTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (email_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Email);
      }
      if (handle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Handle);
      }
      if (givenName_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GivenName);
      }
      if (familyName_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FamilyName);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CountryCode);
      }
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (modifyTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ModifyTime);
      }
      if (lastLoginTime_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(LastLoginTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (email_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Email);
      }
      if (handle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Handle);
      }
      if (givenName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GivenName);
      }
      if (familyName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FamilyName);
      }
      if (CountryCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (modifyTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModifyTime);
      }
      if (lastLoginTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastLoginTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserCriteria other) {
      if (other == null) {
        return;
      }
      if (other.email_ != null) {
        if (email_ == null) {
          email_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch();
        }
        Email.MergeFrom(other.Email);
      }
      if (other.handle_ != null) {
        if (handle_ == null) {
          handle_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch();
        }
        Handle.MergeFrom(other.Handle);
      }
      if (other.givenName_ != null) {
        if (givenName_ == null) {
          givenName_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch();
        }
        GivenName.MergeFrom(other.GivenName);
      }
      if (other.familyName_ != null) {
        if (familyName_ == null) {
          familyName_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch();
        }
        FamilyName.MergeFrom(other.FamilyName);
      }
      if (other.CountryCode.Length != 0) {
        CountryCode = other.CountryCode;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          createTime_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.modifyTime_ != null) {
        if (modifyTime_ == null) {
          modifyTime_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange();
        }
        ModifyTime.MergeFrom(other.ModifyTime);
      }
      if (other.lastLoginTime_ != null) {
        if (lastLoginTime_ == null) {
          lastLoginTime_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange();
        }
        LastLoginTime.MergeFrom(other.LastLoginTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (email_ == null) {
              email_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch();
            }
            input.ReadMessage(email_);
            break;
          }
          case 18: {
            if (handle_ == null) {
              handle_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch();
            }
            input.ReadMessage(handle_);
            break;
          }
          case 26: {
            if (givenName_ == null) {
              givenName_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch();
            }
            input.ReadMessage(givenName_);
            break;
          }
          case 34: {
            if (familyName_ == null) {
              familyName_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.StringMatch();
            }
            input.ReadMessage(familyName_);
            break;
          }
          case 42: {
            CountryCode = input.ReadString();
            break;
          }
          case 82: {
            if (createTime_ == null) {
              createTime_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange();
            }
            input.ReadMessage(createTime_);
            break;
          }
          case 90: {
            if (modifyTime_ == null) {
              modifyTime_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange();
            }
            input.ReadMessage(modifyTime_);
            break;
          }
          case 98: {
            if (lastLoginTime_ == null) {
              lastLoginTime_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.TimeRange();
            }
            input.ReadMessage(lastLoginTime_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// How to order a user search.
  /// </summary>
  public sealed partial class UserSort : pb::IMessage<UserSort> {
    private static readonly pb::MessageParser<UserSort> _parser = new pb::MessageParser<UserSort>(() => new UserSort());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserSort> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSort() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSort(UserSort other) : this() {
      first_ = other.first_;
      second_ = other.second_;
      descending_ = other.descending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSort Clone() {
      return new UserSort(this);
    }

    /// <summary>Field number for the "first" field.</summary>
    public const int FirstFieldNumber = 1;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort.Types.SortBy first_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort.Types.SortBy First {
      get { return first_; }
      set {
        first_ = value;
      }
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort.Types.SortBy second_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort.Types.SortBy Second {
      get { return second_; }
      set {
        second_ = value;
      }
    }

    /// <summary>Field number for the "descending" field.</summary>
    public const int DescendingFieldNumber = 3;
    private bool descending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Descending {
      get { return descending_; }
      set {
        descending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserSort);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserSort other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (First != other.First) return false;
      if (Second != other.Second) return false;
      if (Descending != other.Descending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (First != 0) hash ^= First.GetHashCode();
      if (Second != 0) hash ^= Second.GetHashCode();
      if (Descending != false) hash ^= Descending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (First != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) First);
      }
      if (Second != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Second);
      }
      if (Descending != false) {
        output.WriteRawTag(24);
        output.WriteBool(Descending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (First != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) First);
      }
      if (Second != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Second);
      }
      if (Descending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserSort other) {
      if (other == null) {
        return;
      }
      if (other.First != 0) {
        First = other.First;
      }
      if (other.Second != 0) {
        Second = other.Second;
      }
      if (other.Descending != false) {
        Descending = other.Descending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            first_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort.Types.SortBy) input.ReadEnum();
            break;
          }
          case 16: {
            second_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort.Types.SortBy) input.ReadEnum();
            break;
          }
          case 24: {
            Descending = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UserSort message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SortBy {
        [pbr::OriginalName("SORT_BY_ZERO")] Zero = 0,
        [pbr::OriginalName("ACCOUNT_ID")] AccountId = 1,
        [pbr::OriginalName("EMAIL")] Email = 2,
        [pbr::OriginalName("HANDLE")] Handle = 3,
        [pbr::OriginalName("GIVEN_NAME")] GivenName = 4,
        [pbr::OriginalName("FAMILY_NAME")] FamilyName = 5,
        [pbr::OriginalName("CREATE_TIME")] CreateTime = 6,
        [pbr::OriginalName("MODIFY_TIME")] ModifyTime = 7,
        [pbr::OriginalName("LAST_LOGIN_TIME")] LastLoginTime = 8,
      }

    }
    #endregion

  }

  public sealed partial class HandleChange : pb::IMessage<HandleChange> {
    private static readonly pb::MessageParser<HandleChange> _parser = new pb::MessageParser<HandleChange>(() => new HandleChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandleChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandleChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandleChange(HandleChange other) : this() {
      time_ = other.time_;
      old_ = other.old_;
      new_ = other.new_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandleChange Clone() {
      return new HandleChange(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private long time_;
    /// <summary>
    /// Unix timestamp of the handle change time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "old" field.</summary>
    public const int OldFieldNumber = 2;
    private string old_ = "";
    /// <summary>
    /// Old handle.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Old {
      get { return old_; }
      set {
        old_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new" field.</summary>
    public const int NewFieldNumber = 3;
    private string new_ = "";
    /// <summary>
    /// New handle.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string New {
      get { return new_; }
      set {
        new_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandleChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandleChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      if (Old != other.Old) return false;
      if (New != other.New) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (Old.Length != 0) hash ^= Old.GetHashCode();
      if (New.Length != 0) hash ^= New.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Time != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Time);
      }
      if (Old.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Old);
      }
      if (New.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(New);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (Old.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Old);
      }
      if (New.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(New);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandleChange other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      if (other.Old.Length != 0) {
        Old = other.Old;
      }
      if (other.New.Length != 0) {
        New = other.New;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadInt64();
            break;
          }
          case 18: {
            Old = input.ReadString();
            break;
          }
          case 26: {
            New = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Admin user search requests.
  /// </summary>
  public sealed partial class SearchUsersRequest : pb::IMessage<SearchUsersRequest> {
    private static readonly pb::MessageParser<SearchUsersRequest> _parser = new pb::MessageParser<SearchUsersRequest>(() => new SearchUsersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchUsersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUsersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUsersRequest(SearchUsersRequest other) : this() {
      Criteria = other.criteria_ != null ? other.Criteria.Clone() : null;
      Sort = other.sort_ != null ? other.Sort.Clone() : null;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUsersRequest Clone() {
      return new SearchUsersRequest(this);
    }

    /// <summary>Field number for the "criteria" field.</summary>
    public const int CriteriaFieldNumber = 1;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserCriteria criteria_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserCriteria Criteria {
      get { return criteria_; }
      set {
        criteria_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private int offset_;
    /// <summary>
    /// Pagination.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 6;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchUsersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchUsersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Criteria, other.Criteria)) return false;
      if (!object.Equals(Sort, other.Sort)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (criteria_ != null) hash ^= Criteria.GetHashCode();
      if (sort_ != null) hash ^= Sort.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (criteria_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Criteria);
      }
      if (sort_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sort);
      }
      if (Offset != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (criteria_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Criteria);
      }
      if (sort_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sort);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchUsersRequest other) {
      if (other == null) {
        return;
      }
      if (other.criteria_ != null) {
        if (criteria_ == null) {
          criteria_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserCriteria();
        }
        Criteria.MergeFrom(other.Criteria);
      }
      if (other.sort_ != null) {
        if (sort_ == null) {
          sort_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort();
        }
        Sort.MergeFrom(other.Sort);
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (criteria_ == null) {
              criteria_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserCriteria();
            }
            input.ReadMessage(criteria_);
            break;
          }
          case 18: {
            if (sort_ == null) {
              sort_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.UserSort();
            }
            input.ReadMessage(sort_);
            break;
          }
          case 40: {
            Offset = input.ReadInt32();
            break;
          }
          case 48: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchUsersResult : pb::IMessage<SearchUsersResult> {
    private static readonly pb::MessageParser<SearchUsersResult> _parser = new pb::MessageParser<SearchUsersResult>(() => new SearchUsersResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchUsersResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUsersResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUsersResult(SearchUsersResult other) : this() {
      users_ = other.users_.Clone();
      endOfData_ = other.endOfData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUsersResult Clone() {
      return new SearchUsersResult(this);
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserInfo> _repeated_users_codec
        = pb::FieldCodec.ForMessage(10, global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserInfo.Parser);
    private readonly pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserInfo> users_ = new pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserInfo>();
    /// <summary>
    /// Results do not include preferences or contact address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserInfo> Users {
      get { return users_; }
    }

    /// <summary>Field number for the "end_of_data" field.</summary>
    public const int EndOfDataFieldNumber = 2;
    private bool endOfData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EndOfData {
      get { return endOfData_; }
      set {
        endOfData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchUsersResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchUsersResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!users_.Equals(other.users_)) return false;
      if (EndOfData != other.EndOfData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= users_.GetHashCode();
      if (EndOfData != false) hash ^= EndOfData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      users_.WriteTo(output, _repeated_users_codec);
      if (EndOfData != false) {
        output.WriteRawTag(16);
        output.WriteBool(EndOfData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += users_.CalculateSize(_repeated_users_codec);
      if (EndOfData != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchUsersResult other) {
      if (other == null) {
        return;
      }
      users_.Add(other.users_);
      if (other.EndOfData != false) {
        EndOfData = other.EndOfData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            users_.AddEntriesFrom(input, _repeated_users_codec);
            break;
          }
          case 16: {
            EndOfData = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Admin account changes.
  /// </summary>
  public sealed partial class UpdateUserRequest : pb::IMessage<UpdateUserRequest> {
    private static readonly pb::MessageParser<UpdateUserRequest> _parser = new pb::MessageParser<UpdateUserRequest>(() => new UpdateUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserRequest(UpdateUserRequest other) : this() {
      accountId_ = other.accountId_;
      Spec = other.spec_ != null ? other.Spec.Clone() : null;
      Prefs = other.prefs_ != null ? other.Prefs.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateUserRequest Clone() {
      return new UpdateUserRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec spec_;
    /// <summary>
    /// Changes to account record.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "prefs" field.</summary>
    public const int PrefsFieldNumber = 3;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs prefs_;
    /// <summary>
    /// Changes to preferences.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs Prefs {
      get { return prefs_; }
      set {
        prefs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Prefs, other.Prefs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (prefs_ != null) hash ^= Prefs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (prefs_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Prefs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (prefs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prefs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          spec_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.prefs_ != null) {
        if (prefs_ == null) {
          prefs_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs();
        }
        Prefs.MergeFrom(other.Prefs);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 18: {
            if (spec_ == null) {
              spec_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec();
            }
            input.ReadMessage(spec_);
            break;
          }
          case 26: {
            if (prefs_ == null) {
              prefs_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs();
            }
            input.ReadMessage(prefs_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Create a new user.
  /// </summary>
  public sealed partial class CreateUserRequest : pb::IMessage<CreateUserRequest> {
    private static readonly pb::MessageParser<CreateUserRequest> _parser = new pb::MessageParser<CreateUserRequest>(() => new CreateUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserRequest(CreateUserRequest other) : this() {
      Spec = other.spec_ != null ? other.Spec.Clone() : null;
      Prefs = other.prefs_ != null ? other.Prefs.Clone() : null;
      access_ = other.access_;
      loginStatus_ = other.loginStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserRequest Clone() {
      return new CreateUserRequest(this);
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 1;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec spec_;
    /// <summary>
    /// New account owner, identifiers and authentication.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "prefs" field.</summary>
    public const int PrefsFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs prefs_;
    /// <summary>
    /// preferences.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs Prefs {
      get { return prefs_; }
      set {
        prefs_ = value;
      }
    }

    /// <summary>Field number for the "access" field.</summary>
    public const int AccessFieldNumber = 10;
    private int access_;
    /// <summary>
    /// Permission bits for the new account.  Can't be more
    /// permissive than the invoking account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Access {
      get { return access_; }
      set {
        access_ = value;
      }
    }

    /// <summary>Field number for the "login_status" field.</summary>
    public const int LoginStatusFieldNumber = 11;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.LoginStatus loginStatus_ = 0;
    /// <summary>
    /// Login state of the account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.LoginStatus LoginStatus {
      get { return loginStatus_; }
      set {
        loginStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Prefs, other.Prefs)) return false;
      if (Access != other.Access) return false;
      if (LoginStatus != other.LoginStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (prefs_ != null) hash ^= Prefs.GetHashCode();
      if (Access != 0) hash ^= Access.GetHashCode();
      if (LoginStatus != 0) hash ^= LoginStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (prefs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Prefs);
      }
      if (Access != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Access);
      }
      if (LoginStatus != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) LoginStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (prefs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prefs);
      }
      if (Access != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Access);
      }
      if (LoginStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LoginStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          spec_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.prefs_ != null) {
        if (prefs_ == null) {
          prefs_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs();
        }
        Prefs.MergeFrom(other.Prefs);
      }
      if (other.Access != 0) {
        Access = other.Access;
      }
      if (other.LoginStatus != 0) {
        LoginStatus = other.LoginStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spec_ == null) {
              spec_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserAccountSpec();
            }
            input.ReadMessage(spec_);
            break;
          }
          case 18: {
            if (prefs_ == null) {
              prefs_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.UserPrefs();
            }
            input.ReadMessage(prefs_);
            break;
          }
          case 80: {
            Access = input.ReadInt32();
            break;
          }
          case 88: {
            loginStatus_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.LoginStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateUserResult : pb::IMessage<CreateUserResult> {
    private static readonly pb::MessageParser<CreateUserResult> _parser = new pb::MessageParser<CreateUserResult>(() => new CreateUserResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateUserResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserResult(CreateUserResult other) : this() {
      accountId_ = other.accountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUserResult Clone() {
      return new CreateUserResult(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateUserResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateUserResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateUserResult other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Update the user's contact address.
  /// </summary>
  public sealed partial class SetUserContactAddressRequest : pb::IMessage<SetUserContactAddressRequest> {
    private static readonly pb::MessageParser<SetUserContactAddressRequest> _parser = new pb::MessageParser<SetUserContactAddressRequest>(() => new SetUserContactAddressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUserContactAddressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserContactAddressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserContactAddressRequest(SetUserContactAddressRequest other) : this() {
      accountId_ = other.accountId_;
      ContactAddress = other.contactAddress_ != null ? other.ContactAddress.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserContactAddressRequest Clone() {
      return new SetUserContactAddressRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "contact_address" field.</summary>
    public const int ContactAddressFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ContactAddress contactAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ContactAddress ContactAddress {
      get { return contactAddress_; }
      set {
        contactAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUserContactAddressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUserContactAddressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (!object.Equals(ContactAddress, other.ContactAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (contactAddress_ != null) hash ^= ContactAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (contactAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContactAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (contactAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContactAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUserContactAddressRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.contactAddress_ != null) {
        if (contactAddress_ == null) {
          contactAddress_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ContactAddress();
        }
        ContactAddress.MergeFrom(other.ContactAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 18: {
            if (contactAddress_ == null) {
              contactAddress_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.ContactAddress();
            }
            input.ReadMessage(contactAddress_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Change permission bits for a user account.
  /// </summary>
  public sealed partial class SetUserAccessRequest : pb::IMessage<SetUserAccessRequest> {
    private static readonly pb::MessageParser<SetUserAccessRequest> _parser = new pb::MessageParser<SetUserAccessRequest>(() => new SetUserAccessRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUserAccessRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserAccessRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserAccessRequest(SetUserAccessRequest other) : this() {
      accountId_ = other.accountId_;
      grant_ = other.grant_;
      revoke_ = other.revoke_;
      DeprecatedAccess_ = other.DeprecatedAccess_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserAccessRequest Clone() {
      return new SetUserAccessRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "grant" field.</summary>
    public const int GrantFieldNumber = 3;
    private int grant_;
    /// <summary>
    /// Roles to grant.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Grant {
      get { return grant_; }
      set {
        grant_ = value;
      }
    }

    /// <summary>Field number for the "revoke" field.</summary>
    public const int RevokeFieldNumber = 4;
    private int revoke_;
    /// <summary>
    /// Roles to revoke.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Revoke {
      get { return revoke_; }
      set {
        revoke_ = value;
      }
    }

    /// <summary>Field number for the "__deprecated_access" field.</summary>
    public const int DeprecatedAccessFieldNumber = 2;
    private int DeprecatedAccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeprecatedAccess {
      get { return DeprecatedAccess_; }
      set {
        DeprecatedAccess_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUserAccessRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUserAccessRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (Grant != other.Grant) return false;
      if (Revoke != other.Revoke) return false;
      if (DeprecatedAccess != other.DeprecatedAccess) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (Grant != 0) hash ^= Grant.GetHashCode();
      if (Revoke != 0) hash ^= Revoke.GetHashCode();
      if (DeprecatedAccess != 0) hash ^= DeprecatedAccess.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (DeprecatedAccess != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DeprecatedAccess);
      }
      if (Grant != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Grant);
      }
      if (Revoke != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Revoke);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (Grant != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Grant);
      }
      if (Revoke != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Revoke);
      }
      if (DeprecatedAccess != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeprecatedAccess);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUserAccessRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.Grant != 0) {
        Grant = other.Grant;
      }
      if (other.Revoke != 0) {
        Revoke = other.Revoke;
      }
      if (other.DeprecatedAccess != 0) {
        DeprecatedAccess = other.DeprecatedAccess;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 16: {
            DeprecatedAccess = input.ReadInt32();
            break;
          }
          case 24: {
            Grant = input.ReadInt32();
            break;
          }
          case 32: {
            Revoke = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Set the login state of an account.
  /// </summary>
  public sealed partial class SetUserLoginStatusRequest : pb::IMessage<SetUserLoginStatusRequest> {
    private static readonly pb::MessageParser<SetUserLoginStatusRequest> _parser = new pb::MessageParser<SetUserLoginStatusRequest>(() => new SetUserLoginStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUserLoginStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserLoginStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserLoginStatusRequest(SetUserLoginStatusRequest other) : this() {
      accountId_ = other.accountId_;
      loginStatus_ = other.loginStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserLoginStatusRequest Clone() {
      return new SetUserLoginStatusRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "login_status" field.</summary>
    public const int LoginStatusFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.LoginStatus loginStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.LoginStatus LoginStatus {
      get { return loginStatus_; }
      set {
        loginStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUserLoginStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUserLoginStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (LoginStatus != other.LoginStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (LoginStatus != 0) hash ^= LoginStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (LoginStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) LoginStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (LoginStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LoginStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUserLoginStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.LoginStatus != 0) {
        LoginStatus = other.LoginStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 16: {
            loginStatus_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbmatch.LoginStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Set the account password to the one given.
  /// </summary>
  public sealed partial class ResetUserPasswordRequest : pb::IMessage<ResetUserPasswordRequest> {
    private static readonly pb::MessageParser<ResetUserPasswordRequest> _parser = new pb::MessageParser<ResetUserPasswordRequest>(() => new ResetUserPasswordRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetUserPasswordRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetUserPasswordRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetUserPasswordRequest(ResetUserPasswordRequest other) : this() {
      accountId_ = other.accountId_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetUserPasswordRequest Clone() {
      return new ResetUserPasswordRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetUserPasswordRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetUserPasswordRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetUserPasswordRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NukeHandleRequest : pb::IMessage<NukeHandleRequest> {
    private static readonly pb::MessageParser<NukeHandleRequest> _parser = new pb::MessageParser<NukeHandleRequest>(() => new NukeHandleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NukeHandleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NukeHandleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NukeHandleRequest(NukeHandleRequest other) : this() {
      accountId_ = other.accountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NukeHandleRequest Clone() {
      return new NukeHandleRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    /// <summary>
    /// Account with the offensive handle.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NukeHandleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NukeHandleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NukeHandleRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NukeHandleResult : pb::IMessage<NukeHandleResult> {
    private static readonly pb::MessageParser<NukeHandleResult> _parser = new pb::MessageParser<NukeHandleResult>(() => new NukeHandleResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NukeHandleResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NukeHandleResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NukeHandleResult(NukeHandleResult other) : this() {
      accountId_ = other.accountId_;
      newHandle_ = other.newHandle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NukeHandleResult Clone() {
      return new NukeHandleResult(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "new_handle" field.</summary>
    public const int NewHandleFieldNumber = 2;
    private string newHandle_ = "";
    /// <summary>
    /// New handle assigned to the account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewHandle {
      get { return newHandle_; }
      set {
        newHandle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NukeHandleResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NukeHandleResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (NewHandle != other.NewHandle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (NewHandle.Length != 0) hash ^= NewHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (NewHandle.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (NewHandle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NukeHandleResult other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.NewHandle.Length != 0) {
        NewHandle = other.NewHandle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 18: {
            NewHandle = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetHandleHistoryRequest : pb::IMessage<GetHandleHistoryRequest> {
    private static readonly pb::MessageParser<GetHandleHistoryRequest> _parser = new pb::MessageParser<GetHandleHistoryRequest>(() => new GetHandleHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHandleHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHandleHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHandleHistoryRequest(GetHandleHistoryRequest other) : this() {
      accountId_ = other.accountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHandleHistoryRequest Clone() {
      return new GetHandleHistoryRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHandleHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHandleHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHandleHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetHandleHistoryResult : pb::IMessage<GetHandleHistoryResult> {
    private static readonly pb::MessageParser<GetHandleHistoryResult> _parser = new pb::MessageParser<GetHandleHistoryResult>(() => new GetHandleHistoryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHandleHistoryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHandleHistoryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHandleHistoryResult(GetHandleHistoryResult other) : this() {
      accountId_ = other.accountId_;
      change_ = other.change_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHandleHistoryResult Clone() {
      return new GetHandleHistoryResult(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "change" field.</summary>
    public const int ChangeFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.HandleChange> _repeated_change_codec
        = pb::FieldCodec.ForMessage(18, global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.HandleChange.Parser);
    private readonly pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.HandleChange> change_ = new pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.HandleChange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.HandleChange> Change {
      get { return change_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHandleHistoryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHandleHistoryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if(!change_.Equals(other.change_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      hash ^= change_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      change_.WriteTo(output, _repeated_change_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      size += change_.CalculateSize(_repeated_change_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHandleHistoryResult other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      change_.Add(other.change_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 18: {
            change_.AddEntriesFrom(input, _repeated_change_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendUserEmailNotificationRequest : pb::IMessage<SendUserEmailNotificationRequest> {
    private static readonly pb::MessageParser<SendUserEmailNotificationRequest> _parser = new pb::MessageParser<SendUserEmailNotificationRequest>(() => new SendUserEmailNotificationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendUserEmailNotificationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.AccountReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendUserEmailNotificationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendUserEmailNotificationRequest(SendUserEmailNotificationRequest other) : this() {
      accountId_ = other.accountId_;
      type_ = other.type_;
      FriendCodes = other.friendCodes_ != null ? other.FriendCodes.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendUserEmailNotificationRequest Clone() {
      return new SendUserEmailNotificationRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private long accountId_;
    /// <summary>
    /// Target account.  Must have a validated e-mail.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Types.NotifyType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Types.NotifyType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "friend_codes" field.</summary>
    public const int FriendCodesFieldNumber = 12;
    private global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Types.FriendCodes friendCodes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Types.FriendCodes FriendCodes {
      get { return friendCodes_; }
      set {
        friendCodes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendUserEmailNotificationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendUserEmailNotificationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(FriendCodes, other.FriendCodes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0L) hash ^= AccountId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (friendCodes_ != null) hash ^= FriendCodes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountId);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (friendCodes_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(FriendCodes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (friendCodes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendCodes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendUserEmailNotificationRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0L) {
        AccountId = other.AccountId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.friendCodes_ != null) {
        if (friendCodes_ == null) {
          friendCodes_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Types.FriendCodes();
        }
        FriendCodes.MergeFrom(other.FriendCodes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt64();
            break;
          }
          case 16: {
            type_ = (global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Types.NotifyType) input.ReadEnum();
            break;
          }
          case 98: {
            if (friendCodes_ == null) {
              friendCodes_ = new global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Types.FriendCodes();
            }
            input.ReadMessage(friendCodes_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SendUserEmailNotificationRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum NotifyType {
        [pbr::OriginalName("NOTIFY_TYPE_ZERO")] Zero = 0,
        /// <summary>
        /// "Welcome to the Rising Thunder alpha!"
        /// </summary>
        [pbr::OriginalName("ALPHA_ACCESS")] AlphaAccess = 1,
        /// <summary>
        /// Access codes to give out.
        /// </summary>
        [pbr::OriginalName("FRIEND_CODES")] FriendCodes = 2,
      }

      public sealed partial class FriendCodes : pb::IMessage<FriendCodes> {
        private static readonly pb::MessageParser<FriendCodes> _parser = new pb::MessageParser<FriendCodes>(() => new FriendCodes());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FriendCodes> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rising_Thunder_Server_CS.Protobufs.Tbadmin.SendUserEmailNotificationRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FriendCodes() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FriendCodes(FriendCodes other) : this() {
          codeCount_ = other.codeCount_;
          accessFlags_ = other.accessFlags_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FriendCodes Clone() {
          return new FriendCodes(this);
        }

        /// <summary>Field number for the "code_count" field.</summary>
        public const int CodeCountFieldNumber = 1;
        private int codeCount_;
        /// <summary>
        /// How many codes to generate and include in the mail.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CodeCount {
          get { return codeCount_; }
          set {
            codeCount_ = value;
          }
        }

        /// <summary>Field number for the "access_flags" field.</summary>
        public const int AccessFlagsFieldNumber = 2;
        private int accessFlags_;
        /// <summary>
        /// Access flags the codes will bestow.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AccessFlags {
          get { return accessFlags_; }
          set {
            accessFlags_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FriendCodes);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FriendCodes other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CodeCount != other.CodeCount) return false;
          if (AccessFlags != other.AccessFlags) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CodeCount != 0) hash ^= CodeCount.GetHashCode();
          if (AccessFlags != 0) hash ^= AccessFlags.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CodeCount != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(CodeCount);
          }
          if (AccessFlags != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(AccessFlags);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CodeCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CodeCount);
          }
          if (AccessFlags != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccessFlags);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FriendCodes other) {
          if (other == null) {
            return;
          }
          if (other.CodeCount != 0) {
            CodeCount = other.CodeCount;
          }
          if (other.AccessFlags != 0) {
            AccessFlags = other.AccessFlags;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                CodeCount = input.ReadInt32();
                break;
              }
              case 16: {
                AccessFlags = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
